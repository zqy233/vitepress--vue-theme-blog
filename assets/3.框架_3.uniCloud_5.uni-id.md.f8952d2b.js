import{_ as e,o as n,c as i,a as o}from"./app.bfa9bd4b.js";const g=JSON.parse('{"title":"uni-id","description":"","frontmatter":{},"headers":[{"level":2,"title":"如何使用","slug":"如何使用","link":"#如何使用","children":[{"level":3,"title":"第一步、导入uni-id-pages","slug":"第一步、导入uni-id-pages","link":"#第一步、导入uni-id-pages","children":[]},{"level":3,"title":"第二步、创建uni-id的云端配置文件","slug":"第二步、创建uni-id的云端配置文件","link":"#第二步、创建uni-id的云端配置文件","children":[]}]},{"level":2,"title":"uni-id-common","slug":"uni-id-common","link":"#uni-id-common","children":[]},{"level":2,"title":"公共模块","slug":"公共模块","link":"#公共模块","children":[]},{"level":2,"title":"RBAC模型","slug":"rbac模型","link":"#rbac模型","children":[]},{"level":2,"title":"uni-id-users表","slug":"uni-id-users表","link":"#uni-id-users表","children":[]}],"relativePath":"3.框架/3.uniCloud/5.uni-id.md","lastUpdated":1720835436694}'),a={name:"3.框架/3.uniCloud/5.uni-id.md"},d=o(`<h1 id="uni-id" tabindex="-1">uni-id <a class="header-anchor" href="#uni-id" aria-hidden="true">#</a></h1><blockquote><p><a href="https://uniapp.dcloud.net.cn/uniCloud/uni-id-pages.html" target="_blank" rel="noreferrer">https://uniapp.dcloud.net.cn/uniCloud/uni-id-pages.html</a></p></blockquote><h2 id="如何使用" tabindex="-1">如何使用 <a class="header-anchor" href="#如何使用" aria-hidden="true">#</a></h2><h3 id="第一步、导入uni-id-pages" tabindex="-1">第一步、导入uni-id-pages <a class="header-anchor" href="#第一步、导入uni-id-pages" aria-hidden="true">#</a></h3><p><code>uni-id-pages</code>，是<code>uni-id</code>体系的一部分</p><p>它基于<code>uni-id-common</code>提供了一批现成的、开源的、登录注册账户管理相关的前端页面和云端云对象</p><ol><li>在插件市场导入<a href="https://ext.dcloud.net.cn/plugin?name=uni-id-pages" target="_blank" rel="noreferrer">https://ext.dcloud.net.cn/plugin?name=uni-id-pages</a></li><li>调整项目的pages.json，<code>uni_modules/uni-id-pages/pages/login/login-withpwd</code>移到第一项</li><li>这时运行到浏览器会显示登录注册页面，但注册时会提示<code>Invalid uni-id config file</code></li></ol><h3 id="第二步、创建uni-id的云端配置文件" tabindex="-1">第二步、创建uni-id的云端配置文件 <a class="header-anchor" href="#第二步、创建uni-id的云端配置文件" aria-hidden="true">#</a></h3><blockquote><p><a href="https://uniapp.dcloud.net.cn/uniCloud/uni-id-summary.html#config" target="_blank" rel="noreferrer">https://uniapp.dcloud.net.cn/uniCloud/uni-id-summary.html#config</a></p></blockquote><p>根据目录<code>uniCloud/cloudfunctions/common/uni-config-center/uni-id/config.json</code>，新建config.json文件，复制官网上的配置文件内容，使用<code>//.*</code>的正则去除所有注释</p><p>配置项中：</p><ul><li><code>passwordSecret</code>为用于加密密码入库的密钥</li><li><code>tokenSecret</code>为生成token需要的密钥</li></ul><p><code>tokenSecret</code>属性默认是空的，需要设置一个字符串作为密钥规则</p><p>passwordSecret与tokenSecret十分重要，切记妥善保存，并且不能随意更改，修改passwordSecret会导致老用户使用密码无法登录，修改tokenSecret会导致所有已经下发的token失效。如果重新导入uni-id切勿直接覆盖config.json相关配置</p><h2 id="uni-id-common" tabindex="-1">uni-id-common <a class="header-anchor" href="#uni-id-common" aria-hidden="true">#</a></h2><blockquote><p><a href="https://uniapp.dcloud.net.cn/uniCloud/uni-id-common.html" target="_blank" rel="noreferrer">https://uniapp.dcloud.net.cn/uniCloud/uni-id-common.html</a></p><p><a href="https://ext.dcloud.net.cn/plugin?id=8576" target="_blank" rel="noreferrer">https://ext.dcloud.net.cn/plugin?id=8576</a></p></blockquote><p><code>uni-id-common</code>是<code>uni-id</code>体系中用于token管理的公共模块</p><p>新版的<code>uni-id-common</code>仅包含token校验、生成及刷新功能。而用户注册、登录、忘记密码等实现都挪到了<code>uni-id-co</code>云对象中（该云对象内置于<a href="https://uniapp.dcloud.net.cn/uniCloud/uni-id-pages" target="_blank" rel="noreferrer">uni-id-pages</a>）</p><h2 id="公共模块" tabindex="-1">公共模块 <a class="header-anchor" href="#公共模块" aria-hidden="true">#</a></h2><p>cloudfunctions/common右击新建公共模块</p><p>右击公共模块文件夹可以选择上传公共模块</p><p>公共模块可以用于云函数进行调用</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">appId</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">appSecret</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;wx-common&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> { </span><span style="color:#79B8FF;">appId</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">appSecret</span><span style="color:#B392F0;"> } </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> require(</span><span style="color:#FFAB70;">&quot;wx-common&quot;</span><span style="color:#B392F0;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><p><a href="https://uniapp.dcloud.net.cn/uniCloud/jql" target="_blank" rel="noreferrer">https://uniapp.dcloud.net.cn/uniCloud/jql</a>)</p></li><li><p><a href="https://uniapp.dcloud.net.cn/uniCloud/cf-database?id=limit" target="_blank" rel="noreferrer">https://uniapp.dcloud.net.cn/uniCloud/cf-database?id=limit</a>)</p></li></ul><h2 id="rbac模型" tabindex="-1">RBAC模型 <a class="header-anchor" href="#rbac模型" aria-hidden="true">#</a></h2><blockquote><p><a href="https://uniapp.dcloud.net.cn/uniCloud/uni-id-summary.html#rbac" target="_blank" rel="noreferrer">https://uniapp.dcloud.net.cn/uniCloud/uni-id-summary.html#rbac</a></p></blockquote><p>RBAC：Role-Based Access Control，基于角色的访问控制</p><p>其基本思想：对系统操作的各种权限不是直接授予具体的用户，而是在用户集合与权限集合之间建立一个角色集合。每一种角色对应一组相应的权限。一旦用户被分配了适当的角色后，该用户就拥有此角色的所有权限</p><p>这个模型有三个关键名词：用户、角色、权限：</p><ul><li>用户：使用系统的人，一个用户可以同时有多个角色，比如内容审核员、比如部门管理员</li><li>角色：权限的集合，一个角色可以有多个权限。比如内容审核员这个角色，有隐藏帖子权限、有帖子加精权限；而部门管理员这个角色，有给本部门新增员工权限、有删除本部门员工的权限</li><li>权限：数据权限或业务权限，例如：删除用户、帖子加精等</li></ul><p>用户、角色、权限都存在数据库了，都可以动态创建和修改。当权限对应的代码实现完成后，用户的新入、退出、角色升迁都无需再修改代码，在uni-admin后台的web界面可以由运维人员可视化的给每个用户调整角色、给每个角色调整权限。</p><p>这样做的好处是，增强系统管理的扩展性，对于批量用户的权限变更，仅需变更该批用户角色对应权限即可，而无需对该批每个用户变更权限</p><h2 id="uni-id-users表" tabindex="-1">uni-id-users表 <a class="header-anchor" href="#uni-id-users表" aria-hidden="true">#</a></h2><p>用户信息存储在<code>uni-id-users</code>表中，然后通过<code>role</code>字段保存该用户所拥有的所有角色ID，角色ID即角色表（<code>uni-id-roles</code>表）中的<code>role_id</code>字段，注意不是<code>_id</code>字段</p><p>更改<code>role</code>字段即可调整用户权限</p>`,35),l=[d];function s(t,c,r,p,u,h){return n(),i("div",null,l)}const f=e(a,[["render",s]]);export{g as __pageData,f as default};
