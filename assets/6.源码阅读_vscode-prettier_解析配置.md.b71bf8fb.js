import{_ as s,o as n,c as a,a as l}from"./app.bfa9bd4b.js";const A=JSON.parse('{"title":"解析配置","description":"","frontmatter":{},"headers":[{"level":2,"title":"原始代码","slug":"原始代码","link":"#原始代码","children":[]},{"level":2,"title":"解析配置文件","slug":"解析配置文件","link":"#解析配置文件","children":[]},{"level":2,"title":"获取配置文件的路径","slug":"获取配置文件的路径","link":"#获取配置文件的路径","children":[]},{"level":2,"title":"解析配置文件的选项设置","slug":"解析配置文件的选项设置","link":"#解析配置文件的选项设置","children":[]},{"level":2,"title":"清除模块和配置的缓存","slug":"清除模块和配置的缓存","link":"#清除模块和配置的缓存","children":[]},{"level":2,"title":"判断文件是否应该被解析","slug":"判断文件是否应该被解析","link":"#判断文件是否应该被解析","children":[]}],"relativePath":"6.源码阅读/vscode-prettier/解析配置.md","lastUpdated":1720835436710}'),p={name:"6.源码阅读/vscode-prettier/解析配置.md"},o=l(`<h1 id="解析配置" tabindex="-1">解析配置 <a class="header-anchor" href="#解析配置" aria-hidden="true">#</a></h1><h2 id="原始代码" tabindex="-1">原始代码 <a class="header-anchor" href="#原始代码" aria-hidden="true">#</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">public</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">async</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">getResolvedConfig</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">    { </span><span style="color:#E06C75;">fileName</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">uri</span><span style="color:#ABB2BF;"> }: </span><span style="color:#E06C75;">TextDocument</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">vscodeConfig</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">PrettierVSCodeConfig</span></span>
<span class="line"><span style="color:#ABB2BF;">  ): </span><span style="color:#E5C07B;">Promise</span><span style="color:#56B6C2;">&lt;</span><span style="color:#98C379;">&quot;error&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">|</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;disabled&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">|</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">PrettierOptions</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">|</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">null</span><span style="color:#56B6C2;">&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    const </span><span style="color:#E06C75;">isVirtual</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">uri</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">scheme</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">!==</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;file&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&amp;&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">uri</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">scheme</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">!==</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;vscode-userdata&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    let </span><span style="color:#E06C75;">configPath</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">|</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">undefined</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">try</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#61AFEF;">if</span><span style="color:#ABB2BF;"> (!</span><span style="color:#E06C75;font-style:italic;">isVirtual</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E06C75;">configPath</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">await</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">prettier</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">resolveConfigFile</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">fileName</span><span style="color:#ABB2BF;">)) </span><span style="color:#56B6C2;">??</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">undefined</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;">    } </span><span style="color:#61AFEF;">catch</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">error</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">      this.loggingService.logError(</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#98C379;">\`Error resolving prettier configuration for </span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">fileName</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E06C75;">error</span></span>
<span class="line"><span style="color:#ABB2BF;">      );</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">      return </span><span style="color:#98C379;">&quot;error&quot;</span><span style="color:#E06C75;">;</span></span>
<span class="line"><span style="color:#E06C75;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    const resolveConfigOptions</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">PrettierResolveConfigOptions</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">config</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">isVirtual</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">undefined</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">vscodeConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">configPath</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">getWorkspaceRelativePath</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">fileName</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">vscodeConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">configPath</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">configPath</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">editorconfig</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">isVirtual</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">undefined</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">vscodeConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">useEditorConfig</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">let</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">resolvedConfig</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">PrettierOptions</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">|</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">null</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">try</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">resolvedConfig</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">isVirtual</span></span>
<span class="line"><span style="color:#ABB2BF;">        ? </span><span style="color:#E06C75;">null</span></span>
<span class="line"><span style="color:#ABB2BF;">        : </span><span style="color:#C678DD;">await</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">prettier</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">resolveConfig</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">fileName</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">resolveConfigOptions</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    } </span><span style="color:#61AFEF;">catch</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">error</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">      this.loggingService.logError(</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#98C379;">&quot;Invalid prettier configuration file detected.&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E06C75;">error</span></span>
<span class="line"><span style="color:#ABB2BF;">      );</span></span>
<span class="line"><span style="color:#ABB2BF;">      this.loggingService.logError(INVALID_PRETTIER_CONFIG);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">      return </span><span style="color:#98C379;">&quot;error&quot;</span><span style="color:#E06C75;">;</span></span>
<span class="line"><span style="color:#E06C75;">    }</span></span>
<span class="line"><span style="color:#E06C75;">    if (resolveConfigOptions.config) {</span></span>
<span class="line"><span style="color:#E06C75;">      this.loggingService.logInfo(</span></span>
<span class="line"><span style="color:#E06C75;">        </span><span style="color:#98C379;">\`Using config file at &#39;</span><span style="color:#C678DD;">\${</span><span style="color:#E5C07B;">resolveConfigOptions</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">config</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">&#39;\`</span></span>
<span class="line"><span style="color:#E06C75;">      );</span></span>
<span class="line"><span style="color:#E06C75;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    if (resolvedConfig) {</span></span>
<span class="line"><span style="color:#E06C75;">      resolvedConfig = this.resolveConfigPlugins(resolvedConfig, fileName);</span></span>
<span class="line"><span style="color:#E06C75;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">    if (!isVirtual &amp;&amp; !resolvedConfig &amp;&amp; vscodeConfig.requireConfig) {</span></span>
<span class="line"><span style="color:#E06C75;">      this.loggingService.logInfo(</span></span>
<span class="line"><span style="color:#E06C75;">        </span><span style="color:#98C379;">&quot;Require config set to true and no config present. Skipping file.&quot;</span></span>
<span class="line"><span style="color:#E06C75;">      );</span></span>
<span class="line"><span style="color:#E06C75;">      return </span><span style="color:#98C379;">&quot;disabled&quot;</span><span style="color:#E06C75;">;</span></span>
<span class="line"><span style="color:#E06C75;">    }</span></span>
<span class="line"><span style="color:#E06C75;">    return resolvedConfig;</span></span>
<span class="line"><span style="color:#E06C75;">  }</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;"> public async getResolvedConfig(</span></span>
<span class="line"><span style="color:#B392F0;">    { fileName</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> uri }: TextDocument</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">    vscodeConfig: PrettierVSCodeConfig</span></span>
<span class="line"><span style="color:#B392F0;">  ): </span><span style="color:#79B8FF;">Promise</span><span style="color:#F97583;">&lt;</span><span style="color:#FFAB70;">&quot;error&quot;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;disabled&quot;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> PrettierOptions </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">null</span><span style="color:#F97583;">&gt;</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">    const isVirtual </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">uri</span><span style="color:#B392F0;">.scheme </span><span style="color:#F97583;">!==</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;file&quot;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">uri</span><span style="color:#B392F0;">.scheme </span><span style="color:#F97583;">!==</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;vscode-userdata&quot;</span><span style="color:#B392F0;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">    let configPath</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> string </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">    try {</span></span>
<span class="line"><span style="color:#B392F0;">      if (!isVirtual) {</span></span>
<span class="line"><span style="color:#B392F0;">        configPath </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> (</span><span style="color:#F97583;">await</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">prettier</span><span style="color:#B392F0;">.resolveConfigFile(fileName)) </span><span style="color:#F97583;">??</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">      }</span></span>
<span class="line"><span style="color:#B392F0;">    } catch (error) {</span></span>
<span class="line"><span style="color:#B392F0;">      this.loggingService.logError(</span></span>
<span class="line"><span style="color:#B392F0;">        </span><span style="color:#FFAB70;">\`Error resolving prettier configuration for </span><span style="color:#F97583;">\${</span><span style="color:#B392F0;">fileName</span><span style="color:#F97583;">}</span><span style="color:#FFAB70;">\`</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">        error</span></span>
<span class="line"><span style="color:#B392F0;">      );</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">      return </span><span style="color:#FFAB70;">&quot;error&quot;</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">    const resolveConfigOptions</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> PrettierResolveConfigOptions </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">      config</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> isVirtual</span></span>
<span class="line"><span style="color:#B392F0;">        </span><span style="color:#F97583;">?</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">undefined</span></span>
<span class="line"><span style="color:#B392F0;">        </span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">vscodeConfig</span><span style="color:#B392F0;">.configPath</span></span>
<span class="line"><span style="color:#B392F0;">        </span><span style="color:#F97583;">?</span><span style="color:#B392F0;"> getWorkspaceRelativePath(fileName</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">vscodeConfig</span><span style="color:#B392F0;">.configPath)</span></span>
<span class="line"><span style="color:#B392F0;">        </span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> configPath</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">      editorconfig</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> isVirtual </span><span style="color:#F97583;">?</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">vscodeConfig</span><span style="color:#B392F0;">.useEditorConfig</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">    };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">    let resolvedConfig: PrettierOptions </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">null</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">    try {</span></span>
<span class="line"><span style="color:#B392F0;">      resolvedConfig </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> isVirtual</span></span>
<span class="line"><span style="color:#B392F0;">        ? null</span></span>
<span class="line"><span style="color:#B392F0;">        </span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">await</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">prettier</span><span style="color:#B392F0;">.resolveConfig(fileName</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> resolveConfigOptions);</span></span>
<span class="line"><span style="color:#B392F0;">    } catch (error) {</span></span>
<span class="line"><span style="color:#B392F0;">      this.loggingService.logError(</span></span>
<span class="line"><span style="color:#B392F0;">        </span><span style="color:#FFAB70;">&quot;Invalid prettier configuration file detected.&quot;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">        error</span></span>
<span class="line"><span style="color:#B392F0;">      );</span></span>
<span class="line"><span style="color:#B392F0;">      this.loggingService.logError(INVALID_PRETTIER_CONFIG);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">      return </span><span style="color:#FFAB70;">&quot;error&quot;</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">    }</span></span>
<span class="line"><span style="color:#B392F0;">    if (resolveConfigOptions.config) {</span></span>
<span class="line"><span style="color:#B392F0;">      this.loggingService.logInfo(</span></span>
<span class="line"><span style="color:#B392F0;">        </span><span style="color:#FFAB70;">\`Using config file at &#39;</span><span style="color:#F97583;">\${</span><span style="color:#79B8FF;">resolveConfigOptions</span><span style="color:#B392F0;">.config</span><span style="color:#F97583;">}</span><span style="color:#FFAB70;">&#39;\`</span></span>
<span class="line"><span style="color:#B392F0;">      );</span></span>
<span class="line"><span style="color:#B392F0;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">    if (resolvedConfig) {</span></span>
<span class="line"><span style="color:#B392F0;">      resolvedConfig = this.resolveConfigPlugins(resolvedConfig, fileName);</span></span>
<span class="line"><span style="color:#B392F0;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">    if (!isVirtual &amp;&amp; !resolvedConfig &amp;&amp; vscodeConfig.requireConfig) {</span></span>
<span class="line"><span style="color:#B392F0;">      this.loggingService.logInfo(</span></span>
<span class="line"><span style="color:#B392F0;">        </span><span style="color:#FFAB70;">&quot;Require config set to true and no config present. Skipping file.&quot;</span></span>
<span class="line"><span style="color:#B392F0;">      );</span></span>
<span class="line"><span style="color:#B392F0;">      return </span><span style="color:#FFAB70;">&quot;disabled&quot;</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">    }</span></span>
<span class="line"><span style="color:#B392F0;">    return resolvedConfig;</span></span>
<span class="line"><span style="color:#B392F0;">  }</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br></div></div><h2 id="解析配置文件" tabindex="-1">解析配置文件 <a class="header-anchor" href="#解析配置文件" aria-hidden="true">#</a></h2><p>先看这里，<code>prettier.resolveConfig</code>这个方法用于解析配置文件</p><p>第一个参数为配置文件的路径，第二个参数为解析配置文件的选项设置，返回解析后的prettier规则</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">let</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">resolvedConfig</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">PrettierOptions</span><span style="color:#ABB2BF;"> | null</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">try</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E06C75;">resolvedConfig</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">isVirtual</span></span>
<span class="line"><span style="color:#ABB2BF;">                </span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">null</span></span>
<span class="line"><span style="color:#ABB2BF;">                </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">await</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">prettier</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">resolveConfig</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">fileName</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">resolveConfigOptions</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">        } </span><span style="color:#C678DD;">catch</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">error</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">loggingService</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">logError</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;Invalid prettier configuration file detected.&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">error</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">loggingService</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">logError</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">INVALID_PRETTIER_CONFIG</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;error&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;"> </span><span style="color:#F97583;">let</span><span style="color:#B392F0;"> resolvedConfig</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> PrettierOptions </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">null</span></span>
<span class="line"><span style="color:#B392F0;">        </span><span style="color:#F97583;">try</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">            resolvedConfig </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> isVirtual</span></span>
<span class="line"><span style="color:#B392F0;">                </span><span style="color:#F97583;">?</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">null</span></span>
<span class="line"><span style="color:#B392F0;">                </span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">await</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">prettier</span><span style="color:#B392F0;">.resolveConfig(fileName</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> resolveConfigOptions)</span></span>
<span class="line"><span style="color:#B392F0;">        } </span><span style="color:#F97583;">catch</span><span style="color:#B392F0;"> (error) {</span></span>
<span class="line"><span style="color:#B392F0;">            </span><span style="color:#79B8FF;">this</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">loggingService</span><span style="color:#B392F0;">.logError(</span><span style="color:#FFAB70;">&#39;Invalid prettier configuration file detected.&#39;</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> error)</span></span>
<span class="line"><span style="color:#B392F0;">            </span><span style="color:#79B8FF;">this</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">loggingService</span><span style="color:#B392F0;">.logError(</span><span style="color:#79B8FF;">INVALID_PRETTIER_CONFIG</span><span style="color:#B392F0;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">            </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;error&#39;</span></span>
<span class="line"><span style="color:#B392F0;">        }</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="获取配置文件的路径" tabindex="-1">获取配置文件的路径 <a class="header-anchor" href="#获取配置文件的路径" aria-hidden="true">#</a></h2><p><code>prettier.resolveConfigFile</code>用于查找给定的路径下的prettier配置文件，找不到返回null，找到返回配置文件的路径</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">isVirtual</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">uri</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">scheme</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">!==</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;file&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&amp;&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">uri</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">scheme</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">!==</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;vscode-userdata&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">let</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">configPath</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> | undefined;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">try</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#E06C75;">isVirtual</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E06C75;">configPath</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">await</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">prettier</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">resolveConfigFile</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">fileName</span><span style="color:#ABB2BF;">)) </span><span style="color:#56B6C2;">??</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">undefined</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;">    } </span><span style="color:#C678DD;">catch</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">error</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">loggingService</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">logError</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#98C379;">\`Error resolving prettier configuration for </span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">fileName</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E06C75;">error</span></span>
<span class="line"><span style="color:#ABB2BF;">      );</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;error&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;"> </span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">isVirtual</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">uri</span><span style="color:#B392F0;">.scheme </span><span style="color:#F97583;">!==</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;file&quot;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">uri</span><span style="color:#B392F0;">.scheme </span><span style="color:#F97583;">!==</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;vscode-userdata&quot;</span><span style="color:#B392F0;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#F97583;">let</span><span style="color:#B392F0;"> configPath</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#F97583;">try</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">      </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (</span><span style="color:#F97583;">!</span><span style="color:#B392F0;">isVirtual) {</span></span>
<span class="line"><span style="color:#B392F0;">        configPath </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> (</span><span style="color:#F97583;">await</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">prettier</span><span style="color:#B392F0;">.resolveConfigFile(fileName)) </span><span style="color:#F97583;">??</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">      }</span></span>
<span class="line"><span style="color:#B392F0;">    } </span><span style="color:#F97583;">catch</span><span style="color:#B392F0;"> (error) {</span></span>
<span class="line"><span style="color:#B392F0;">      </span><span style="color:#79B8FF;">this</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">loggingService</span><span style="color:#B392F0;">.logError(</span></span>
<span class="line"><span style="color:#B392F0;">        </span><span style="color:#FFAB70;">\`Error resolving prettier configuration for </span><span style="color:#F97583;">\${</span><span style="color:#B392F0;">fileName</span><span style="color:#F97583;">}</span><span style="color:#FFAB70;">\`</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">        error</span></span>
<span class="line"><span style="color:#B392F0;">      );</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">      </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;error&quot;</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">    }</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="解析配置文件的选项设置" tabindex="-1">解析配置文件的选项设置 <a class="header-anchor" href="#解析配置文件的选项设置" aria-hidden="true">#</a></h2><p><code>config</code>和<code>editorconfig</code>属性分别表示配置文件路径和<code>.editorconfig</code>文件路径，prettier会解析<code>.editorconfig</code>文件生成相应的prettier规则</p><p>isVirtual为真，配置项为undefined isVirtual不为真，vscodeConfig.configPath存在，使用vscodeConfig.configPath的配置项 isVirtual不为真，vscodeConfig.configPath不存在，使用configPath即配置文件的配置项（有可能是undefined）</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">   </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">resolveConfigOptions</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">PrettierResolveConfigOptions</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E06C75;">config</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">isVirtual</span></span>
<span class="line"><span style="color:#ABB2BF;">                </span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">undefined</span></span>
<span class="line"><span style="color:#ABB2BF;">                </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">vscodeConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">configPath</span></span>
<span class="line"><span style="color:#ABB2BF;">                </span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">getWorkspaceRelativePath</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">fileName</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">vscodeConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">configPath</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">                </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">configPath</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E06C75;">editorconfig</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">isVirtual</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">undefined</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">vscodeConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">useEditorConfig</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">   </span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">resolveConfigOptions</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> PrettierResolveConfigOptions </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">            config</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> isVirtual</span></span>
<span class="line"><span style="color:#B392F0;">                </span><span style="color:#F97583;">?</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">undefined</span></span>
<span class="line"><span style="color:#B392F0;">                </span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">vscodeConfig</span><span style="color:#B392F0;">.configPath</span></span>
<span class="line"><span style="color:#B392F0;">                </span><span style="color:#F97583;">?</span><span style="color:#B392F0;"> getWorkspaceRelativePath(fileName</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">vscodeConfig</span><span style="color:#B392F0;">.configPath)</span></span>
<span class="line"><span style="color:#B392F0;">                </span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> configPath</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">            editorconfig</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> isVirtual </span><span style="color:#F97583;">?</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">vscodeConfig</span><span style="color:#B392F0;">.useEditorConfig</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">        }</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="清除模块和配置的缓存" tabindex="-1">清除模块和配置的缓存 <a class="header-anchor" href="#清除模块和配置的缓存" aria-hidden="true">#</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">public</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">async</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">dispose</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">prettier</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">clearConfigCache</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">path2Module</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">forEach</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">module</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#C678DD;">try</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">                </span><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">clearConfigCache</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">            } </span><span style="color:#C678DD;">catch</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">error</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">                </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">loggingService</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">logError</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;Error clearing module cache.&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">error</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;">        })</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">path2Module</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">clear</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">    public async dispose() {</span></span>
<span class="line"><span style="color:#B392F0;">        </span><span style="color:#79B8FF;">prettier</span><span style="color:#B392F0;">.clearConfigCache()</span></span>
<span class="line"><span style="color:#B392F0;">        </span><span style="color:#79B8FF;">this</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">path2Module</span><span style="color:#B392F0;">.forEach(module </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">            </span><span style="color:#F97583;">try</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">                </span><span style="color:#79B8FF;">module</span><span style="color:#B392F0;">.clearConfigCache()</span></span>
<span class="line"><span style="color:#B392F0;">            } </span><span style="color:#F97583;">catch</span><span style="color:#B392F0;"> (error) {</span></span>
<span class="line"><span style="color:#B392F0;">                </span><span style="color:#79B8FF;">this</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">loggingService</span><span style="color:#B392F0;">.logError(</span><span style="color:#FFAB70;">&#39;Error clearing module cache.&#39;</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> error)</span></span>
<span class="line"><span style="color:#B392F0;">            }</span></span>
<span class="line"><span style="color:#B392F0;">        })</span></span>
<span class="line"><span style="color:#B392F0;">        </span><span style="color:#79B8FF;">this</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">path2Module</span><span style="color:#B392F0;">.clear()</span></span>
<span class="line"><span style="color:#B392F0;">    }</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="判断文件是否应该被解析" tabindex="-1">判断文件是否应该被解析 <a class="header-anchor" href="#判断文件是否应该被解析" aria-hidden="true">#</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">fileInfo</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">await</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">prettierInstance</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getFileInfo</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">fileName</span><span style="color:#ABB2BF;">, {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E06C75;">ignorePath</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">resolvedIgnorePath</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E06C75;">resolveConfig</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E06C75;">withNodeModules</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">vscodeConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">withNodeModules</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">      });</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">  fileInfo </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">await</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">prettierInstance</span><span style="color:#B392F0;">.getFileInfo(fileName</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">        ignorePath</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> resolvedIgnorePath</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">        resolveConfig</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">true</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">        withNodeModules</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">vscodeConfig</span><span style="color:#B392F0;">.withNodeModules</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">      });</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>返回结果：</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#FFFFFF;">ignored</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">boolean</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#FFFFFF;">inferredParser</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#FFFFFF;">|</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">null</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">{</span></span>
<span class="line"><span style="color:#B392F0;">  ignored</span><span style="color:#BBBBBB;">:</span><span style="color:#B392F0;"> boolean</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  inferredParser</span><span style="color:#BBBBBB;">:</span><span style="color:#B392F0;"> string | </span><span style="color:#79B8FF;">null</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>ignored表示这个文件是否是应该忽视的，受<code>options.ignorePath</code>和<code>options.withNodeModules</code>影响</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#E5C07B;">options</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">force</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&amp;&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">fileInfo</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&amp;&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">fileInfo</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">ignored</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">loggingService</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">logInfo</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;File is ignored, skipping.&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">statusBar</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">update</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">FormatterStatus</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">Ignore</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (</span><span style="color:#F97583;">!</span><span style="color:#79B8FF;">options</span><span style="color:#B392F0;">.force </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#B392F0;"> fileInfo </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">fileInfo</span><span style="color:#B392F0;">.ignored) {</span></span>
<span class="line"><span style="color:#B392F0;">      </span><span style="color:#79B8FF;">this</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">loggingService</span><span style="color:#B392F0;">.logInfo(</span><span style="color:#FFAB70;">&quot;File is ignored, skipping.&quot;</span><span style="color:#B392F0;">);</span></span>
<span class="line"><span style="color:#B392F0;">      </span><span style="color:#79B8FF;">this</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">statusBar</span><span style="color:#B392F0;">.update(</span><span style="color:#79B8FF;">FormatterStatus</span><span style="color:#B392F0;">.Ignore);</span></span>
<span class="line"><span style="color:#B392F0;">      </span><span style="color:#F97583;">return</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">    }</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,22),e=[o];function r(c,t,B,i,y,F){return n(),a("div",null,e)}const u=s(p,[["render",r]]);export{A as __pageData,u as default};
