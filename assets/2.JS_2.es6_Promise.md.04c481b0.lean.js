import{_ as s,o as n,c as a,a as l}from"./app.bfa9bd4b.js";const d=JSON.parse('{"title":"Promise","description":"","frontmatter":{},"headers":[{"level":2,"title":"为什么使用Promise","slug":"为什么使用promise","link":"#为什么使用promise","children":[{"level":3,"title":"常见异步操作","slug":"常见异步操作","link":"#常见异步操作","children":[]},{"level":3,"title":"回调的缺点","slug":"回调的缺点","link":"#回调的缺点","children":[]},{"level":3,"title":"Promise的优点","slug":"promise的优点","link":"#promise的优点","children":[]}]},{"level":2,"title":"new Promise","slug":"new-promise","link":"#new-promise","children":[{"level":3,"title":"多个异步任务","slug":"多个异步任务","link":"#多个异步任务","children":[]}]},{"level":2,"title":"Promise.prototype.then()","slug":"promise-prototype-then","link":"#promise-prototype-then","children":[{"level":3,"title":"参数","slug":"参数","link":"#参数","children":[]}]},{"level":2,"title":"Promise.catch","slug":"promise-catch","link":"#promise-catch","children":[]},{"level":2,"title":"Promise.resolve","slug":"promise-resolve","link":"#promise-resolve","children":[{"level":3,"title":"参数","slug":"参数-1","link":"#参数-1","children":[]},{"level":3,"title":"返回值","slug":"返回值","link":"#返回值","children":[]}]},{"level":2,"title":"Promise.reject","slug":"promise-reject","link":"#promise-reject","children":[]},{"level":2,"title":"Promise.prototype.finally","slug":"promise-prototype-finally","link":"#promise-prototype-finally","children":[]},{"level":2,"title":"Promise.race","slug":"promise-race","link":"#promise-race","children":[]},{"level":2,"title":"Promise.finally","slug":"promise-finally","link":"#promise-finally","children":[]},{"level":2,"title":"链式调用","slug":"链式调用","link":"#链式调用","children":[]},{"level":2,"title":"Promise.all","slug":"promise-all","link":"#promise-all","children":[{"level":3,"title":"假如promise.all中有五个异步函数 ，第二个错误了，第三个还会执行吗","slug":"假如promise-all中有五个异步函数-第二个错误了-第三个还会执行吗","link":"#假如promise-all中有五个异步函数-第二个错误了-第三个还会执行吗","children":[]},{"level":3,"title":"请求失败不影响其他正确异步","slug":"请求失败不影响其他正确异步","link":"#请求失败不影响其他正确异步","children":[]},{"level":3,"title":"自行实现","slug":"自行实现","link":"#自行实现","children":[]},{"level":3,"title":"改写","slug":"改写","link":"#改写","children":[]}]},{"level":2,"title":"Promise.allSettled","slug":"promise-allsettled","link":"#promise-allsettled","children":[]},{"level":2,"title":"中断promise","slug":"中断promise","link":"#中断promise","children":[]},{"level":2,"title":"Promise 是用来管理异步编程的，它本身不是异步的","slug":"promise-是用来管理异步编程的-它本身不是异步的","link":"#promise-是用来管理异步编程的-它本身不是异步的","children":[{"level":3,"title":"Promise 采用了回调函数延迟绑定技术","slug":"promise-采用了回调函数延迟绑定技术","link":"#promise-采用了回调函数延迟绑定技术","children":[]}]},{"level":2,"title":"promise与async/await","slug":"promise与async-await","link":"#promise与async-await","children":[{"level":3,"title":"使用async/await","slug":"使用async-await","link":"#使用async-await","children":[]}]},{"level":2,"title":"async函数返回值","slug":"async函数返回值","link":"#async函数返回值","children":[{"level":3,"title":"async函数中返回异步函数的值","slug":"async函数中返回异步函数的值","link":"#async函数中返回异步函数的值","children":[]}]},{"level":2,"title":"为什么resolve后面的代码还会执行","slug":"为什么resolve后面的代码还会执行","link":"#为什么resolve后面的代码还会执行","children":[]}],"relativePath":"2.JS/2.es6/Promise.md","lastUpdated":1720835436690}'),p={name:"2.JS/2.es6/Promise.md"},o=l("",110),e=[o];function r(c,t,B,y,F,i){return n(),a("div",null,e)}const u=s(p,[["render",r]]);export{d as __pageData,u as default};
