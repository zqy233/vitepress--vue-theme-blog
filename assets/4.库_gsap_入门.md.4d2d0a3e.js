import{_ as s,o as a,c as n,a as e}from"./app.bfa9bd4b.js";const F=JSON.parse(`{"title":"Let's get animating! 让我们开始制作动画吧！","description":"","frontmatter":{},"headers":[{"level":2,"title":"What is \\"GSAP\\"? 什么是“GSAP”？","slug":"what-is-gsap-什么是-gsap","link":"#what-is-gsap-什么是-gsap","children":[]},{"level":2,"title":"Creating an animation. 创建动画。","slug":"creating-an-animation-创建动画。","link":"#creating-an-animation-创建动画。","children":[]},{"level":2,"title":"The method(s) 方法","slug":"the-method-s-方法","link":"#the-method-s-方法","children":[]},{"level":2,"title":"The target (or targets) 目标（或多个目标）","slug":"the-target-or-targets-目标-或多个目标","link":"#the-target-or-targets-目标-或多个目标","children":[]}],"relativePath":"4.库/gsap/入门.md","lastUpdated":1720835436702}`),o={name:"4.库/gsap/入门.md"},t=e(`<h1 id="let-s-get-animating-让我们开始制作动画吧" tabindex="-1">Let&#39;s get animating! 让我们开始制作动画吧！ <a class="header-anchor" href="#let-s-get-animating-让我们开始制作动画吧" aria-hidden="true">#</a></h1><p>Welcome! In this article <strong>we&#39;re going to cover GSAP&#39;s core fundamentals and animate some HTML elements</strong>. 🥳 欢迎！在本文中，我们将介绍 GSAP 的核心基础知识，并为一些 HTML 元素制作动画。🥳</p><p>If that&#39;s not your end goal, don&#39;t worry. Whatever you plan to animate, whichever framework you use - the techniques and principles covered here will serve you well. 如果这不是您的最终目标，请不要担心。无论你打算制作什么动画，无论你使用哪种框架，这里介绍的技术和原则都会为你带来很好的帮助。</p><h2 id="what-is-gsap-什么是-gsap" tabindex="-1">What is &quot;GSAP&quot;? 什么是“GSAP”？ <a class="header-anchor" href="#what-is-gsap-什么是-gsap" aria-hidden="true">#</a></h2><p>The GreenSock Animation Platform (GSAP) is an industry-celebrated suite of tools used on over 11 million sites, including a ton of <a href="https://www.awwwards.com/websites/gsap-animation" target="_blank" rel="noreferrer">award‑winning</a> ones! You can use GSAP to <strong>animate pretty much</strong> <em><strong>anything JavaScript can touch, in any framework</strong></em> Whether you want to animate UI, SVG, Three.js or React components - <a href="https://gsap.com/why-gsap" target="_blank" rel="noreferrer">GSAP has you covered</a>. GreenSock 动画平台 （GSAP） 是一套业界知名的工具，用于超过 1100 万个网站，其中包括大量屡获殊荣的网站！你可以使用 GSAP 在任何框架中对 JavaScript 可以触及的几乎任何内容进行动画处理。无论您是想对 UI、SVG、Three.js 还是 React 组件进行动画处理，GSAP 都能满足您的需求。</p><p><strong>The core library</strong> contains everything you need to create <a href="https://gsap.com/js/speed.html" target="_blank" rel="noreferrer">blazing fast</a>, cross-browser friendly animations. This is what we&#39;ll be stepping through in this article. 核心库包含创建超快、跨浏览器友好动画所需的一切。这就是我们将在本文中逐步介绍的内容。</p><p>In addition to the core, there are a variety of <a href="https://gsap.com/docs/v3/Plugins/" target="_blank" rel="noreferrer">plugins</a>. *<strong>You don&#39;t need to learn them in order to get started*</strong>, but they can help with specific animation challenges like <a href="https://gsap.com/docs/v3/Plugins/ScrollTrigger" target="_blank" rel="noreferrer">scroll based animation</a>, <a href="https://gsap.com/docs/v3/Plugins/Draggable" target="_blank" rel="noreferrer">draggable</a> interactions, <a href="https://gsap.com/docs/v3/Plugins/MorphSVGPlugin" target="_blank" rel="noreferrer">morphing</a>, etc. 除了核心之外，还有各种插件。您无需学习它们即可开始，但它们可以帮助解决特定的动画挑战，例如基于滚动的动画、可拖动的交互、变形等。</p><h2 id="creating-an-animation-创建动画。" tabindex="-1">Creating an animation.<a href="https://gsap.com/resources/get-started#creating-an-animation" target="_blank" rel="noreferrer"></a> 创建动画。 <a class="header-anchor" href="#creating-an-animation-创建动画。" aria-hidden="true">#</a></h2><p>Let&#39;s start by animating an HTML element with a class of <em><strong>&quot;box&quot;</strong></em>. 让我们首先使用类 “box” 对 HTML 元素进行动画处理。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">gsap</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">to</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;.box&quot;</span><span style="color:#ABB2BF;">, { </span><span style="color:#E06C75;">x</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">200</span><span style="color:#ABB2BF;"> })</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#79B8FF;">gsap</span><span style="color:#B392F0;">.to(</span><span style="color:#FFAB70;">&quot;.box&quot;</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> { x</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">200</span><span style="color:#B392F0;"> })</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>A single animation like this is called a <strong><a href="https://gsap.com/docs/v3/tween/" target="_blank" rel="noreferrer">&#39;tween&#39;</a></strong> This tween is saying &quot;hey GSAP, animate the element with a class of &#39;.box&#39; to an x of 200px (like <code>transform: translateX(200px)</code>)&quot;. 像这样的单个动画称为“补间”，这个补间在说“嘿，GSAP，用类的&#39;.box&#39;将元素动画化为200px（就像 <code>transform: translateX(200px)</code> ）的x”。</p><p>Let&#39;s take a closer look at the syntax. 让我们仔细看看语法。</p><p>We&#39;ve got a <strong>method</strong>, a <strong>target</strong> and a <strong>vars object</strong> which all contain information about the animation 我们有一个方法、一个目标和一个 vars 对象，它们都包含有关动画的信息</p><h2 id="the-method-s-方法" tabindex="-1"><strong>The method(s) 方法</strong> <a class="header-anchor" href="#the-method-s-方法" aria-hidden="true">#</a></h2><p>There are four types of tweens: 补间有四种类型：</p><p><code>gsap.to()</code> - This is the most common type of tween. A <code>.to()</code> tween will start at the element&#39;s current state and <strong>animate &quot;to&quot; the values defined in the tween.</strong><code>gsap.to()</code> - 这是最常见的补间类型。 <code>.to()</code> 补间将从元素的当前状态开始，并对补间中定义的值进行动画处理。</p><p><code>gsap.from()</code> - Like a backwards <code>.to()</code> where it <strong>animates &quot;from&quot; the values defined in the tween</strong> and ends at the element&#39;s current state. <code>gsap.from()</code> - 就像向后一样 <code>.to()</code> ，它对补间中定义的值进行“自”动画处理，并在元素的当前状态结束。</p><p><code>gsap.fromTo()</code> - <strong>You define *both* the starting *and* ending values.</strong><code>gsap.fromTo()</code> - 定义起始值和结束值。</p><p><code>gsap.set()</code> <strong>Immediately sets properties</strong> (no animation). It&#39;s essentially a zero-duration <code>.to()</code> tween. <code>gsap.set()</code> 立即设置属性（无动画）。它本质上是一个零持续时间 <code>.to()</code> 的补间。</p><h2 id="the-target-or-targets-目标-或多个目标" tabindex="-1"><strong>The target (or targets) 目标（或多个目标）</strong> <a class="header-anchor" href="#the-target-or-targets-目标-或多个目标" aria-hidden="true">#</a></h2><p>Next up we have to tell GSAP what we want to animate. Under the hood GSAP uses <code>document.querySelectorAll()</code>, so for HTML or SVG targets we can use selector text like <code>&quot;.class&quot;</code> and <code>&quot;#id&quot;</code>. Or you can pass in a variable or even an Array. 接下来，我们必须告诉GSAP我们想要制作什么动画。在后台，GSAP使用 <code>document.querySelectorAll()</code> ，因此对于HTML或SVG目标，我们可以使用选择器文本，例如 <code>&quot;.class&quot;</code> 和 <code>&quot;#id&quot;</code> 。或者你可以传入一个变量，甚至一个数组。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// use a class or ID</span></span>
<span class="line"><span style="color:#E5C07B;">gsap</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">to</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;.box&quot;</span><span style="color:#ABB2BF;">, { </span><span style="color:#E06C75;">x</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">200</span><span style="color:#ABB2BF;"> });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// a complex CSS selector</span></span>
<span class="line"><span style="color:#E5C07B;">gsap</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">to</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;section &gt; .box&quot;</span><span style="color:#ABB2BF;">, { </span><span style="color:#E06C75;">x</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">200</span><span style="color:#ABB2BF;"> });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// a variable</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">box</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">querySelector</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;.box&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">gsap</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">to</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">box</span><span style="color:#ABB2BF;">, { </span><span style="color:#E06C75;">x</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">200</span><span style="color:#ABB2BF;"> })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// or even an Array of elements</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">square</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">querySelector</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;.square&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">circle</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">querySelector</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;.circle&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">                                      </span></span>
<span class="line"><span style="color:#E5C07B;">gsap</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">to</span><span style="color:#ABB2BF;">([</span><span style="color:#E06C75;">square</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">circle</span><span style="color:#ABB2BF;">], { </span><span style="color:#E06C75;">x</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">200</span><span style="color:#ABB2BF;"> })</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#6B737C;">// use a class or ID</span></span>
<span class="line"><span style="color:#79B8FF;">gsap</span><span style="color:#B392F0;">.to(</span><span style="color:#FFAB70;">&quot;.box&quot;</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> { x</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">200</span><span style="color:#B392F0;"> });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">// a complex CSS selector</span></span>
<span class="line"><span style="color:#79B8FF;">gsap</span><span style="color:#B392F0;">.to(</span><span style="color:#FFAB70;">&quot;section &gt; .box&quot;</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> { x</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">200</span><span style="color:#B392F0;"> });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">// a variable</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#B392F0;"> box </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">document</span><span style="color:#B392F0;">.querySelector(</span><span style="color:#FFAB70;">&quot;.box&quot;</span><span style="color:#B392F0;">);</span></span>
<span class="line"><span style="color:#79B8FF;">gsap</span><span style="color:#B392F0;">.to(box</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> { x</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">200</span><span style="color:#B392F0;"> })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">// or even an Array of elements</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#B392F0;"> square </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">document</span><span style="color:#B392F0;">.querySelector(</span><span style="color:#FFAB70;">&quot;.square&quot;</span><span style="color:#B392F0;">);</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#B392F0;"> circle </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">document</span><span style="color:#B392F0;">.querySelector(</span><span style="color:#FFAB70;">&quot;.circle&quot;</span><span style="color:#B392F0;">);</span></span>
<span class="line"><span style="color:#B392F0;">                                      </span></span>
<span class="line"><span style="color:#79B8FF;">gsap</span><span style="color:#B392F0;">.to([square</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> circle]</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> { x</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">200</span><span style="color:#B392F0;"> })</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div>`,22),l=[t];function p(r,c,i,B,y,d){return a(),n("div",null,l)}const h=s(o,[["render",p]]);export{F as __pageData,h as default};
