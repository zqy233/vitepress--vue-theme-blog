import{_ as s,o as n,c as a,a as l}from"./app.bfa9bd4b.js";const C=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"banners","slug":"banners","link":"#banners","children":[]},{"level":2,"title":"deepMerge","slug":"deepmerge","link":"#deepmerge","children":[]},{"level":2,"title":"sortDependencies","slug":"sortdependencies","link":"#sortdependencies","children":[]}],"relativePath":"6.源码阅读/create-vue/3.utils.md","lastUpdated":1720835436706}'),p={name:"6.源码阅读/create-vue/3.utils.md"},o=l(`<h2 id="banners" tabindex="-1">banners <a class="header-anchor" href="#banners" aria-hidden="true">#</a></h2><p>使用<code>gradient-string</code>库生成控制台渐变输出文字</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">defaultBanner</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#98C379;">&#39;electron-vite-template : a vue3-vite-electron project template composed of Vite and rollup&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// generated by the following code:</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// require(&#39;gradient-string&#39;)([</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//   { color: &#39;#42d392&#39;, pos: 0 },</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//   { color: &#39;#42d392&#39;, pos: 0.1 },</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//   { color: &#39;#647eff&#39;, pos: 1 }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// ])(&#39;Vue.js - The Progressive JavaScript Framework&#39;))</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Use the output directly here to keep the bundle small.</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">gradientBanner</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#98C379;">&#39;</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;66;211;146me</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;66;211;146ml</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;66;211;146me</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;66;211;146mc</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;66;211;146mt</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;66;211;146mr</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;66;211;146mo</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;66;211;146mn</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;66;211;146m-</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;66;210;148mv</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;67;209;149mi</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;67;207;151mt</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;68;206;152me</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;68;205;154m-</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;69;204;155mt</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;69;203;157me</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;70;201;158mm</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;70;200;160mp</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;71;199;161ml</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;71;198;163ma</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;72;197;164mt</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;72;195;166me</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m </span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;73;194;167m:</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m </span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;73;193;169ma</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m </span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;74;192;171mv</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;74;191;172mu</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;75;189;174me</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;75;188;175m3</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;76;187;177m-</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;76;186;178mv</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;77;185;180mi</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;77;183;181mt</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;77;182;183me</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;78;181;184m-</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;78;180;186me</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;79;179;187ml</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;79;177;189me</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;80;176;191mc</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;80;175;192mt</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;81;174;194mr</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;81;173;195mo</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;82;171;197mn</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m </span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;82;170;198mp</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;83;169;200mr</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;83;168;201mo</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;84;167;203mj</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;84;166;204me</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;85;164;206mc</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;85;163;207mt</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m </span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;86;162;209mt</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;86;161;210me</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;87;160;212mm</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;87;158;214mp</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;88;157;215ml</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;88;156;217ma</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;89;155;218mt</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;89;154;220me</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m </span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;89;152;221mc</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;90;151;223mo</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;90;150;224mm</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;91;149;226mp</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;91;148;227mo</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;92;146;229ms</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;92;145;230me</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;93;144;232md</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m </span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;93;143;234mo</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;94;142;235mf</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m </span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;94;140;237mV</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;95;139;238mi</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;95;138;240mt</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;96;137;241me</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m </span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;96;136;243ma</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;97;134;244mn</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;97;133;246md</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m </span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;98;132;247mr</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;98;131;249mo</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;99;130;250ml</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;99;128;252ml</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;100;127;253mu</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[38;2;100;126;255mp</span><span style="color:#56B6C2;">\\u001b</span><span style="color:#98C379;">[39m&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">defaultBanner</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">gradientBanner</span><span style="color:#ABB2BF;"> }</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">defaultBanner</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#FFAB70;">&#39;electron-vite-template : a vue3-vite-electron project template composed of Vite and rollup&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">// generated by the following code:</span></span>
<span class="line"><span style="color:#6B737C;">//</span></span>
<span class="line"><span style="color:#6B737C;">// require(&#39;gradient-string&#39;)([</span></span>
<span class="line"><span style="color:#6B737C;">//   { color: &#39;#42d392&#39;, pos: 0 },</span></span>
<span class="line"><span style="color:#6B737C;">//   { color: &#39;#42d392&#39;, pos: 0.1 },</span></span>
<span class="line"><span style="color:#6B737C;">//   { color: &#39;#647eff&#39;, pos: 1 }</span></span>
<span class="line"><span style="color:#6B737C;">// ])(&#39;Vue.js - The Progressive JavaScript Framework&#39;))</span></span>
<span class="line"><span style="color:#6B737C;">//</span></span>
<span class="line"><span style="color:#6B737C;">// Use the output directly here to keep the bundle small.</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">gradientBanner</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#FFAB70;">&#39;\\u001b[38;2;66;211;146me\\u001b[39m\\u001b[38;2;66;211;146ml\\u001b[39m\\u001b[38;2;66;211;146me\\u001b[39m\\u001b[38;2;66;211;146mc\\u001b[39m\\u001b[38;2;66;211;146mt\\u001b[39m\\u001b[38;2;66;211;146mr\\u001b[39m\\u001b[38;2;66;211;146mo\\u001b[39m\\u001b[38;2;66;211;146mn\\u001b[39m\\u001b[38;2;66;211;146m-\\u001b[39m\\u001b[38;2;66;210;148mv\\u001b[39m\\u001b[38;2;67;209;149mi\\u001b[39m\\u001b[38;2;67;207;151mt\\u001b[39m\\u001b[38;2;68;206;152me\\u001b[39m\\u001b[38;2;68;205;154m-\\u001b[39m\\u001b[38;2;69;204;155mt\\u001b[39m\\u001b[38;2;69;203;157me\\u001b[39m\\u001b[38;2;70;201;158mm\\u001b[39m\\u001b[38;2;70;200;160mp\\u001b[39m\\u001b[38;2;71;199;161ml\\u001b[39m\\u001b[38;2;71;198;163ma\\u001b[39m\\u001b[38;2;72;197;164mt\\u001b[39m\\u001b[38;2;72;195;166me\\u001b[39m \\u001b[38;2;73;194;167m:\\u001b[39m \\u001b[38;2;73;193;169ma\\u001b[39m \\u001b[38;2;74;192;171mv\\u001b[39m\\u001b[38;2;74;191;172mu\\u001b[39m\\u001b[38;2;75;189;174me\\u001b[39m\\u001b[38;2;75;188;175m3\\u001b[39m\\u001b[38;2;76;187;177m-\\u001b[39m\\u001b[38;2;76;186;178mv\\u001b[39m\\u001b[38;2;77;185;180mi\\u001b[39m\\u001b[38;2;77;183;181mt\\u001b[39m\\u001b[38;2;77;182;183me\\u001b[39m\\u001b[38;2;78;181;184m-\\u001b[39m\\u001b[38;2;78;180;186me\\u001b[39m\\u001b[38;2;79;179;187ml\\u001b[39m\\u001b[38;2;79;177;189me\\u001b[39m\\u001b[38;2;80;176;191mc\\u001b[39m\\u001b[38;2;80;175;192mt\\u001b[39m\\u001b[38;2;81;174;194mr\\u001b[39m\\u001b[38;2;81;173;195mo\\u001b[39m\\u001b[38;2;82;171;197mn\\u001b[39m \\u001b[38;2;82;170;198mp\\u001b[39m\\u001b[38;2;83;169;200mr\\u001b[39m\\u001b[38;2;83;168;201mo\\u001b[39m\\u001b[38;2;84;167;203mj\\u001b[39m\\u001b[38;2;84;166;204me\\u001b[39m\\u001b[38;2;85;164;206mc\\u001b[39m\\u001b[38;2;85;163;207mt\\u001b[39m \\u001b[38;2;86;162;209mt\\u001b[39m\\u001b[38;2;86;161;210me\\u001b[39m\\u001b[38;2;87;160;212mm\\u001b[39m\\u001b[38;2;87;158;214mp\\u001b[39m\\u001b[38;2;88;157;215ml\\u001b[39m\\u001b[38;2;88;156;217ma\\u001b[39m\\u001b[38;2;89;155;218mt\\u001b[39m\\u001b[38;2;89;154;220me\\u001b[39m \\u001b[38;2;89;152;221mc\\u001b[39m\\u001b[38;2;90;151;223mo\\u001b[39m\\u001b[38;2;90;150;224mm\\u001b[39m\\u001b[38;2;91;149;226mp\\u001b[39m\\u001b[38;2;91;148;227mo\\u001b[39m\\u001b[38;2;92;146;229ms\\u001b[39m\\u001b[38;2;92;145;230me\\u001b[39m\\u001b[38;2;93;144;232md\\u001b[39m \\u001b[38;2;93;143;234mo\\u001b[39m\\u001b[38;2;94;142;235mf\\u001b[39m \\u001b[38;2;94;140;237mV\\u001b[39m\\u001b[38;2;95;139;238mi\\u001b[39m\\u001b[38;2;95;138;240mt\\u001b[39m\\u001b[38;2;96;137;241me\\u001b[39m \\u001b[38;2;96;136;243ma\\u001b[39m\\u001b[38;2;97;134;244mn\\u001b[39m\\u001b[38;2;97;133;246md\\u001b[39m \\u001b[38;2;98;132;247mr\\u001b[39m\\u001b[38;2;98;131;249mo\\u001b[39m\\u001b[38;2;99;130;250ml\\u001b[39m\\u001b[38;2;99;128;252ml\\u001b[39m\\u001b[38;2;100;127;253mu\\u001b[39m\\u001b[38;2;100;126;255mp\\u001b[39m&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#B392F0;"> { defaultBanner</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> gradientBanner }</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="deepmerge" tabindex="-1">deepMerge <a class="header-anchor" href="#deepmerge" aria-hidden="true">#</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 这段代码定义了一个名为 isObject 的函数，用于判断传入的参数是否为对象类型</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 具体实现是检查传入的参数 val 是否存在，并且是否为 object 类型。如果满足条件，函数返回 true，否则返回 false</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 可以使用这个函数来进行类型检查，例如在处理 JSON 数据时，需要判断一个属性值是否为对象类型，就可以使用这个函数来判断</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">isObject</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">val</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">val</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&amp;&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">typeof</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">val</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">===</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;object&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 这段代码定义了一个名为 mergeArrayWithDedupe 的函数，它接受两个数组 a 和 b 作为参数，并返回一个新数组，其中包含 a 和 b 中所有不重复的元素。具体实现上，它通过使用 Set 和展开运算符 ... 来合并两个数组，并确保不会有重复元素，然后将结果转换回数组格式</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// &quot;Dedupe&quot;是&quot;de-duplicate&quot;的缩写，意思是去重或消除重复</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">mergeArrayWithDedupe</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">a</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">b</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Array</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">from</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Set</span><span style="color:#ABB2BF;">([...</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">, ...</span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">]))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 这段代码定义了一个名为 deepMerge 的函数，该函数用于递归地将一个新的对象与现有对象合并。它接受两个参数：target 表示现有的对象，obj 表示新的对象。函数会遍历新对象的属性，如果这个属性在现有对象中存在，那么会对它们进行合并，否则直接将新对象的属性添加到现有对象中。具体地，如果这个属性的值既不是数组也不是对象，那么直接用新对象的值覆盖现有对象的值；如果这个属性的值是数组，那么会合并两个数组并去重；如果这个属性的值是对象，那么会递归地调用 deepMerge 函数进行合并。最后返回合并后的现有对象</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * Recursively merge the content of the new object to the existing one</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E5C07B;font-style:italic;">{Object}</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E06C75;font-style:italic;">target</span><span style="color:#7F848E;font-style:italic;"> the existing object</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E5C07B;font-style:italic;">{Object}</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E06C75;font-style:italic;">obj</span><span style="color:#7F848E;font-style:italic;"> the new object</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">deepMerge</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">target</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">obj</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">key</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">of</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">keys</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">oldVal</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">target</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">newVal</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">Array</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">isArray</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">oldVal</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">&amp;&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Array</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">isArray</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">newVal</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">target</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">mergeArrayWithDedupe</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">oldVal</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">newVal</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    } </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#61AFEF;">isObject</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">oldVal</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">&amp;&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">isObject</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">newVal</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">target</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">deepMerge</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">oldVal</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">newVal</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    } </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">target</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">newVal</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">target</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">default</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">deepMerge</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#6B737C;">// 这段代码定义了一个名为 isObject 的函数，用于判断传入的参数是否为对象类型</span></span>
<span class="line"><span style="color:#6B737C;">// 具体实现是检查传入的参数 val 是否存在，并且是否为 object 类型。如果满足条件，函数返回 true，否则返回 false</span></span>
<span class="line"><span style="color:#6B737C;">// 可以使用这个函数来进行类型检查，例如在处理 JSON 数据时，需要判断一个属性值是否为对象类型，就可以使用这个函数来判断</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> isObject </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> (val) </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> val </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">typeof</span><span style="color:#B392F0;"> val </span><span style="color:#F97583;">===</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;object&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">// 这段代码定义了一个名为 mergeArrayWithDedupe 的函数，它接受两个数组 a 和 b 作为参数，并返回一个新数组，其中包含 a 和 b 中所有不重复的元素。具体实现上，它通过使用 Set 和展开运算符 ... 来合并两个数组，并确保不会有重复元素，然后将结果转换回数组格式</span></span>
<span class="line"><span style="color:#6B737C;">// &quot;Dedupe&quot;是&quot;de-duplicate&quot;的缩写，意思是去重或消除重复</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> mergeArrayWithDedupe </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> (a</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> b) </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">Array</span><span style="color:#B392F0;">.from(</span><span style="color:#F97583;">new</span><span style="color:#B392F0;"> Set([</span><span style="color:#F97583;">...</span><span style="color:#B392F0;">a</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">...</span><span style="color:#B392F0;">b]))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">// 这段代码定义了一个名为 deepMerge 的函数，该函数用于递归地将一个新的对象与现有对象合并。它接受两个参数：target 表示现有的对象，obj 表示新的对象。函数会遍历新对象的属性，如果这个属性在现有对象中存在，那么会对它们进行合并，否则直接将新对象的属性添加到现有对象中。具体地，如果这个属性的值既不是数组也不是对象，那么直接用新对象的值覆盖现有对象的值；如果这个属性的值是数组，那么会合并两个数组并去重；如果这个属性的值是对象，那么会递归地调用 deepMerge 函数进行合并。最后返回合并后的现有对象</span></span>
<span class="line"><span style="color:#6B737C;">/**</span></span>
<span class="line"><span style="color:#6B737C;"> * Recursively merge the content of the new object to the existing one</span></span>
<span class="line"><span style="color:#6B737C;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6B737C;"> </span><span style="color:#B392F0;">{Object}</span><span style="color:#6B737C;"> target the existing object</span></span>
<span class="line"><span style="color:#6B737C;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6B737C;"> </span><span style="color:#B392F0;">{Object}</span><span style="color:#6B737C;"> obj the new object</span></span>
<span class="line"><span style="color:#6B737C;"> */</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> deepMerge(target</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> obj) {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">for</span><span style="color:#B392F0;"> (</span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">key</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">of</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">Object</span><span style="color:#B392F0;">.keys(obj)) {</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">oldVal</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> target[key]</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">newVal</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> obj[key]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (</span><span style="color:#79B8FF;">Array</span><span style="color:#B392F0;">.isArray(oldVal) </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">Array</span><span style="color:#B392F0;">.isArray(newVal)) {</span></span>
<span class="line"><span style="color:#B392F0;">      target[key] </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> mergeArrayWithDedupe(oldVal</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> newVal)</span></span>
<span class="line"><span style="color:#B392F0;">    } </span><span style="color:#F97583;">else</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (isObject(oldVal) </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#B392F0;"> isObject(newVal)) {</span></span>
<span class="line"><span style="color:#B392F0;">      target[key] </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> deepMerge(oldVal</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> newVal)</span></span>
<span class="line"><span style="color:#B392F0;">    } </span><span style="color:#F97583;">else</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">      target[key] </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> newVal</span></span>
<span class="line"><span style="color:#B392F0;">    }</span></span>
<span class="line"><span style="color:#B392F0;">  }</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> target</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">default</span><span style="color:#B392F0;"> deepMerge</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><h2 id="sortdependencies" tabindex="-1">sortDependencies <a class="header-anchor" href="#sortdependencies" aria-hidden="true">#</a></h2><p>特性：在写入依赖项到磁盘之前先对其进行排序，这样用户之后的<code>npm add</code>的调用不会干扰 package.json 的排序</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// feat: sort dependencies before writing to disk</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// So that users&#39; subsequent \`npm add\` calls won&#39;t mess the \`package.json\`.</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">default</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">sortDependencies</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">packageJson</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">sorted</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">depTypes</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> [</span><span style="color:#98C379;">&#39;dependencies&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;devDependencies&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;peerDependencies&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;optionalDependencies&#39;</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">depType</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">of</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">depTypes</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">packageJson</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">depType</span><span style="color:#ABB2BF;">]) {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">sorted</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">depType</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">keys</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">packageJson</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">depType</span><span style="color:#ABB2BF;">])</span></span>
<span class="line"><span style="color:#ABB2BF;">        .</span><span style="color:#61AFEF;">sort</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">        .</span><span style="color:#61AFEF;">forEach</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">name</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">          </span><span style="color:#E06C75;">sorted</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">depType</span><span style="color:#ABB2BF;">][</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">packageJson</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">depType</span><span style="color:#ABB2BF;">][</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">        })</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    ...</span><span style="color:#E06C75;">packageJson</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    ...</span><span style="color:#E06C75;">sorted</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#6B737C;">// feat: sort dependencies before writing to disk</span></span>
<span class="line"><span style="color:#6B737C;">// So that users&#39; subsequent \`npm add\` calls won&#39;t mess the \`package.json\`.</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">default</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">function</span><span style="color:#B392F0;"> sortDependencies(packageJson) {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">sorted</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">depTypes</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> [</span><span style="color:#FFAB70;">&#39;dependencies&#39;</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;devDependencies&#39;</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;peerDependencies&#39;</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;optionalDependencies&#39;</span><span style="color:#B392F0;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">for</span><span style="color:#B392F0;"> (</span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">depType</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">of</span><span style="color:#B392F0;"> depTypes) {</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (packageJson[depType]) {</span></span>
<span class="line"><span style="color:#B392F0;">      sorted[depType] </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">      </span><span style="color:#79B8FF;">Object</span><span style="color:#B392F0;">.keys(packageJson[depType])</span></span>
<span class="line"><span style="color:#B392F0;">        .sort()</span></span>
<span class="line"><span style="color:#B392F0;">        .forEach((name) </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">          sorted[depType][name] </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> packageJson[depType][name]</span></span>
<span class="line"><span style="color:#B392F0;">        })</span></span>
<span class="line"><span style="color:#B392F0;">    }</span></span>
<span class="line"><span style="color:#B392F0;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#F97583;">...</span><span style="color:#B392F0;">packageJson</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#F97583;">...</span><span style="color:#B392F0;">sorted</span></span>
<span class="line"><span style="color:#B392F0;">  }</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div>`,8),e=[o];function t(c,r,y,B,b,i){return n(),a("div",null,e)}const m=s(p,[["render",t]]);export{C as __pageData,m as default};
