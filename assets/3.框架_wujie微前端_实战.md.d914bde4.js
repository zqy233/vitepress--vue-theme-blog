import{_ as s,o as n,c as a,a as l}from"./app.bfa9bd4b.js";const u=JSON.parse('{"title":"wujie框架应用（主子应用都是vite4+vue3）","description":"","frontmatter":{},"headers":[{"level":2,"title":"改造","slug":"改造","link":"#改造","children":[{"level":3,"title":"主应用中安装wujie的vue3组件","slug":"主应用中安装wujie的vue3组件","link":"#主应用中安装wujie的vue3组件","children":[]},{"level":3,"title":"主应用改造","slug":"主应用改造","link":"#主应用改造","children":[]},{"level":3,"title":"子应用mounted生命周期里渲染监听事件","slug":"子应用mounted生命周期里渲染监听事件","link":"#子应用mounted生命周期里渲染监听事件","children":[]}]},{"level":2,"title":"注意点","slug":"注意点","link":"#注意点","children":[]},{"level":2,"title":"多包运行库lerna","slug":"多包运行库lerna","link":"#多包运行库lerna","children":[{"level":3,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":3,"title":"配置","slug":"配置","link":"#配置","children":[]},{"level":3,"title":"package.json","slug":"package-json","link":"#package-json","children":[]}]},{"level":2,"title":"尚未完成的改造","slug":"尚未完成的改造","link":"#尚未完成的改造","children":[]},{"level":2,"title":"基于lerna的monorepo改造现有项目实战总结","slug":"基于lerna的monorepo改造现有项目实战总结","link":"#基于lerna的monorepo改造现有项目实战总结","children":[]},{"level":2,"title":"todo：隔离localstorage","slug":"todo-隔离localstorage","link":"#todo-隔离localstorage","children":[{"level":3,"title":"html-loader","slug":"html-loader","link":"#html-loader","children":[]},{"level":3,"title":"js-before-loaders","slug":"js-before-loaders","link":"#js-before-loaders","children":[]}]},{"level":2,"title":"问题：子应用vite图片路径是主应用ip","slug":"问题-子应用vite图片路径是主应用ip","link":"#问题-子应用vite图片路径是主应用ip","children":[]}],"relativePath":"3.框架/wujie微前端/实战.md","lastUpdated":1720835436698}'),p={name:"3.框架/wujie微前端/实战.md"},e=l(`<h1 id="wujie框架应用-主子应用都是vite4-vue3" tabindex="-1">wujie框架应用（主子应用都是vite4+vue3） <a class="header-anchor" href="#wujie框架应用-主子应用都是vite4-vue3" aria-hidden="true">#</a></h1><h2 id="改造" tabindex="-1">改造 <a class="header-anchor" href="#改造" aria-hidden="true">#</a></h2><h3 id="主应用中安装wujie的vue3组件" tabindex="-1">主应用中安装wujie的vue3组件 <a class="header-anchor" href="#主应用中安装wujie的vue3组件" aria-hidden="true">#</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">WujieVue</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;wujie-vue3&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">use</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">WujieVue</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#B392F0;"> WujieVue </span><span style="color:#F97583;">from</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;wujie-vue3&#39;</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#79B8FF;">app</span><span style="color:#B392F0;">.use(WujieVue);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="主应用改造" tabindex="-1">主应用改造 <a class="header-anchor" href="#主应用改造" aria-hidden="true">#</a></h3><p>主应用的界面左侧是菜单栏，右侧是菜单的对应页面</p><h4 id="主应用原先是采用动态组件的方式渲染右侧对应页面" tabindex="-1">主应用原先是采用动态组件的方式渲染右侧对应页面 <a class="header-anchor" href="#主应用原先是采用动态组件的方式渲染右侧对应页面" aria-hidden="true">#</a></h4><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">component</span></span>
<span class="line"><span style="color:#ABB2BF;">   </span><span style="color:#D19A66;font-style:italic;">v-if</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;dynamicComponent&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">   </span><span style="color:#FFFFFF;">:is=&quot;dynamicComponent&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">component</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">&lt;</span><span style="color:#FFAB70;">component</span></span>
<span class="line"><span style="color:#B392F0;">   v-if</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;dynamicComponent&quot;</span></span>
<span class="line"><span style="color:#B392F0;">   :is=&quot;dynamicComponent&quot;</span></span>
<span class="line"><span style="color:#B392F0;">&gt;&lt;/</span><span style="color:#FFAB70;">component</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">let</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">modules</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">meta</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">glob</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;../dynamicComponent/**/*.vue&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">...</span></span>
<span class="line"><span style="color:#E06C75;">computed</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">/** 动态组件 */</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#61AFEF;">dynamicComponent</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">let</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">filename</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">currentNode</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">routerName</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    ...</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">defineAsyncComponent</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">modules</span><span style="color:#ABB2BF;">[</span><span style="color:#98C379;">\`../dynamicComponent/</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">filename</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">.vue\`</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">      );</span></span>
<span class="line"><span style="color:#ABB2BF;">   }</span></span>
<span class="line"><span style="color:#ABB2BF;">},</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#B392F0;"> modules </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">import</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">meta</span><span style="color:#B392F0;">.glob(</span><span style="color:#FFAB70;">&#39;../dynamicComponent/**/*.vue&#39;</span><span style="color:#B392F0;">);</span></span>
<span class="line"><span style="color:#F97583;">...</span></span>
<span class="line"><span style="color:#B392F0;">computed</span><span style="color:#BBBBBB;">:</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">/** 动态组件 */</span></span>
<span class="line"><span style="color:#B392F0;">  dynamicComponent() {</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#F97583;">let</span><span style="color:#B392F0;"> filename </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">this</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">currentNode</span><span style="color:#B392F0;">.routerName;</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#F97583;">...</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> defineAsyncComponent(</span></span>
<span class="line"><span style="color:#B392F0;">      modules[</span><span style="color:#FFAB70;">\`../dynamicComponent/</span><span style="color:#F97583;">\${</span><span style="color:#B392F0;">filename</span><span style="color:#F97583;">}</span><span style="color:#FFAB70;">.vue\`</span><span style="color:#B392F0;">]</span></span>
<span class="line"><span style="color:#B392F0;">      );</span></span>
<span class="line"><span style="color:#B392F0;">   }</span></span>
<span class="line"><span style="color:#B392F0;">}</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h4 id="现在把component动态组件替换成wujie框架" tabindex="-1">现在把<code>component</code>动态组件替换成wujie框架 <a class="header-anchor" href="#现在把component动态组件替换成wujie框架" aria-hidden="true">#</a></h4><p>不在主界面进行动态组件的渲染，而是拆分至子应用，把相应路径传递给子应用，子应用收到后进行动态组件的渲染，这样就可以自行拆分页面到相应子应用</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">WujieVue</span></span>
<span class="line"><span style="color:#ABB2BF;">   </span><span style="color:#D19A66;font-style:italic;">style</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;height: 100%&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">   </span><span style="color:#D19A66;font-style:italic;">name</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;vue3&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">   </span><span style="color:#FFFFFF;">:url=&quot;vue3Url&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">   </span><span style="color:#FFFFFF;">:plugins=&quot;plugins&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E5C07B;">WujieVue</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">&lt;</span><span style="color:#79B8FF;">WujieVue</span></span>
<span class="line"><span style="color:#B392F0;">   style</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;height: 100%&quot;</span></span>
<span class="line"><span style="color:#B392F0;">   name</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;vue3&quot;</span></span>
<span class="line"><span style="color:#B392F0;">   :url=&quot;vue3Url&quot;</span></span>
<span class="line"><span style="color:#B392F0;">   :plugins=&quot;plugins&quot;</span></span>
<span class="line"><span style="color:#B392F0;">&gt;&lt;/</span><span style="color:#79B8FF;">WujieVue</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">/** 点击树节点也就是单个菜单时触发 */</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">handleNodeClick</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">      ...</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E5C07B;">wujieVue</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">bus</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">$emit</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;vue3-router-change&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">currentNode</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">routerName</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;"> </span><span style="color:#6B737C;">/** 点击树节点也就是单个菜单时触发 */</span></span>
<span class="line"><span style="color:#B392F0;">    handleNodeClick(data) {</span></span>
<span class="line"><span style="color:#B392F0;">      </span><span style="color:#F97583;">...</span></span>
<span class="line"><span style="color:#B392F0;">      </span><span style="color:#79B8FF;">wujieVue</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">bus</span><span style="color:#B392F0;">.$emit(</span><span style="color:#FFAB70;">&#39;vue3-router-change&#39;</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">this</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">currentNode</span><span style="color:#B392F0;">.routerName);</span></span>
<span class="line"><span style="color:#B392F0;">    }</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="子应用mounted生命周期里渲染监听事件" tabindex="-1">子应用<code>mounted</code>生命周期里渲染监听事件 <a class="header-anchor" href="#子应用mounted生命周期里渲染监听事件" aria-hidden="true">#</a></h3><p>子应用中再使用动态组件的方式渲染</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">component</span></span>
<span class="line"><span style="color:#ABB2BF;">   </span><span style="color:#D19A66;font-style:italic;">v-if</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;dynamicComponent&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">   </span><span style="color:#FFFFFF;">:is=&quot;dynamicComponent&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">component</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">&lt;</span><span style="color:#FFAB70;">component</span></span>
<span class="line"><span style="color:#B392F0;">   v-if</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;dynamicComponent&quot;</span></span>
<span class="line"><span style="color:#B392F0;">   :is=&quot;dynamicComponent&quot;</span></span>
<span class="line"><span style="color:#B392F0;">&gt;&lt;/</span><span style="color:#FFAB70;">component</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><code>mounted</code>生命周期里渲染监听事件，设置动态组件路径</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">mounted</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">window</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">$wujie</span><span style="color:#ABB2BF;">?.</span><span style="color:#E5C07B;">bus</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">$on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;vue3-router-change&#39;</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;font-style:italic;">path</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">wujie_dynamicComponent</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    });</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">mounted() {</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#79B8FF;">window</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">$wujie</span><span style="color:#B392F0;">?.</span><span style="color:#79B8FF;">bus</span><span style="color:#B392F0;">.$on(</span><span style="color:#FFAB70;">&#39;vue3-router-change&#39;</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> (path) </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">      </span><span style="color:#79B8FF;">this</span><span style="color:#B392F0;">.wujie_dynamicComponent </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> path;</span></span>
<span class="line"><span style="color:#B392F0;">    });</span></span>
<span class="line"><span style="color:#B392F0;">  }</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">let</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">modules</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">meta</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">glob</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;../dynamicComponent/**/*.vue&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">... </span></span>
<span class="line"><span style="color:#E06C75;">computed</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">/** 动态组件 */</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">dynamicComponent</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">wujie_dynamicComponent</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">defineAsyncComponent</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">          </span><span style="color:#E06C75;">modules</span><span style="color:#ABB2BF;">[</span><span style="color:#98C379;">\`../dynamicComponent/</span><span style="color:#C678DD;">\${</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">wujie_dynamicComponent</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">.vue\`</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">        );</span></span>
<span class="line"><span style="color:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#B392F0;"> modules </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">import</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">meta</span><span style="color:#B392F0;">.glob(</span><span style="color:#FFAB70;">&#39;../dynamicComponent/**/*.vue&#39;</span><span style="color:#B392F0;">);</span></span>
<span class="line"><span style="color:#F97583;">...</span><span style="color:#B392F0;"> </span></span>
<span class="line"><span style="color:#B392F0;">computed</span><span style="color:#BBBBBB;">:</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#6B737C;">/** 动态组件 */</span></span>
<span class="line"><span style="color:#B392F0;">    dynamicComponent() {</span></span>
<span class="line"><span style="color:#B392F0;">      </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (</span><span style="color:#79B8FF;">this</span><span style="color:#B392F0;">.wujie_dynamicComponent) {</span></span>
<span class="line"><span style="color:#B392F0;">        </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> defineAsyncComponent(</span></span>
<span class="line"><span style="color:#B392F0;">          modules[</span><span style="color:#FFAB70;">\`../dynamicComponent/</span><span style="color:#F97583;">\${</span><span style="color:#79B8FF;">this</span><span style="color:#B392F0;">.wujie_dynamicComponent</span><span style="color:#F97583;">}</span><span style="color:#FFAB70;">.vue\`</span><span style="color:#B392F0;">]</span></span>
<span class="line"><span style="color:#B392F0;">        );</span></span>
<span class="line"><span style="color:#B392F0;">      }</span></span>
<span class="line"><span style="color:#B392F0;">    }</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="注意点" tabindex="-1">注意点 <a class="header-anchor" href="#注意点" aria-hidden="true">#</a></h2><p>主子应用共享localstorage，所以不用传token，用户信息到子应用</p><p>同样，要注意主子应用的localstorage的key不能重名，也不能随意localstorage.clear</p><h2 id="多包运行库lerna" tabindex="-1">多包运行库lerna <a class="header-anchor" href="#多包运行库lerna" aria-hidden="true">#</a></h2><p><code>lerna</code> 库可用于命令行方式进行多包管理</p><h3 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-hidden="true">#</a></h3><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">pnpm</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">i</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-D</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">@lerna-lite/cli</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">@lerna-lite/run</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">pnpm </span><span style="color:#9DB1C5;">i</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">-D</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">@lerna-lite/cli</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">@lerna-lite/run</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-hidden="true">#</a></h3><h4 id="lerna-json" tabindex="-1">lerna.json <a class="header-anchor" href="#lerna-json" aria-hidden="true">#</a></h4><p>npmClient 用于指定使用的包管理工具，用于lerna内部逻辑处理</p><p>version 字段是必须的</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">&quot;npmClient&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;pnpm&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">&quot;version&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;0.0.1&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">{</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F8F8F8;">&quot;npmClient&quot;</span><span style="color:#BBBBBB;">:</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;pnpm&quot;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F8F8F8;">&quot;version&quot;</span><span style="color:#BBBBBB;">:</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;0.0.1&quot;</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="pnpm-workspace-yaml" tabindex="-1">pnpm-workspace.yaml <a class="header-anchor" href="#pnpm-workspace-yaml" aria-hidden="true">#</a></h4><p>Lerna 将使用 <a href="https://pnpm.io/workspaces" target="_blank" rel="noreferrer"><code>pnpm-workspace.yaml</code></a> 解析包位置</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#E06C75;">packages</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#56B6C2;">-</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;packages/*&quot;</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">packages</span><span style="color:#BBBBBB;">:</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">-</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;packages/*&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="package-json" tabindex="-1">package.json <a class="header-anchor" href="#package-json" aria-hidden="true">#</a></h3><p>根目录运行<code>lerna run start</code>，将运行所有子包里的<code>start</code>命令，从而可以一键启动所有子应用，打包同理</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">&quot;scripts&quot;</span><span style="color:#56B6C2;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">&quot;start&quot;</span><span style="color:#56B6C2;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;lerna run start --parallel&quot;,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#56B6C2;">...</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;"> </span><span style="color:#B392F0;">&quot;scripts&quot;</span><span style="color:#B392F0;">: </span><span style="color:#9DB1C5;">{</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#B392F0;">&quot;start&quot;</span><span style="color:#B392F0;">: </span><span style="color:#FFAB70;">&quot;lerna run start --parallel&quot;</span><span style="color:#9DB1C5;">,</span></span>
<span class="line"><span style="color:#B392F0;">    ...</span></span>
<span class="line"><span style="color:#B392F0;">  },</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="尚未完成的改造" tabindex="-1">尚未完成的改造 <a class="header-anchor" href="#尚未完成的改造" aria-hidden="true">#</a></h2><ul><li>刷新完页面恢复到首页 （加localstorage保存dynamicComponent传参）</li><li>查漏补缺，完善dynamicComponent的页面传参</li><li>添加生产环境配置，现在还是开发环境的配置</li></ul><h2 id="基于lerna的monorepo改造现有项目实战总结" tabindex="-1">基于lerna的monorepo改造现有项目实战总结 <a class="header-anchor" href="#基于lerna的monorepo改造现有项目实战总结" aria-hidden="true">#</a></h2><blockquote><p><a href="https://juejin.cn/post/7155098034571837447#heading-1" target="_blank" rel="noreferrer">https://juejin.cn/post/7155098034571837447#heading-1</a></p></blockquote><h2 id="todo-隔离localstorage" tabindex="-1">todo：隔离localstorage <a class="header-anchor" href="#todo-隔离localstorage" aria-hidden="true">#</a></h2><h3 id="html-loader" tabindex="-1">html-loader <a class="header-anchor" href="#html-loader" aria-hidden="true">#</a></h3><p>无界提供插件在运行时对子应用的 html 文本进行修改，使用该插件给所有子项目插入localstorage前缀</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">plugins</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> [</span></span>
<span class="line"><span style="color:#ABB2BF;">  {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">// 对子应用的template进行的aaa替换成bbb</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">htmlLoader</span><span style="color:#ABB2BF;">: (</span><span style="color:#E06C75;font-style:italic;">code</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">code</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">replace</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;aaa&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;bbb&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">];</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">plugins</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> [</span></span>
<span class="line"><span style="color:#B392F0;">  {</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#6B737C;">// 对子应用的template进行的aaa替换成bbb</span></span>
<span class="line"><span style="color:#B392F0;">    htmlLoader</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> (code) </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">      </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">code</span><span style="color:#B392F0;">.replace(</span><span style="color:#FFAB70;">&#39;aaa&#39;</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;bbb&#39;</span><span style="color:#B392F0;">);</span></span>
<span class="line"><span style="color:#B392F0;">    }</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  }</span></span>
<span class="line"><span style="color:#B392F0;">];</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="js-before-loaders" tabindex="-1">js-before-loaders <a class="header-anchor" href="#js-before-loaders" aria-hidden="true">#</a></h3><p>如果用户想在<code>html</code>中所有的<code>js</code>之前做，使用该插件给所有子项目插入localstorage前缀：</p><ol><li>在子应用运行一个<code>src=&quot;http://xxxxx&quot;</code>的脚本</li><li>在子应用中运行一个内联的 js 脚本<code>&lt;script&gt;content&lt;/script&gt;</code></li><li>执行一个回调函数</li></ol><p>那么这些工作可以放置在<code>js-before-loaders</code>中进行</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">plugins</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> [</span></span>
<span class="line"><span style="color:#ABB2BF;">  {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">// 在子应用所有的js之前</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">jsBeforeLoaders</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#7F848E;font-style:italic;">// 插入一个外联脚本</span></span>
<span class="line"><span style="color:#ABB2BF;">      { </span><span style="color:#E06C75;">src</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;http://xxxx.js&quot;</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#7F848E;font-style:italic;">// 插入一个内联监本</span></span>
<span class="line"><span style="color:#ABB2BF;">      { </span><span style="color:#E06C75;">content</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;console.log(&quot;test&quot;)&#39;</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#7F848E;font-style:italic;">// 执行一个回调，打印子应用名字</span></span>
<span class="line"><span style="color:#ABB2BF;">      {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#61AFEF;">callback</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">appWindow</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">          </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;js-before-loader-callback&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">appWindow</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">__WUJIE</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">id</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        },</span></span>
<span class="line"><span style="color:#ABB2BF;">      },</span></span>
<span class="line"><span style="color:#ABB2BF;">    ],</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#ABB2BF;">];</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">plugins</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> [</span></span>
<span class="line"><span style="color:#B392F0;">  {</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#6B737C;">// 在子应用所有的js之前</span></span>
<span class="line"><span style="color:#B392F0;">    jsBeforeLoaders</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> [</span></span>
<span class="line"><span style="color:#B392F0;">      </span><span style="color:#6B737C;">// 插入一个外联脚本</span></span>
<span class="line"><span style="color:#B392F0;">      { src</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;http://xxxx.js&quot;</span><span style="color:#B392F0;"> }</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">      </span><span style="color:#6B737C;">// 插入一个内联监本</span></span>
<span class="line"><span style="color:#B392F0;">      { content</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;console.log(&quot;test&quot;)&#39;</span><span style="color:#B392F0;"> }</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">      </span><span style="color:#6B737C;">// 执行一个回调，打印子应用名字</span></span>
<span class="line"><span style="color:#B392F0;">      {</span></span>
<span class="line"><span style="color:#B392F0;">        callback(appWindow) {</span></span>
<span class="line"><span style="color:#B392F0;">          </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(</span><span style="color:#FFAB70;">&quot;js-before-loader-callback&quot;</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">appWindow</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">__WUJIE</span><span style="color:#B392F0;">.id);</span></span>
<span class="line"><span style="color:#B392F0;">        }</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">      }</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">    ]</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  }</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">];</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="问题-子应用vite图片路径是主应用ip" tabindex="-1">问题：子应用vite图片路径是主应用ip <a class="header-anchor" href="#问题-子应用vite图片路径是主应用ip" aria-hidden="true">#</a></h2><p><a href="https://github.com/Tencent/wujie/issues/398" target="_blank" rel="noreferrer">https://github.com/Tencent/wujie/issues/398</a></p><p>实际上是vite问题，vite子应用打包图片使用的是self.location而不是i<wbr>mport.meta.url</p><p><a href="https://github.com/vitejs/vite/issues/10842" target="_blank" rel="noreferrer">https://github.com/vitejs/vite/issues/10842</a></p>`,54),o=[e];function c(r,t,B,i,y,F){return n(),a("div",null,o)}const b=s(p,[["render",c]]);export{u as __pageData,b as default};
