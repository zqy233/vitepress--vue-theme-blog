import{_ as t,o as l,c as i,b as e,d as o}from"./app.bfa9bd4b.js";const S=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"Vite构建工具为什么用Rollup和esbuild","slug":"vite构建工具为什么用rollup和esbuild","link":"#vite构建工具为什么用rollup和esbuild","children":[]}],"relativePath":"5.打包/5.vite/原理.md","lastUpdated":1720835436706}'),s={name:"5.打包/5.vite/原理.md"},a=e("h2",{id:"vite构建工具为什么用rollup和esbuild",tabindex:"-1"},[o("Vite构建工具为什么用Rollup和esbuild "),e("a",{class:"header-anchor",href:"#vite构建工具为什么用rollup和esbuild","aria-hidden":"true"},"#")],-1),d=e("p",null,"Vite是一个由原生ESM驱动的Web开发构建工具。在选择构建工具的时候也最好可以选择基于ESM的工具",-1),r=e("p",null,"Rollup是基于ES2015的JavaScript打包工具。它将小文件打包成一个大文件或者更复杂的库和应用，打包既可用于浏览器和Node.js使用。 Rollup最显著的地方就是能让打包文件体积很小。相比其他JavaScript打包工具，Rollup总能打出更小，更快的包。因为Rollup基于ES2015模块，比Webpack和Browserify使用的CommonJS模块机制更高效",-1),n=e("p",null,"esbuild在开发阶段（vite dev）使用，主要用来预编译第三方依赖和编译 业务代码里的typescript代码。esbuild 在抹平了第三方依赖的语法差异（第三方依赖不一定是 ESM 的语法）的同时，保证了 vite dev 的开发速度",-1),p=[a,d,r,n];function c(u,_,v,h,b,m){return l(),i("div",null,p)}const E=t(s,[["render",c]]);export{S as __pageData,E as default};
