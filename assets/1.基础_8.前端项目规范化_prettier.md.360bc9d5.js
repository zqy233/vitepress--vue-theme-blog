import{_ as s,o as n,c as a,a as l}from"./app.bfa9bd4b.js";const e="/zqy-blog/assets/image-20230221115940825.ea27cd13.png",b=JSON.parse('{"title":"prettier","description":"","frontmatter":{},"headers":[{"level":2,"title":"cli方式使用","slug":"cli方式使用","link":"#cli方式使用","children":[]},{"level":2,"title":".prettierignore","slug":"prettierignore","link":"#prettierignore","children":[{"level":3,"title":"示例，出自vitepress源码","slug":"示例-出自vitepress源码","link":"#示例-出自vitepress源码","children":[]}]},{"level":2,"title":"prettier配置文件","slug":"prettier配置文件","link":"#prettier配置文件","children":[]},{"level":2,"title":"结合lint-staged与simple-git-hooks","slug":"结合lint-staged与simple-git-hooks","link":"#结合lint-staged与simple-git-hooks","children":[]},{"level":2,"title":"stylelint-prettier","slug":"stylelint-prettier","link":"#stylelint-prettier","children":[]},{"level":2,"title":"搭配eslint","slug":"搭配eslint","link":"#搭配eslint","children":[{"level":3,"title":"eslint-config-prettier","slug":"eslint-config-prettier","link":"#eslint-config-prettier","children":[]},{"level":3,"title":"eslint-plugin-prettier","slug":"eslint-plugin-prettier","link":"#eslint-plugin-prettier","children":[]},{"level":3,"title":"prettier-eslint","slug":"prettier-eslint","link":"#prettier-eslint","children":[]}]},{"level":2,"title":"编程方式使用prettier","slug":"编程方式使用prettier","link":"#编程方式使用prettier","children":[{"level":3,"title":"以编程方式运行Pretier","slug":"以编程方式运行pretier","link":"#以编程方式运行pretier","children":[]},{"level":3,"title":"prettier.format(source, options)","slug":"prettier-format-source-options","link":"#prettier-format-source-options","children":[]},{"level":3,"title":"prettier.check(source [, options])","slug":"prettier-check-source-options","link":"#prettier-check-source-options","children":[]},{"level":3,"title":"prettier.resolveConfig(filePath [, options])","slug":"prettier-resolveconfig-filepath-options","link":"#prettier-resolveconfig-filepath-options","children":[]},{"level":3,"title":"prettier.formatWithCursor(source [, options])","slug":"prettier-formatwithcursor-source-options","link":"#prettier-formatwithcursor-source-options","children":[]},{"level":3,"title":"prettier.resolveConfigFile([filePath])","slug":"prettier-resolveconfigfile-filepath","link":"#prettier-resolveconfigfile-filepath","children":[]},{"level":3,"title":"prettier.getFileInfo","slug":"prettier-getfileinfo","link":"#prettier-getfileinfo","children":[]},{"level":3,"title":"prettier.getSupportInfo()","slug":"prettier-getsupportinfo","link":"#prettier-getsupportinfo","children":[]}]},{"level":2,"title":"插件列表","slug":"插件列表","link":"#插件列表","children":[{"level":3,"title":"官方插件","slug":"官方插件","link":"#官方插件","children":[]},{"level":3,"title":"社区插件","slug":"社区插件","link":"#社区插件","children":[]}]},{"level":2,"title":"转换.editorconfig","slug":"转换-editorconfig","link":"#转换-editorconfig","children":[]},{"level":2,"title":"使用插件支持其他语言","slug":"使用插件支持其他语言","link":"#使用插件支持其他语言","children":[]},{"level":2,"title":"判断文件是否被ignore","slug":"判断文件是否被ignore","link":"#判断文件是否被ignore","children":[]}],"relativePath":"1.基础/8.前端项目规范化/prettier.md","lastUpdated":1720835436686}'),p={name:"1.基础/8.前端项目规范化/prettier.md"},o=l(`<h1 id="prettier" tabindex="-1">prettier <a class="header-anchor" href="#prettier" aria-hidden="true">#</a></h1><p>Prettier是一个固执己见的代码格式化程序</p><p>一般通过以下方式使用prettier</p><ul><li>使用vscode等代码编辑器的<code>prettier插件</code>：搭配快捷键如ctrl+s，保存时自动格式化，配置简单，使用方便，但是缺点是由于团队成员可能使用不同的编辑器，prettier版本、配置不同，从而格式化的风格迥异且难统一。所以这种使用方式个人使用没问题，团队推广不太适合</li><li>下载<code>prettier</code>npm 包，在项目中配置好，统一格式化风格</li></ul><h2 id="cli方式使用" tabindex="-1">cli方式使用 <a class="header-anchor" href="#cli方式使用" aria-hidden="true">#</a></h2><p>下载</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npm</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">i</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-D</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">prettier</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">npm </span><span style="color:#9DB1C5;">i</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">-D</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">prettier</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>新建test.js</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">uglyCode</span><span style="color:#ABB2BF;">(){</span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;this is an ugly function!&quot;</span><span style="color:#ABB2BF;">)}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> uglyCode(){</span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(</span><span style="color:#FFAB70;">&quot;this is an ugly function!&quot;</span><span style="color:#B392F0;">)}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>使用命令格式化指定文件</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npx</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">prettier</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">--write</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">.</span><span style="color:#56B6C2;">\\t</span><span style="color:#98C379;">est.js</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">npx </span><span style="color:#9DB1C5;">prettier</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">--write</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">.</span><span style="color:#B392F0;">\\t</span><span style="color:#9DB1C5;">est.js</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>使用命令格式化所有文件</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">npx</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">prettier</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">--write</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">.</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">npx </span><span style="color:#9DB1C5;">prettier</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">--write</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>格式化后</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">uglyCode</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;this is an ugly function!&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> uglyCode() {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(</span><span style="color:#FFAB70;">&quot;this is an ugly function!&quot;</span><span style="color:#B392F0;">);</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>prettier默认不会处理<code>node_modules</code>里的文件，如果想忽略其他的文件或目录，可以在项目目录下新建<code>.prettierignore</code>文件，表示忽略某些文件或文件夹，具体格式跟<code>.gitignore</code>类似</p><p>目前的代码格式化都是Prettier根据自己的默认配置帮我们做的，当然也可以通过Prettier的配置项实现自定义的格式化</p><h2 id="prettierignore" tabindex="-1">.prettierignore <a class="header-anchor" href="#prettierignore" aria-hidden="true">#</a></h2><p>设置prettier格式化忽视哪些文件</p><h3 id="示例-出自vitepress源码" tabindex="-1">示例，出自vitepress源码 <a class="header-anchor" href="#示例-出自vitepress源码" aria-hidden="true">#</a></h3><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">*.md</span></span>
<span class="line"><span style="color:#ABB2BF;">*.vue</span></span>
<span class="line"><span style="color:#61AFEF;">dist</span></span>
<span class="line"><span style="color:#61AFEF;">pnpm-lock.yaml</span></span>
<span class="line"><span style="color:#61AFEF;">cache</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">*</span><span style="color:#B392F0;">.md</span></span>
<span class="line"><span style="color:#F97583;">*</span><span style="color:#B392F0;">.vue</span></span>
<span class="line"><span style="color:#B392F0;">dist</span></span>
<span class="line"><span style="color:#B392F0;">pnpm-lock.yaml</span></span>
<span class="line"><span style="color:#B392F0;">cache</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="prettier配置文件" tabindex="-1">prettier配置文件 <a class="header-anchor" href="#prettier配置文件" aria-hidden="true">#</a></h2><p>prettier的配置文件支持很多种格式，vscode-prettier插件会优先使用配置文件，如果没有，再使用插件本身的prettier配置</p><p>如下是一个<code>.prettierrc.js</code>，列出了目前所有支持的prettier配置属性</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">module.exports = {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 指定prettier将换行的行长&lt;int&gt;，默认80</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#FFFFFF;">printWidth</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">80</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 指定每个缩进级别的空格数&lt;int&gt;，默认2</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#FFFFFF;">tabWidth</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 用制表符而不是空格缩进行&lt;bool&gt;，默认false</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#FFFFFF;">useTabs</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 在语句末尾添加分号&lt;bool&gt;，默认true</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#FFFFFF;">semi</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 使用单引号而不是双引号&lt;bool&gt;，默认false</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#FFFFFF;">singleQuote</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// object对象中key值是否加引号&lt;as-needed|consistent|preserve&gt;，默认as-needed</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// as-needed-仅在需要时在对象属性周围添加引号</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// consistent-如果一个对象中至少有一个属性需要引号，所有属性添加引号</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// preserve-保留对象属性中用户输入使用的引号</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#FFFFFF;">quoteProps</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">&#39;as-needed&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 在 JSX 中使用单引号而不是双引号&lt;bool&gt;，默认false</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#FFFFFF;">jsxSingleQuote</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 在多行逗号分隔的句法结构中尽可能打印尾随逗号&lt;es5|none|all&gt;，默认es5</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// es5-在 ES5 中有效的尾随逗号（对象、数组等），TypeScript 的类型参数中没有尾随逗号</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// none-没有尾随逗号</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// all-尽可能以逗号结尾（包括函数参数和调用）。要运行以这种方式格式化的 JavaScript 代码需要一个支持 ES2017（Node.js 8+ 或现代浏览器）或下层编译的引擎。这还会在 TypeScript 的类型参数中启用尾随逗号（自 2018 年 1 月发布的 TypeScript 2.7 起支持）</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#FFFFFF;">trailingComma</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">&#39;all&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 对象字面量中括号之间的空格&lt;bool&gt;，默认true</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#FFFFFF;">bracketSpacing</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 将&gt;多行 HTML（HTML、JSX、Vue、Angular）元素放在最后一行的末尾，而不是单独放在下一行（不适用于自关闭元素）&lt;bool&gt;，默认false</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// true：</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// &lt;button</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">//   className=&quot;prettier-class&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">//   id=&quot;prettier-id&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">//   onClick={this.handleClick}&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">//   Click Here</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// &lt;/button&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// false：</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// &lt;button</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">//   className=&quot;prettier-class&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">//   id=&quot;prettier-id&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">//   onClick={this.handleClick}</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// &gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">//   Click Here</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// &lt;/button&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#FFFFFF;">bracketSameLine</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 在唯一的箭头函数参数周围包含括号&lt;always|avoid&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// always-始终包含括号</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// avoid-尽可能省略括号</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#FFFFFF;">arrowParens</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">&#39;always&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// Prettier 可以限制自己只格式化在文件顶部包含特殊注释（称为 pragma）的文件。这在逐渐将大型、未格式化的代码库过渡到 Prettier 时非常有用&lt;bool&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#FFFFFF;">requirePragma</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// Prettier可以在文件的顶部插入一个 @format的特殊注释，以表明改文件已经被Prettier格式化过了。在使用 --require-pragma参数处理一连串的文件时这个功能将十分有用。如果文件顶部已经有一个doclock，这个选项将新建一行注释，并打上@format标记&lt;bool&gt;，默认false</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#FFFFFF;">insertPragma</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 超过最大宽度是否换行&lt;always|never|preserve&gt;，默认preserve</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// always-如果超过最大宽度换行</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// never-不要换行</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// preserve-按原样显示</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#FFFFFF;">proseWrap</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">&#39;preserve&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 指定 HTML、Vue、Angular 和 Handlebars 的全局空格敏感度&lt;css|strict|ignore&gt;，默认css</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// css-遵循CSS属性的默认值</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// strict-所有标签周围的空格（或缺少空格）被认为是重要的</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// ignore-所有标签周围的空格（或缺少空格）被认为是无关紧要的</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#FFFFFF;">htmlWhitespaceSensitivity</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">&#39;css&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// vue文件script和style标签中是否缩进&lt;bool&gt;，默认false</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#FFFFFF;">vueIndentScriptAndStyle</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 行尾换行符&lt;lf|crlf|cr|auto&gt;，默认lf</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#FFFFFF;">endOfLine</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">&#39;lf&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 控制 Prettier 是否格式化嵌入在文件中的引用代码&lt;off|auto&gt;，默认auto</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// auto–如果 Prettier 可以自动识别，则格式化嵌入代码</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// off-从不自动格式化嵌入代码</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#FFFFFF;">embeddedLanguageFormatting</span><span style="color:#ABB2BF;">: </span><span style="color:#FFFFFF;">&#39;auto&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 在 HTML、Vue 和 JSX 中强制执行每行单个属性&lt;bool&gt;，默认false</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#FFFFFF;">singleAttributePerLine</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">module.exports = {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// 指定prettier将换行的行长&lt;int&gt;，默认80</span></span>
<span class="line"><span style="color:#B392F0;">  printWidth</span><span style="color:#BBBBBB;">:</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">80</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// 指定每个缩进级别的空格数&lt;int&gt;，默认2</span></span>
<span class="line"><span style="color:#B392F0;">  tabWidth</span><span style="color:#BBBBBB;">:</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">2</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// 用制表符而不是空格缩进行&lt;bool&gt;，默认false</span></span>
<span class="line"><span style="color:#B392F0;">  useTabs</span><span style="color:#BBBBBB;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">false</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// 在语句末尾添加分号&lt;bool&gt;，默认true</span></span>
<span class="line"><span style="color:#B392F0;">  semi</span><span style="color:#BBBBBB;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">true</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// 使用单引号而不是双引号&lt;bool&gt;，默认false</span></span>
<span class="line"><span style="color:#B392F0;">  singleQuote</span><span style="color:#BBBBBB;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">true</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// object对象中key值是否加引号&lt;as-needed|consistent|preserve&gt;，默认as-needed</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// as-needed-仅在需要时在对象属性周围添加引号</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// consistent-如果一个对象中至少有一个属性需要引号，所有属性添加引号</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// preserve-保留对象属性中用户输入使用的引号</span></span>
<span class="line"><span style="color:#B392F0;">  quoteProps</span><span style="color:#BBBBBB;">:</span><span style="color:#B392F0;"> &#39;as-needed&#39;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// 在 JSX 中使用单引号而不是双引号&lt;bool&gt;，默认false</span></span>
<span class="line"><span style="color:#B392F0;">  jsxSingleQuote</span><span style="color:#BBBBBB;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">false</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// 在多行逗号分隔的句法结构中尽可能打印尾随逗号&lt;es5|none|all&gt;，默认es5</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// es5-在 ES5 中有效的尾随逗号（对象、数组等），TypeScript 的类型参数中没有尾随逗号</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// none-没有尾随逗号</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// all-尽可能以逗号结尾（包括函数参数和调用）。要运行以这种方式格式化的 JavaScript 代码需要一个支持 ES2017（Node.js 8+ 或现代浏览器）或下层编译的引擎。这还会在 TypeScript 的类型参数中启用尾随逗号（自 2018 年 1 月发布的 TypeScript 2.7 起支持）</span></span>
<span class="line"><span style="color:#B392F0;">  trailingComma</span><span style="color:#BBBBBB;">:</span><span style="color:#B392F0;"> &#39;all&#39;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// 对象字面量中括号之间的空格&lt;bool&gt;，默认true</span></span>
<span class="line"><span style="color:#B392F0;">  bracketSpacing</span><span style="color:#BBBBBB;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">true</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// 将&gt;多行 HTML（HTML、JSX、Vue、Angular）元素放在最后一行的末尾，而不是单独放在下一行（不适用于自关闭元素）&lt;bool&gt;，默认false</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// true：</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// &lt;button</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">//   className=&quot;prettier-class&quot;</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">//   id=&quot;prettier-id&quot;</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">//   onClick={this.handleClick}&gt;</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">//   Click Here</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// &lt;/button&gt;</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// false：</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// &lt;button</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">//   className=&quot;prettier-class&quot;</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">//   id=&quot;prettier-id&quot;</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">//   onClick={this.handleClick}</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// &gt;</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">//   Click Here</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// &lt;/button&gt;</span></span>
<span class="line"><span style="color:#B392F0;">  bracketSameLine</span><span style="color:#BBBBBB;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">true</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// 在唯一的箭头函数参数周围包含括号&lt;always|avoid&gt;</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// always-始终包含括号</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// avoid-尽可能省略括号</span></span>
<span class="line"><span style="color:#B392F0;">  arrowParens</span><span style="color:#BBBBBB;">:</span><span style="color:#B392F0;"> &#39;always&#39;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// Prettier 可以限制自己只格式化在文件顶部包含特殊注释（称为 pragma）的文件。这在逐渐将大型、未格式化的代码库过渡到 Prettier 时非常有用&lt;bool&gt;</span></span>
<span class="line"><span style="color:#B392F0;">  requirePragma</span><span style="color:#BBBBBB;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">false</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// Prettier可以在文件的顶部插入一个 @format的特殊注释，以表明改文件已经被Prettier格式化过了。在使用 --require-pragma参数处理一连串的文件时这个功能将十分有用。如果文件顶部已经有一个doclock，这个选项将新建一行注释，并打上@format标记&lt;bool&gt;，默认false</span></span>
<span class="line"><span style="color:#B392F0;">  insertPragma</span><span style="color:#BBBBBB;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">false</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// 超过最大宽度是否换行&lt;always|never|preserve&gt;，默认preserve</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// always-如果超过最大宽度换行</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// never-不要换行</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// preserve-按原样显示</span></span>
<span class="line"><span style="color:#B392F0;">  proseWrap</span><span style="color:#BBBBBB;">:</span><span style="color:#B392F0;"> &#39;preserve&#39;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// 指定 HTML、Vue、Angular 和 Handlebars 的全局空格敏感度&lt;css|strict|ignore&gt;，默认css</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// css-遵循CSS属性的默认值</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// strict-所有标签周围的空格（或缺少空格）被认为是重要的</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// ignore-所有标签周围的空格（或缺少空格）被认为是无关紧要的</span></span>
<span class="line"><span style="color:#B392F0;">  htmlWhitespaceSensitivity</span><span style="color:#BBBBBB;">:</span><span style="color:#B392F0;"> &#39;css&#39;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// vue文件script和style标签中是否缩进&lt;bool&gt;，默认false</span></span>
<span class="line"><span style="color:#B392F0;">  vueIndentScriptAndStyle</span><span style="color:#BBBBBB;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">false</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// 行尾换行符&lt;lf|crlf|cr|auto&gt;，默认lf</span></span>
<span class="line"><span style="color:#B392F0;">  endOfLine</span><span style="color:#BBBBBB;">:</span><span style="color:#B392F0;"> &#39;lf&#39;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// 控制 Prettier 是否格式化嵌入在文件中的引用代码&lt;off|auto&gt;，默认auto</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// auto–如果 Prettier 可以自动识别，则格式化嵌入代码</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// off-从不自动格式化嵌入代码</span></span>
<span class="line"><span style="color:#B392F0;">  embeddedLanguageFormatting</span><span style="color:#BBBBBB;">:</span><span style="color:#B392F0;"> &#39;auto&#39;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// 在 HTML、Vue 和 JSX 中强制执行每行单个属性&lt;bool&gt;，默认false</span></span>
<span class="line"><span style="color:#B392F0;">  singleAttributePerLine</span><span style="color:#BBBBBB;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#B392F0;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br></div></div><h2 id="结合lint-staged与simple-git-hooks" tabindex="-1">结合lint-staged与simple-git-hooks <a class="header-anchor" href="#结合lint-staged与simple-git-hooks" aria-hidden="true">#</a></h2><p>lint-staged是检测git add . 中暂存区的文件，对检测出的文件执行脚本</p><p>simple-git-hooks是git钩子库，对git执行的一些命令，通过对应的hooks钩子触发，执行自定义的脚本程序</p><p>pageage.json添加如下，表示在git提交前执行lint-staged，lint-staged又触发prettier，从而进行所有提交文件的格式化</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;simple-git-hooks&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">&quot;pre-commit&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;pnpm lint-staged&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">  },  </span></span>
<span class="line"><span style="color:#98C379;">&quot;lint-staged&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">&quot;*&quot;</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#98C379;">&quot;prettier --write --ignore-unknown&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">    ]</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;simple-git-hooks&quot;</span><span style="color:#B392F0;">: {</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#F8F8F8;">&quot;pre-commit&quot;</span><span style="color:#BBBBBB;">:</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;pnpm lint-staged&quot;</span></span>
<span class="line"><span style="color:#B392F0;">  },  </span></span>
<span class="line"><span style="color:#FFAB70;">&quot;lint-staged&quot;</span><span style="color:#B392F0;">: {</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#F8F8F8;">&quot;*&quot;</span><span style="color:#BBBBBB;">:</span><span style="color:#B392F0;"> [</span></span>
<span class="line"><span style="color:#B392F0;">      </span><span style="color:#FFAB70;">&quot;prettier --write --ignore-unknown&quot;</span></span>
<span class="line"><span style="color:#B392F0;">    ]</span></span>
<span class="line"><span style="color:#B392F0;">  }</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="stylelint-prettier" tabindex="-1">stylelint-prettier <a class="header-anchor" href="#stylelint-prettier" aria-hidden="true">#</a></h2><p>将prettier作为stylelint规则运行，并将差异报告为独立的stylelint问题</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">pnpm</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">i</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-D</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">stylelint</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">stylelint-prettier</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">prettier</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">pnpm </span><span style="color:#9DB1C5;">i</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">-D</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">stylelint</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">stylelint-prettier</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">prettier</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="搭配eslint" tabindex="-1">搭配eslint <a class="header-anchor" href="#搭配eslint" aria-hidden="true">#</a></h2><blockquote><p><a href="https://prettier.io/docs/en/integrating-with-linters.html" target="_blank" rel="noreferrer">https://prettier.io/docs/en/integrating-with-linters.html</a></p></blockquote><h3 id="eslint-config-prettier" tabindex="-1">eslint-config-prettier <a class="header-anchor" href="#eslint-config-prettier" aria-hidden="true">#</a></h3><blockquote><p><a href="https://github.com/prettier/eslint-config-prettier" target="_blank" rel="noreferrer">https://github.com/prettier/eslint-config-prettier</a></p></blockquote><p>关闭和prettier冲突的eslint规则</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">pnpm</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">i</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-D</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">eslint-config-prettier</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">pnpm </span><span style="color:#9DB1C5;">i</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">-D</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">eslint-config-prettier</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">&quot;extends&quot;</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">&quot;some-other-config-you-use&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">&quot;prettier&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">  ]</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">{</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F8F8F8;">&quot;extends&quot;</span><span style="color:#BBBBBB;">:</span><span style="color:#B392F0;"> [</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#FFAB70;">&quot;some-other-config-you-use&quot;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#FFAB70;">&quot;prettier&quot;</span></span>
<span class="line"><span style="color:#B392F0;">  ]</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="eslint-plugin-prettier" tabindex="-1">eslint-plugin-prettier <a class="header-anchor" href="#eslint-plugin-prettier" aria-hidden="true">#</a></h3><p>将prettier作为eslint规则运行，并将差异作为单个eslint问题报告 如果所需的格式与prettier的输出不匹配，则应使用其他工具，比如 <a href="https://github.com/prettier/prettier-eslint" target="_blank" rel="noreferrer">prettier-eslint</a> 安装前请阅读“与过梁集成”。</p><blockquote><p><a href="https://github.com/prettier/eslint-plugin-prettier" target="_blank" rel="noreferrer">https://github.com/prettier/eslint-plugin-prettier</a></p></blockquote><p>如果您禁用与代码格式相关的所有其他ESLint规则，并且仅启用检测潜在错误的规则，则此插件工作得最好。（如果另一个激活的ESLint规则与prettier的规则不一致，则无法避免lint错误。）您可以使用<code> eslint-config-prettier</code>来禁用所有与格式化相关的ESLin规则。</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">pnpm</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">i</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-D</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">eslint-plugin-prettier</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">pnpm </span><span style="color:#9DB1C5;">i</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">-D</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">eslint-plugin-prettier</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>eslintrc.json</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">&quot;plugins&quot;</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;prettier&quot;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">&quot;rules&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">&quot;prettier/prettier&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;error&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">{</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F8F8F8;">&quot;plugins&quot;</span><span style="color:#BBBBBB;">:</span><span style="color:#B392F0;"> [</span><span style="color:#FFAB70;">&quot;prettier&quot;</span><span style="color:#B392F0;">]</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F8F8F8;">&quot;rules&quot;</span><span style="color:#BBBBBB;">:</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#F8F8F8;">&quot;prettier/prettier&quot;</span><span style="color:#BBBBBB;">:</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;error&quot;</span></span>
<span class="line"><span style="color:#B392F0;">  }</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="prettier-eslint" tabindex="-1">prettier-eslint <a class="header-anchor" href="#prettier-eslint" aria-hidden="true">#</a></h3><blockquote><p><a href="https://github.com/prettier/prettier-eslint" target="_blank" rel="noreferrer">https://github.com/prettier/prettier-eslint</a></p></blockquote><p>使用prettier格式代码，并且遵循eslint --fix</p><h2 id="编程方式使用prettier" tabindex="-1">编程方式使用prettier <a class="header-anchor" href="#编程方式使用prettier" aria-hidden="true">#</a></h2><blockquote><p>翻译自 <a href="https://prettier.io/docs/en/api.html" target="_blank" rel="noreferrer">https://prettier.io/docs/en/api.html</a></p></blockquote><h3 id="以编程方式运行pretier" tabindex="-1">以编程方式运行Pretier <a class="header-anchor" href="#以编程方式运行pretier" aria-hidden="true">#</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">prettier</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;prettier&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">prettier</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> require(</span><span style="color:#FFAB70;">&quot;prettier&quot;</span><span style="color:#B392F0;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="prettier-format-source-options" tabindex="-1"><code>prettier.format(source, options)</code> <a class="header-anchor" href="#prettier-format-source-options" aria-hidden="true">#</a></h3><p><code>format</code>方法用于使用<code>prettier</code>格式化文本。必须根据您正在格式化的语言进行设置<code>options.parser</code>（请参阅<code>可用parser解析器列表</code>）。或者可以为<code>prettier</code>指定<code>options.filepath</code>，<code>prettier</code>会从文件扩展名推断出解析器。可以提供其他选项来覆盖默认值。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">prettier</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">format</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;foo ( );&quot;</span><span style="color:#ABB2BF;">, { </span><span style="color:#E06C75;">semi</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">parser</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;babel&quot;</span><span style="color:#ABB2BF;"> });</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// -&gt; &quot;foo()&quot;</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#79B8FF;">prettier</span><span style="color:#B392F0;">.format(</span><span style="color:#FFAB70;">&quot;foo ( );&quot;</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> { semi</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">false</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> parser</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;babel&quot;</span><span style="color:#B392F0;"> });</span></span>
<span class="line"><span style="color:#6B737C;">// -&gt; &quot;foo()&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="prettier-check-source-options" tabindex="-1"><code>prettier.check(source [, options])</code> <a class="header-anchor" href="#prettier-check-source-options" aria-hidden="true">#</a></h3><p>检查文件是否已使用Pretier格式化，并返回布尔值。这类似于CLI中的--check或--list不同参数，对于在CI场景中运行Pretier非常有用。</p><h3 id="prettier-resolveconfig-filepath-options" tabindex="-1"><code>prettier.resolveConfig(filePath [, options])</code> <a class="header-anchor" href="#prettier-resolveconfig-filepath-options" aria-hidden="true">#</a></h3><p><code>resolveConfig</code>可用于解析给定源文件的配置，将其路径作为第一个参数传递（这里官方文档讲的有点拗口，实际上就是prettier通过一个给定的路径搜索配置文件，因为prettier有很多配置文件类型，所以可以通过这个api来判断是否存在prettier配置文件）</p><p>配置搜索将从文件路径开始，并继续搜索目录（您可以使用process.cwd（）从当前目录开始搜索）。或者如果不想搜索，可以直接将配置文件的路径作为<code>options.config</code>传递。将返回一个promise，该promise将解析为：</p><ul><li>找到提供配置文件的选项对象</li><li>如果找不到文件，则返回null</li><li>如果解析配置文件时出错，promise将rejected</li></ul><p>如果<code>options.useCache</code>为false，则将绕过所有缓存</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">text</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">fs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">readFileSync</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">filePath</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;utf8&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">prettier</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">resolveConfig</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">filePath</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">then</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">options</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">formatted</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">prettier</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">format</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">text</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">options</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">text</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">fs</span><span style="color:#B392F0;">.readFileSync(filePath</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;utf8&quot;</span><span style="color:#B392F0;">);</span></span>
<span class="line"><span style="color:#79B8FF;">prettier</span><span style="color:#B392F0;">.resolveConfig(filePath).then((options) </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">formatted</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">prettier</span><span style="color:#B392F0;">.format(text</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> options);</span></span>
<span class="line"><span style="color:#B392F0;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>如果<code>options.editorconfig</code>为true，并且项目中有<code>.editorconfig</code>文件，Prettier将对其进行解析，并将其转换为相应的prettier配置。此配置将被.prettierrc等覆盖。目前，支持以下editorconfig属性：</p><ul><li><code>end_of_line</code></li><li><code>indent_style</code></li><li><code>indent_size</code>/<code>tab_width</code></li><li><code>max_line_length</code></li></ul><p>如果要使用同步版本，请使用prettier的<code>.resolveConfig.sync（filePath[，options]）</code></p><h3 id="prettier-formatwithcursor-source-options" tabindex="-1"><code>prettier.formatWithCursor(source [, options])</code> <a class="header-anchor" href="#prettier-formatwithcursor-source-options" aria-hidden="true">#</a></h3><p>formatWithCursor既格式化代码，又将光标位置从未格式化代码转换为格式化代码。这对于编辑器集成非常有用，可以防止代码格式化时光标移动。 应提供cursorOffset选项，以指定光标的位置。此选项不能与rangeStart和rangeEnd一起使用。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">prettier</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">formatWithCursor</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot; 1&quot;</span><span style="color:#ABB2BF;">, { </span><span style="color:#E06C75;">cursorOffset</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">parser</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;babel&quot;</span><span style="color:#ABB2BF;"> });</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// -&gt; { formatted: &#39;1;\\n&#39;, cursorOffset: 1 }</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#79B8FF;">prettier</span><span style="color:#B392F0;">.formatWithCursor(</span><span style="color:#FFAB70;">&quot; 1&quot;</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> { cursorOffset</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">2</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> parser</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;babel&quot;</span><span style="color:#B392F0;"> });</span></span>
<span class="line"><span style="color:#6B737C;">// -&gt; { formatted: &#39;1;\\n&#39;, cursorOffset: 1 }</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="prettier-resolveconfigfile-filepath" tabindex="-1"><code>prettier.resolveConfigFile([filePath])</code> <a class="header-anchor" href="#prettier-resolveconfigfile-filepath" aria-hidden="true">#</a></h3><p>resolveConfigFile可用于查找解析配置时（即调用resolveConfig时）将使用的Pretier配置文件的路径。返回promise，该promise将决定：</p><ul><li>配置文件的路径。</li><li>如果找不到文件，则返回null。</li><li>如果解析配置文件时出错，则promise将被拒绝。</li><li>搜索从process.cwd（）或filePath（如果提供）开始。有关解决方案的详细信息，请参阅 <a href="https://github.com/davidtheclark/cosmiconfig#explorersearch" target="_blank" rel="noreferrer">cosmiconfig docs</a></li></ul><h3 id="prettier-getfileinfo" tabindex="-1"><code>prettier.getFileInfo</code> <a class="header-anchor" href="#prettier-getfileinfo" aria-hidden="true">#</a></h3><p>编辑器扩展可以使用getFileInfo来决定是否需要格式化特定文件。此方法返回一个promise，它解析为具有以下属性的对象：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">ignored</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">boolean</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">inferredParser</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">|</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">null</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">{</span></span>
<span class="line"><span style="color:#B392F0;">  ignored</span><span style="color:#BBBBBB;">:</span><span style="color:#B392F0;"> boolean</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  inferredParser</span><span style="color:#BBBBBB;">:</span><span style="color:#B392F0;"> string </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">null</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="prettier-getsupportinfo" tabindex="-1"><code>prettier.getSupportInfo()</code> <a class="header-anchor" href="#prettier-getsupportinfo" aria-hidden="true">#</a></h3><p>返回表示prettier支持的选项、解析器、语言和文件类型的对象</p><img src="`+e+`" alt="image-20230221115940825"><h2 id="插件列表" tabindex="-1">插件列表 <a class="header-anchor" href="#插件列表" aria-hidden="true">#</a></h2><h3 id="官方插件" tabindex="-1">官方插件 <a class="header-anchor" href="#官方插件" aria-hidden="true">#</a></h3><ul><li><a href="https://github.com/prettier/plugin-php" target="_blank" rel="noreferrer"><code>@prettier/plugin-php</code></a></li><li><a href="https://github.com/prettier/plugin-pug" target="_blank" rel="noreferrer"><code>@prettier/plugin-pug</code></a> by <a href="https://github.com/Shinigami92" target="_blank" rel="noreferrer"><strong>@Shinigami92</strong></a></li><li><a href="https://github.com/prettier/plugin-ruby" target="_blank" rel="noreferrer"><code>@prettier/plugin-ruby</code></a></li><li><a href="https://github.com/prettier/plugin-xml" target="_blank" rel="noreferrer"><code>@prettier/plugin-xml</code></a></li></ul><h3 id="社区插件" tabindex="-1">社区插件 <a class="header-anchor" href="#社区插件" aria-hidden="true">#</a></h3><ul><li><a href="https://github.com/dangmai/prettier-plugin-apex" target="_blank" rel="noreferrer"><code>prettier-plugin-apex</code></a> by <a href="https://github.com/dangmai" target="_blank" rel="noreferrer"><strong>@dangmai</strong></a></li><li><a href="https://github.com/withastro/prettier-plugin-astro" target="_blank" rel="noreferrer"><code>prettier-plugin-astro</code></a> by <a href="https://github.com/withastro/prettier-plugin-astro/graphs/contributors" target="_blank" rel="noreferrer"><strong>@withastro contributors</strong></a></li><li><a href="https://github.com/gicentre/prettier-plugin-elm" target="_blank" rel="noreferrer"><code>prettier-plugin-elm</code></a> by <a href="https://github.com/gicentre" target="_blank" rel="noreferrer"><strong>@giCentre</strong></a></li><li><a href="https://github.com/adamzapasnik/prettier-plugin-erb" target="_blank" rel="noreferrer"><code>prettier-plugin-erb</code></a> by <a href="https://github.com/adamzapasnik" target="_blank" rel="noreferrer"><strong>@adamzapasnik</strong></a></li><li><a href="https://github.com/NaridaL/glsl-language-toolkit/tree/main/packages/prettier-plugin-glsl" target="_blank" rel="noreferrer"><code>prettier-plugin-glsl</code></a> by <a href="https://github.com/NaridaL" target="_blank" rel="noreferrer"><strong>@NaridaL</strong></a></li><li><a href="https://github.com/NiklasPor/prettier-plugin-go-template" target="_blank" rel="noreferrer"><code>prettier-plugin-go-template</code></a> by <a href="https://github.com/NiklasPor" target="_blank" rel="noreferrer"><strong>@NiklasPor</strong></a></li><li><a href="https://github.com/jhipster/prettier-java" target="_blank" rel="noreferrer"><code>prettier-plugin-java</code></a> by <a href="https://github.com/jhipster" target="_blank" rel="noreferrer"><strong>@JHipster</strong></a></li><li><a href="https://github.com/Stedi/prettier-plugin-jsonata" target="_blank" rel="noreferrer"><code>prettier-plugin-jsonata</code></a> by <a href="https://github.com/Stedi" target="_blank" rel="noreferrer"><strong>@Stedi</strong></a></li><li><a href="https://github.com/Angry-Potato/prettier-plugin-kotlin" target="_blank" rel="noreferrer"><code>prettier-plugin-kotlin</code></a> by <a href="https://github.com/Angry-Potato" target="_blank" rel="noreferrer"><strong>@Angry-Potato</strong></a></li><li><a href="https://github.com/dfinity/prettier-plugin-motoko" target="_blank" rel="noreferrer"><code>prettier-plugin-motoko</code></a> by <a href="https://github.com/dfinity" target="_blank" rel="noreferrer"><strong>@dfinity</strong></a></li><li><a href="https://github.com/joedeandev/prettier-plugin-nginx" target="_blank" rel="noreferrer"><code>prettier-plugin-nginx</code></a> by <a href="https://github.com/joedeandev" target="_blank" rel="noreferrer"><strong>@joedeandev</strong></a></li><li><a href="https://github.com/umidbekk/prettier-plugin-prisma" target="_blank" rel="noreferrer"><code>prettier-plugin-prisma</code></a> by <a href="https://github.com/umidbekk" target="_blank" rel="noreferrer"><strong>@umidbekk</strong></a></li><li><a href="https://github.com/eemeli/prettier-plugin-properties" target="_blank" rel="noreferrer"><code>prettier-plugin-properties</code></a> by <a href="https://github.com/eemeli" target="_blank" rel="noreferrer"><strong>@eemeli</strong></a></li><li><a href="https://github.com/un-ts/prettier/tree/master/packages/sh" target="_blank" rel="noreferrer"><code>prettier-plugin-sh</code></a> by <a href="https://github.com/JounQin" target="_blank" rel="noreferrer"><strong>@JounQin</strong></a></li><li><a href="https://github.com/un-ts/prettier/tree/master/packages/sql" target="_blank" rel="noreferrer"><code>prettier-plugin-sql</code></a> by <a href="https://github.com/JounQin" target="_blank" rel="noreferrer"><strong>@JounQin</strong></a></li><li><a href="https://github.com/nene/prettier-plugin-sql-cst" target="_blank" rel="noreferrer"><code>prettier-plugin-sql-cst</code></a> by <a href="https://github.com/nene" target="_blank" rel="noreferrer"><strong>@nene</strong></a></li><li><a href="https://github.com/prettier-solidity/prettier-plugin-solidity" target="_blank" rel="noreferrer"><code>prettier-plugin-solidity</code></a> by <a href="https://github.com/mattiaerre" target="_blank" rel="noreferrer"><strong>@mattiaerre</strong></a></li><li><a href="https://github.com/UnwrittenFun/prettier-plugin-svelte" target="_blank" rel="noreferrer"><code>prettier-plugin-svelte</code></a> by <a href="https://github.com/UnwrittenFun" target="_blank" rel="noreferrer"><strong>@UnwrittenFun</strong></a></li><li><a href="https://github.com/bd82/toml-tools/tree/master/packages/prettier-plugin-toml" target="_blank" rel="noreferrer"><code>prettier-plugin-toml</code></a> by <a href="https://github.com/bd82" target="_blank" rel="noreferrer"><strong>@bd82</strong></a></li></ul><h2 id="转换-editorconfig" tabindex="-1">转换.editorconfig <a class="header-anchor" href="#转换-editorconfig" aria-hidden="true">#</a></h2><p>.editorconfig配置</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">[</span><span style="color:#FFFFFF;">*</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">end_of_line = lf</span></span>
<span class="line"><span style="color:#ABB2BF;">indent_style = space</span></span>
<span class="line"><span style="color:#ABB2BF;">indent_size = </span><span style="color:#D19A66;">8</span></span>
<span class="line"><span style="color:#ABB2BF;">max_line_length = </span><span style="color:#D19A66;">80</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">[*]</span></span>
<span class="line"><span style="color:#B392F0;">end_of_line = lf</span></span>
<span class="line"><span style="color:#B392F0;">indent_style = space</span></span>
<span class="line"><span style="color:#B392F0;">indent_size = </span><span style="color:#F8F8F8;">8</span></span>
<span class="line"><span style="color:#B392F0;">max_line_length = </span><span style="color:#F8F8F8;">80</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>会被prettier转换成</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{ </span><span style="color:#E06C75;">useTabs</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">tabWidth</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">8</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">printWidth</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">80</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">endOfLine</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;lf&#39;</span><span style="color:#ABB2BF;"> }</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">{ useTabs</span><span style="color:#BBBBBB;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">false</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> tabWidth</span><span style="color:#BBBBBB;">:</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">8</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> printWidth</span><span style="color:#BBBBBB;">:</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">80</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> endOfLine</span><span style="color:#BBBBBB;">:</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;lf&#39;</span><span style="color:#B392F0;"> }</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>options添加<code>editorconfig: true</code>选项</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">prettier</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;prettier&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;path&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">prettier</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">resolveConfigFile</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">)).</span><span style="color:#61AFEF;">then</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">configFile</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">prettier</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">resolveConfig</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">configFile</span><span style="color:#ABB2BF;">, { </span><span style="color:#E06C75;">editorconfig</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;"> }).</span><span style="color:#61AFEF;">then</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">async</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">options</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">options</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  });</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">prettier</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> require(</span><span style="color:#FFAB70;">&quot;prettier&quot;</span><span style="color:#B392F0;">);</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">path</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> require(</span><span style="color:#FFAB70;">&quot;path&quot;</span><span style="color:#B392F0;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">prettier</span><span style="color:#B392F0;">.resolveConfigFile(</span><span style="color:#79B8FF;">path</span><span style="color:#B392F0;">.resolve(__dirname)).then((configFile) </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">prettier</span><span style="color:#B392F0;">.resolveConfig(configFile</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> { editorconfig</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">true</span><span style="color:#B392F0;"> }).then(</span><span style="color:#F97583;">async</span><span style="color:#B392F0;"> (options) </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(options);</span></span>
<span class="line"><span style="color:#B392F0;">  });</span></span>
<span class="line"><span style="color:#B392F0;">});</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="使用插件支持其他语言" tabindex="-1">使用插件支持其他语言 <a class="header-anchor" href="#使用插件支持其他语言" aria-hidden="true">#</a></h2><p>安装java语言插件，设置.prettierrc.json</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">&quot;plugins&quot;</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">&quot;prettier-plugin-java&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">  ]</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">{</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F8F8F8;">&quot;plugins&quot;</span><span style="color:#BBBBBB;">:</span><span style="color:#B392F0;"> [</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#FFAB70;">&quot;prettier-plugin-java&quot;</span></span>
<span class="line"><span style="color:#B392F0;">  ]</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>api方式使用prettier，可以正常格式化java</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">prettier</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;prettier&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">fs</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;fs&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;path&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">prettier</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">resolveConfigFile</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">)).</span><span style="color:#61AFEF;">then</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">configFile</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">prettier</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">resolveConfig</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">configFile</span><span style="color:#ABB2BF;">, { </span><span style="color:#E06C75;">editorconfig</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;"> }).</span><span style="color:#61AFEF;">then</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">async</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">options</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">options</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">fs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">readFile</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;./test.java&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;utf-8&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">async</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">err</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">data</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">err</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">err</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">      } </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">text</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">prettier</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">format</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">, {</span></span>
<span class="line"><span style="color:#ABB2BF;">          </span><span style="color:#E06C75;">filepath</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;./test.java&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">          ...</span><span style="color:#E06C75;">options</span></span>
<span class="line"><span style="color:#ABB2BF;">        });</span></span>
<span class="line"><span style="color:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;">    });</span></span>
<span class="line"><span style="color:#ABB2BF;">  });</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">prettier</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> require(</span><span style="color:#FFAB70;">&quot;prettier&quot;</span><span style="color:#B392F0;">);</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">fs</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> require(</span><span style="color:#FFAB70;">&quot;fs&quot;</span><span style="color:#B392F0;">);</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">path</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> require(</span><span style="color:#FFAB70;">&quot;path&quot;</span><span style="color:#B392F0;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">prettier</span><span style="color:#B392F0;">.resolveConfigFile(</span><span style="color:#79B8FF;">path</span><span style="color:#B392F0;">.resolve(__dirname)).then((configFile) </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">prettier</span><span style="color:#B392F0;">.resolveConfig(configFile</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> { editorconfig</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">true</span><span style="color:#B392F0;"> }).then(</span><span style="color:#F97583;">async</span><span style="color:#B392F0;"> (options) </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(options);</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#79B8FF;">fs</span><span style="color:#B392F0;">.readFile(</span><span style="color:#FFAB70;">&quot;./test.java&quot;</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;utf-8&quot;</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">async</span><span style="color:#B392F0;"> (err</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> data) </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">      </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (err) {</span></span>
<span class="line"><span style="color:#B392F0;">        </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(err);</span></span>
<span class="line"><span style="color:#B392F0;">      } </span><span style="color:#F97583;">else</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">        </span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">text</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">prettier</span><span style="color:#B392F0;">.format(data</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">          filepath</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;./test.java&quot;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">          </span><span style="color:#F97583;">...</span><span style="color:#B392F0;">options</span></span>
<span class="line"><span style="color:#B392F0;">        });</span></span>
<span class="line"><span style="color:#B392F0;">      }</span></span>
<span class="line"><span style="color:#B392F0;">    });</span></span>
<span class="line"><span style="color:#B392F0;">  });</span></span>
<span class="line"><span style="color:#B392F0;">});</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h2 id="判断文件是否被ignore" tabindex="-1">判断文件是否被ignore <a class="header-anchor" href="#判断文件是否被ignore" aria-hidden="true">#</a></h2><p>指定ignorePath参数为.prettierignore文件路径</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">prettier</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getFileInfo</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;test.vue&quot;</span><span style="color:#ABB2BF;">), {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">ignorePath</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;.prettierignore&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">}).</span><span style="color:#61AFEF;">then</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">info</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">info</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#79B8FF;">prettier</span><span style="color:#B392F0;">.getFileInfo(</span><span style="color:#79B8FF;">path</span><span style="color:#B392F0;">.resolve(__dirname</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;test.vue&quot;</span><span style="color:#B392F0;">)</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">  ignorePath</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">path</span><span style="color:#B392F0;">.resolve(__dirname</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;.prettierignore&quot;</span><span style="color:#B392F0;">)</span></span>
<span class="line"><span style="color:#B392F0;">}).then((info) </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(info);</span></span>
<span class="line"><span style="color:#B392F0;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,100),t=[o];function r(c,i,B,y,F,d){return n(),a("div",null,t)}const g=s(p,[["render",r]]);export{b as __pageData,g as default};
