import{_ as s,o as a,c as n,a as l}from"./app.bfa9bd4b.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"micromatch","slug":"micromatch","link":"#micromatch","children":[{"level":3,"title":"glob","slug":"glob","link":"#glob","children":[]},{"level":3,"title":"minimatch","slug":"minimatch","link":"#minimatch","children":[]},{"level":3,"title":"micromatch","slug":"micromatch-1","link":"#micromatch-1","children":[]}]},{"level":2,"title":"polka","slug":"polka","link":"#polka","children":[]},{"level":2,"title":"compression","slug":"compression","link":"#compression","children":[]},{"level":2,"title":"sirv","slug":"sirv","link":"#sirv","children":[{"level":3,"title":"用法","slug":"用法","link":"#用法","children":[]},{"level":3,"title":"etag","slug":"etag","link":"#etag","children":[]},{"level":3,"title":"maxAge","slug":"maxage","link":"#maxage","children":[]}]}],"relativePath":"6.源码阅读/vitepress/1.依赖库.md","lastUpdated":1720835436706}'),p={name:"6.源码阅读/vitepress/1.依赖库.md"},e=l(`<h2 id="micromatch" tabindex="-1">micromatch <a class="header-anchor" href="#micromatch" aria-hidden="true">#</a></h2><blockquote><p><a href="https://www.npmjs.com/package/micromatch" target="_blank" rel="noreferrer">https://www.npmjs.com/package/micromatch</a></p></blockquote><h3 id="glob" tabindex="-1">glob <a class="header-anchor" href="#glob" aria-hidden="true">#</a></h3><p>glob允许使用规则，从而获取对应规则匹配的文件。这个glob工具基于javascript.它使用了 minimatch 库来进行匹配</p><blockquote><p>用法：<a href="https://www.cnblogs.com/raind/p/10211951.html" target="_blank" rel="noreferrer">https://www.cnblogs.com/raind/p/10211951.html</a></p></blockquote><h3 id="minimatch" tabindex="-1">minimatch <a class="header-anchor" href="#minimatch" aria-hidden="true">#</a></h3><p>用来模式匹配字符串的库，glob库支持的的各种模式都来自于minimatch</p><h3 id="micromatch-1" tabindex="-1">micromatch <a class="header-anchor" href="#micromatch-1" aria-hidden="true">#</a></h3><p>是minimatch的增强版本</p><h2 id="polka" tabindex="-1">polka <a class="header-anchor" href="#polka" aria-hidden="true">#</a></h2><blockquote><p><a href="https://www.npmjs.com/package/polka" target="_blank" rel="noreferrer">https://www.npmjs.com/package/polka</a></p></blockquote><p>一个微型网络服务器，是一个极其小巧、性能卓越的Express.js替代品，是的，Express已经很快了，而且没有那么大🤔 ， 但polka表示，还有（以某种方式）改进的空间</p><p>本质上，Polka只是一个本地HTTP服务器，增加了对路由、中间件和子应用程序的支持。就是这样！🎉</p><h2 id="compression" tabindex="-1">compression <a class="header-anchor" href="#compression" aria-hidden="true">#</a></h2><p>JavaScript图像压缩器。使用浏览器的原生canvas.toBlob API来执行压缩工作，这意味着它是有损压缩、异步的，并且在不同的浏览器中具有不同的压缩效果。通常，在上载图像之前，使用此命令在客户端预压缩图像</p><h2 id="sirv" tabindex="-1">sirv <a class="header-anchor" href="#sirv" aria-hidden="true">#</a></h2><blockquote><p>用于服务静态资源请求的优化的和轻量级中间件</p></blockquote><h3 id="用法" tabindex="-1">用法 <a class="header-anchor" href="#用法" aria-hidden="true">#</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">sirv</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;sirv&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">polka</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;polka&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">compress</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;compression&#39;</span><span style="color:#ABB2BF;">)();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Init \`sirv\` handler</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">assets</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">sirv</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;public&#39;</span><span style="color:#ABB2BF;">, {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">maxAge</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">31536000</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 1Y</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">immutable</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">polka</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">  .</span><span style="color:#61AFEF;">use</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">compress</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">assets</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  .</span><span style="color:#61AFEF;">use</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;/api&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;./api&#39;</span><span style="color:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;">  .</span><span style="color:#61AFEF;">listen</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">3000</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">err</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">err</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">throw</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">err</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;&gt; Ready on localhost:3000~!&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  });</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">sirv</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> require(</span><span style="color:#FFAB70;">&#39;sirv&#39;</span><span style="color:#B392F0;">);</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">polka</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> require(</span><span style="color:#FFAB70;">&#39;polka&#39;</span><span style="color:#B392F0;">);</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">compress</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> require(</span><span style="color:#FFAB70;">&#39;compression&#39;</span><span style="color:#B392F0;">)();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">// Init \`sirv\` handler</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">assets</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> sirv(</span><span style="color:#FFAB70;">&#39;public&#39;</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">  maxAge</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">31536000</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#6B737C;">// 1Y</span></span>
<span class="line"><span style="color:#B392F0;">  immutable</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#B392F0;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">polka()</span></span>
<span class="line"><span style="color:#B392F0;">  .use(compress</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> assets)</span></span>
<span class="line"><span style="color:#B392F0;">  .use(</span><span style="color:#FFAB70;">&#39;/api&#39;</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> require(</span><span style="color:#FFAB70;">&#39;./api&#39;</span><span style="color:#B392F0;">))</span></span>
<span class="line"><span style="color:#B392F0;">  .listen(</span><span style="color:#F8F8F8;">3000</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> err </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (err) </span><span style="color:#F97583;">throw</span><span style="color:#B392F0;"> err;</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(</span><span style="color:#FFAB70;">&#39;&gt; Ready on localhost:3000~!&#39;</span><span style="color:#B392F0;">);</span></span>
<span class="line"><span style="color:#B392F0;">  });</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h3 id="etag" tabindex="-1">etag <a class="header-anchor" href="#etag" aria-hidden="true">#</a></h3><p>是否生成和添加<code>ETag</code>到响应头，Etag是协商缓存</p><h3 id="maxage" tabindex="-1">maxAge <a class="header-anchor" href="#maxage" aria-hidden="true">#</a></h3><p>启用响应的缓存控制头并设置最大值（以秒为单位） 例如，maxAge:31536000相当于一年</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">serve</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">sirv</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">site</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">outDir</span><span style="color:#ABB2BF;">, {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">etag</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">maxAge</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">31536000</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">immutable</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">setHeaders</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">res</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">pathname</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#61AFEF;">notAnAsset</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">pathname</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// force server validation for non-asset files since they</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// are not fingerprinted</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">res</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setHeader</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;cache-control&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;no-cache&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">  })</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">serve</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> sirv(</span><span style="color:#79B8FF;">site</span><span style="color:#B392F0;">.outDir</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">    etag</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">true</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">    maxAge</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">31536000</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">    immutable</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">true</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">    setHeaders(res</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> pathname) {</span></span>
<span class="line"><span style="color:#B392F0;">      </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (notAnAsset(pathname)) {</span></span>
<span class="line"><span style="color:#B392F0;">        </span><span style="color:#6B737C;">// force server validation for non-asset files since they</span></span>
<span class="line"><span style="color:#B392F0;">        </span><span style="color:#6B737C;">// are not fingerprinted</span></span>
<span class="line"><span style="color:#B392F0;">        </span><span style="color:#79B8FF;">res</span><span style="color:#B392F0;">.setHeader(</span><span style="color:#FFAB70;">&#39;cache-control&#39;</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;no-cache&#39;</span><span style="color:#B392F0;">)</span></span>
<span class="line"><span style="color:#B392F0;">      }</span></span>
<span class="line"><span style="color:#B392F0;">    }</span></span>
<span class="line"><span style="color:#B392F0;">  })</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>`,24),o=[e];function r(c,t,B,i,y,F){return a(),n("div",null,o)}const A=s(p,[["render",r]]);export{h as __pageData,A as default};
