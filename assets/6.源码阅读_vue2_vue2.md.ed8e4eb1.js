import{_ as s,o as n,c as a,a as e}from"./app.bfa9bd4b.js";const u=JSON.parse('{"title":"vue2","description":"","frontmatter":{},"headers":[{"level":2,"title":"参考链接","slug":"参考链接","link":"#参考链接","children":[]},{"level":2,"title":"src/core/instance/index.js","slug":"src-core-instance-index-js","link":"#src-core-instance-index-js","children":[{"level":3,"title":"为何 Vue 不用 ES6 的 Class 去实现呢？","slug":"为何-vue-不用-es6-的-class-去实现呢","link":"#为何-vue-不用-es6-的-class-去实现呢","children":[]}]},{"level":2,"title":"src/core/instance/init.js","slug":"src-core-instance-init-js","link":"#src-core-instance-init-js","children":[]},{"level":2,"title":"src/platform/web/entry-runtime-with-compiler.js","slug":"src-platform-web-entry-runtime-with-compiler-js","link":"#src-platform-web-entry-runtime-with-compiler-js","children":[]}],"relativePath":"6.源码阅读/vue2/vue2.md","lastUpdated":1720835436710}'),l={name:"6.源码阅读/vue2/vue2.md"},p=e(`<h1 id="vue2" tabindex="-1">vue2 <a class="header-anchor" href="#vue2" aria-hidden="true">#</a></h1><h2 id="参考链接" tabindex="-1">参考链接 <a class="header-anchor" href="#参考链接" aria-hidden="true">#</a></h2><blockquote><p>vue2代码仓库 <a href="https://github.com/vuejs/vue" target="_blank" rel="noreferrer">https://github.com/vuejs/vue</a></p><p>vue2源码解析文章 <a href="https://ustbhuangyi.github.io/vue-analysis/v2/prepare/" target="_blank" rel="noreferrer">https://ustbhuangyi.github.io/vue-analysis/v2/prepare/</a></p><p><a href="https://github.com/answershuto/learnVue" target="_blank" rel="noreferrer">https://github.com/answershuto/learnVue</a></p></blockquote><h2 id="src-core-instance-index-js" tabindex="-1">src/core/instance/index.js <a class="header-anchor" href="#src-core-instance-index-js" aria-hidden="true">#</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">initMixin</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;./init&#39;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">stateMixin</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;./state&#39;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">renderMixin</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;./render&#39;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">eventsMixin</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;./events&#39;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">lifecycleMixin</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;./lifecycle&#39;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">warn</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;../util/index&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Vue</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">options</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">env</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">NODE_ENV</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">!==</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;production&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&amp;&amp;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#56B6C2;">!</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">instanceof</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  ) {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">warn</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;Vue is a constructor and should be called with the \`new\` keyword&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">_init</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">options</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">initMixin</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">Vue</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#61AFEF;">stateMixin</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">Vue</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#61AFEF;">eventsMixin</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">Vue</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#61AFEF;">lifecycleMixin</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">Vue</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#61AFEF;">renderMixin</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">Vue</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">default</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">Vue</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#B392F0;"> { initMixin } </span><span style="color:#F97583;">from</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;./init&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#B392F0;"> { stateMixin } </span><span style="color:#F97583;">from</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;./state&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#B392F0;"> { renderMixin } </span><span style="color:#F97583;">from</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;./render&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#B392F0;"> { eventsMixin } </span><span style="color:#F97583;">from</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;./events&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#B392F0;"> { lifecycleMixin } </span><span style="color:#F97583;">from</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;./lifecycle&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#B392F0;"> { warn } </span><span style="color:#F97583;">from</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;../util/index&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> Vue (options) {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (</span><span style="color:#79B8FF;">process</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">env</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">NODE_ENV</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">!==</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;production&#39;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">&amp;&amp;</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#F97583;">!</span><span style="color:#B392F0;">(</span><span style="color:#79B8FF;">this</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">instanceof</span><span style="color:#B392F0;"> Vue)</span></span>
<span class="line"><span style="color:#B392F0;">  ) {</span></span>
<span class="line"><span style="color:#B392F0;">    warn(</span><span style="color:#FFAB70;">&#39;Vue is a constructor and should be called with the \`new\` keyword&#39;</span><span style="color:#B392F0;">)</span></span>
<span class="line"><span style="color:#B392F0;">  }</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">this</span><span style="color:#B392F0;">._init(options)</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">initMixin(Vue)</span></span>
<span class="line"><span style="color:#B392F0;">stateMixin(Vue)</span></span>
<span class="line"><span style="color:#B392F0;">eventsMixin(Vue)</span></span>
<span class="line"><span style="color:#B392F0;">lifecycleMixin(Vue)</span></span>
<span class="line"><span style="color:#B392F0;">renderMixin(Vue)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">default</span><span style="color:#B392F0;"> Vue</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>Vue实际上就是一个用 Function 实现的类，我们只能通过 <code>new Vue</code> 去实例化它。</p><h3 id="为何-vue-不用-es6-的-class-去实现呢" tabindex="-1">为何 Vue 不用 ES6 的 Class 去实现呢？ <a class="header-anchor" href="#为何-vue-不用-es6-的-class-去实现呢" aria-hidden="true">#</a></h3><p>这里有很多 <code>xxxMixin</code> 的函数调用，并把 <code>Vue</code> 当参数传入，它们的功能都是给 Vue 的 prototype 上扩展一些方法，Vue 按功能把这些扩展分散到多个模块中去实现，而不是在一个模块里实现所有，这种方式是用 Class 难以实现的</p><p>这么做的好处是非常方便代码的维护和管理，这种编程技巧也非常值得我们去学习</p><h2 id="src-core-instance-init-js" tabindex="-1">src/core/instance/init.js <a class="header-anchor" href="#src-core-instance-init-js" aria-hidden="true">#</a></h2><p><code>this._init(options)</code>在<code>./init</code>中定义</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#abb2bf;"></span></span>
<span class="line"><span style="color:#abb2bf;"></span></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#b392f0;"></span></span>
<span class="line"><span style="color:#b392f0;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="src-platform-web-entry-runtime-with-compiler-js" tabindex="-1">src/platform/web/entry-runtime-with-compiler.js <a class="header-anchor" href="#src-platform-web-entry-runtime-with-compiler-js" aria-hidden="true">#</a></h2><p>Vue 中是通过 <code>$mount</code> 实例方法去挂载 <code>vm</code> 的，<code>$mount</code> 方法在多个文件中都有定义，如 <code>src/platform/web/entry-runtime-with-compiler.js</code>、<code>src/platform/web/runtime/index.js</code>、<code>src/platform/weex/runtime/index.js</code></p><p>因为 <code>$mount</code> 这个方法的实现是和平台、构建方式都相关的</p><p>接下来我们重点分析带 <code>compiler</code> 版本的 <code>$mount</code> 实现，因为抛开 webpack 的 vue-loader，我们在纯前端浏览器环境分析 Vue 的工作原理，有助于我们对原理理解的深入。</p>`,16),o=[p];function r(c,t,i,B,y,F){return n(),a("div",null,o)}const m=s(l,[["render",r]]);export{u as __pageData,m as default};
