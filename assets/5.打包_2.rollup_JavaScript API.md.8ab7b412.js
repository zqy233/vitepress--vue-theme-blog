import{_ as s,o as n,c as a,a as l}from"./app.bfa9bd4b.js";const A=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"加载配置文件","slug":"加载配置文件","link":"#加载配置文件","children":[]}],"relativePath":"5.打包/2.rollup/JavaScript API.md","lastUpdated":1720835436706}'),p={name:"5.打包/2.rollup/JavaScript API.md"},o=l(`<h2 id="加载配置文件" tabindex="-1">加载配置文件 <a class="header-anchor" href="#加载配置文件" aria-hidden="true">#</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">loadConfigFile</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;rollup/loadConfigFile&#39;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;path&#39;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">*</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">rollup</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;rollup&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 加载位于当前脚本旁边的配置文件；</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 提供的配置对象具有与在命令行上传递 &quot;--format es&quot; 相同的效果，</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 并将覆盖所有输出的格式</span></span>
<span class="line"><span style="color:#61AFEF;">loadConfigFile</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;./rollup.config.js&#39;</span><span style="color:#ABB2BF;">)).</span><span style="color:#61AFEF;">then</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">async</span><span style="color:#ABB2BF;"> ({ </span><span style="color:#E06C75;font-style:italic;">options</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">warnings</span><span style="color:#ABB2BF;"> }) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// &quot;warnings&quot; 包装了 CLI 传递的默认 \`onwarn\` 处理程序。</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 这将打印到此为止所有的警告：</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">\`We currently have </span><span style="color:#C678DD;">\${</span><span style="color:#E5C07B;">warnings</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">count</span><span style="color:#C678DD;">}</span><span style="color:#98C379;"> warnings\`</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 这将打印所有延迟的警告</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">warnings</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">flush</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// options 是一个包含额外 &quot;output&quot; 属性的 &quot;inputOptions&quot; 对象数组，</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 该属性包含一个 &quot;outputOptions&quot; 数组。</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 以下将为所有输入生成所有输出，</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 并以与 CLI 相同的方式将它们写入磁盘：</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">optionsObj</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">of</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">options</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;optionsObj&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">optionsObj</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">bundle</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">await</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">rollup</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">rollup</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">optionsObj</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;optionsObj.output&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">optionsObj</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">output</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">await</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Promise</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">all</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">optionsObj</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">output</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">map</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">bundle</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">write</span><span style="color:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 你也可以直接将选项传给 &quot;rollup.watch&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// rollup.watch(options);</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#B392F0;"> { loadConfigFile } </span><span style="color:#F97583;">from</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;rollup/loadConfigFile&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#B392F0;"> path </span><span style="color:#F97583;">from</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;path&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">*</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">as</span><span style="color:#B392F0;"> rollup </span><span style="color:#F97583;">from</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;rollup&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">// 加载位于当前脚本旁边的配置文件；</span></span>
<span class="line"><span style="color:#6B737C;">// 提供的配置对象具有与在命令行上传递 &quot;--format es&quot; 相同的效果，</span></span>
<span class="line"><span style="color:#6B737C;">// 并将覆盖所有输出的格式</span></span>
<span class="line"><span style="color:#B392F0;">loadConfigFile(</span><span style="color:#79B8FF;">path</span><span style="color:#B392F0;">.resolve(</span><span style="color:#FFAB70;">&#39;./rollup.config.js&#39;</span><span style="color:#B392F0;">)).then(</span><span style="color:#F97583;">async</span><span style="color:#B392F0;"> ({ options</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> warnings }) </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// &quot;warnings&quot; 包装了 CLI 传递的默认 \`onwarn\` 处理程序。</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// 这将打印到此为止所有的警告：</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(</span><span style="color:#FFAB70;">\`We currently have </span><span style="color:#F97583;">\${</span><span style="color:#79B8FF;">warnings</span><span style="color:#B392F0;">.count</span><span style="color:#F97583;">}</span><span style="color:#FFAB70;"> warnings\`</span><span style="color:#B392F0;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// 这将打印所有延迟的警告</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">warnings</span><span style="color:#B392F0;">.flush()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// options 是一个包含额外 &quot;output&quot; 属性的 &quot;inputOptions&quot; 对象数组，</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// 该属性包含一个 &quot;outputOptions&quot; 数组。</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// 以下将为所有输入生成所有输出，</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// 并以与 CLI 相同的方式将它们写入磁盘：</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">for</span><span style="color:#B392F0;"> (</span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">optionsObj</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">of</span><span style="color:#B392F0;"> options) {</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(</span><span style="color:#FFAB70;">&#39;optionsObj&#39;</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> optionsObj)</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">bundle</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">await</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">rollup</span><span style="color:#B392F0;">.rollup(optionsObj)</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(</span><span style="color:#FFAB70;">&#39;optionsObj.output&#39;</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">optionsObj</span><span style="color:#B392F0;">.output)</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#F97583;">await</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">Promise</span><span style="color:#B392F0;">.all(</span><span style="color:#79B8FF;">optionsObj</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">output</span><span style="color:#B392F0;">.map(</span><span style="color:#79B8FF;">bundle</span><span style="color:#B392F0;">.write))</span></span>
<span class="line"><span style="color:#B392F0;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// 你也可以直接将选项传给 &quot;rollup.watch&quot;</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// rollup.watch(options);</span></span>
<span class="line"><span style="color:#B392F0;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div>`,2),e=[o];function t(c,r,B,y,F,i){return n(),a("div",null,e)}const b=s(p,[["render",t]]);export{A as __pageData,b as default};
