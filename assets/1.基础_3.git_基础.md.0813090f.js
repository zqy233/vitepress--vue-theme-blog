import{_ as s,o as a,c as n,a as l}from"./app.bfa9bd4b.js";const g=JSON.parse('{"title":"基础","description":"","frontmatter":{},"headers":[{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":2,"title":"基本概念","slug":"基本概念","link":"#基本概念","children":[]},{"level":2,"title":"工作区、暂存区和代码库","slug":"工作区、暂存区和代码库","link":"#工作区、暂存区和代码库","children":[]},{"level":2,"title":"查看状态","slug":"查看状态","link":"#查看状态","children":[]},{"level":2,"title":".gitignore","slug":"gitignore","link":"#gitignore","children":[]},{"level":2,"title":"合并分支/git merge","slug":"合并分支-git-merge","link":"#合并分支-git-merge","children":[{"level":3,"title":"一、开发分支（dev）上的代码达到上线的标准后，要合并到 master 分支","slug":"一、开发分支-dev-上的代码达到上线的标准后-要合并到-master-分支","link":"#一、开发分支-dev-上的代码达到上线的标准后-要合并到-master-分支","children":[]},{"level":3,"title":"二、当master代码改动了，需要更新开发分支（dev）上的代码","slug":"二、当master代码改动了-需要更新开发分支-dev-上的代码","link":"#二、当master代码改动了-需要更新开发分支-dev-上的代码","children":[]},{"level":3,"title":"--ff/fast-forward","slug":"ff-fast-forward","link":"#ff-fast-forward","children":[]}]},{"level":2,"title":"git merge --no-ff的作用","slug":"git-merge-no-ff的作用","link":"#git-merge-no-ff的作用","children":[]},{"level":2,"title":"合并分支-git rebase","slug":"合并分支-git-rebase","link":"#合并分支-git-rebase","children":[]},{"level":2,"title":"git stash暂存","slug":"git-stash暂存","link":"#git-stash暂存","children":[]},{"level":2,"title":"管理远程仓库地址","slug":"管理远程仓库地址","link":"#管理远程仓库地址","children":[]},{"level":2,"title":"commit","slug":"commit","link":"#commit","children":[]},{"level":2,"title":"Fast-forward","slug":"fast-forward","link":"#fast-forward","children":[{"level":3,"title":"什么是 Fast-forward","slug":"什么是-fast-forward","link":"#什么是-fast-forward","children":[]},{"level":3,"title":"选择","slug":"选择","link":"#选择","children":[]}]}],"relativePath":"1.基础/3.git/基础.md","lastUpdated":1720835436686}'),e={name:"1.基础/3.git/基础.md"},p=l(`<h1 id="基础" tabindex="-1">基础 <a class="header-anchor" href="#基础" aria-hidden="true">#</a></h1><blockquote><p><code>git</code>（读音为/gɪt/）是一个开源的<code>分布式版本控制软件</code></p><p>可以有效、高速地进行从很小到非常大的项目版本管理。 也是Linux之父Linus Torvalds为了帮助管理Linux内核开发而开发的一个开放源码的版本控制软件</p><p>具体来说，就是用来管理代码项目的软件</p><p>作为一名软件开发者，肯定会有很多代码项目，这些项目就可以使用<code>git</code>来提交至基于<code>git</code>的代码存储平台如<code>github</code>、<code>gitee</code>、<code>gitlab</code>等等，且可以管理它们的不同版本，还可以去克隆别的开发者的开源项目，拉取他们的代码学习，而且<code>git</code>命令适用于所有基于<code>git</code>的代码存储平台</p><p>综上，<code>git</code>应是一名软件开发者的必备技能</p></blockquote><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-hidden="true">#</a></h2><p>windows下安装非常方便，只需<a href="https://git-scm.com/downloads" target="_blank" rel="noreferrer">官网</a>下载安装程序，按指引安装即可</p><p>安装完成后，打开cmd终端输入</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">--version</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 上方简写</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-v</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">git </span><span style="color:#9DB1C5;">--version</span></span>
<span class="line"><span style="color:#6B737C;"># 上方简写</span></span>
<span class="line"><span style="color:#B392F0;">git </span><span style="color:#9DB1C5;">-v</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>出现相应git版本，说明安装成功</p><p>可以使用线上的练习网站，<a href="https://learngitbranching.js.org/?locale=zh_CN" target="_blank" rel="noreferrer">gitlearn</a>, 这需要已经对git命令有了基础的了解，进行实战练习</p><h2 id="基本概念" tabindex="-1">基本概念 <a class="header-anchor" href="#基本概念" aria-hidden="true">#</a></h2><p>Git 工作区、暂存区和版本库概念：</p><ul><li>**工作区：**就是在电脑里能看到的目录</li><li>**暂存区：**英文叫 stage 或 index。一般存放在 <strong>.git</strong> 目录下的 index 文件（.git/index）中，暂存区有时也叫作索引（index）</li><li>**版本库：**工作区有一个隐藏目录 <strong>.git</strong>，这个不算工作区，而是 Git 的版本库</li></ul><h2 id="工作区、暂存区和代码库" tabindex="-1">工作区、暂存区和代码库 <a class="header-anchor" href="#工作区、暂存区和代码库" aria-hidden="true">#</a></h2><p>在 Git 中，有三个主要的区域用于存储代码更改：工作区、暂存区和代码库。</p><ol><li>工作区：工作区是您在计算机上实际编写代码的地方。它是您在编辑器或 IDE 中打开的目录或文件夹。</li><li>暂存区：暂存区是一个存储将要提交到代码库的更改的区域。它实际上是一个文件，称为索引（index），它记录了所有将要提交的更改的元数据和内容快照。</li><li>代码库：代码库是 Git 用于存储历史记录的地方。它包含了所有已提交的更改和提交记录，以及分支和标签等其他元数据。</li></ol><p>当您在工作区中修改了文件并准备提交更改时，您需要使用 <code>git add</code> 命令将更改添加到暂存区。在 <code>git add</code> 后，更改的内容将被复制到暂存区，等待进一步提交。</p><p>使用 <code>git commit</code> 命令提交暂存区中的更改将把它们保存到代码库中，这样它们就成为 Git 历史记录的一部分了。</p><p>因此，可以将暂存区视为一个缓冲区，用于准备提交到代码库的更改。工作区是实际编辑代码的地方，而代码库是保存历史记录的地方。</p><h2 id="查看状态" tabindex="-1">查看状态 <a class="header-anchor" href="#查看状态" aria-hidden="true">#</a></h2><p>显示文件修改情况，是否添加到本地仓库了</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">status</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">git </span><span style="color:#9DB1C5;">status</span><span style="color:#B392F0;"> </span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="gitignore" tabindex="-1">.gitignore <a class="header-anchor" href="#gitignore" aria-hidden="true">#</a></h2><p>为 npm 包添加.gitignore，文件内容加入，代码提交至仓库时就会跳过.gitignore 中的内容，如以下代码就会跳过 node_modules</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">node_modules</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">node_modules</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>如果不想提交.gitignore，可以在.git/info/exclude 中加入以下代码排除它自身</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">.gitignore</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">.gitignore</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="合并分支-git-merge" tabindex="-1">合并分支/git merge <a class="header-anchor" href="#合并分支-git-merge" aria-hidden="true">#</a></h2><blockquote><p>git merge有四种参数</p><ul><li>--ff 平常什么都不加的时候，就使用默认的 --ff ， 即 fast-forward 方式</li><li>-no-ff</li><li>-squash</li><li>--no-squash</li></ul></blockquote><p>非常常见的使用场景：主分支master的代码不动，开发在dev分支开发，完成需求并测试没有bug后再合并dev分支的代码到主分支</p><h3 id="一、开发分支-dev-上的代码达到上线的标准后-要合并到-master-分支" tabindex="-1">一、开发分支（dev）上的代码达到上线的标准后，要合并到 master 分支 <a class="header-anchor" href="#一、开发分支-dev-上的代码达到上线的标准后-要合并到-master-分支" aria-hidden="true">#</a></h3><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">checkout</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">dev</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">add</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">.</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">commit</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-m</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;dev&quot;</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">pull</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 如果冲突，解决冲突</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">add</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">.</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">commit</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-m</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;fix&quot;</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">checkout</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">master</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">merge</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">dev</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">push</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-u</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">origin</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">master</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">git </span><span style="color:#9DB1C5;">checkout</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">dev</span></span>
<span class="line"><span style="color:#B392F0;">git </span><span style="color:#9DB1C5;">add</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">.</span></span>
<span class="line"><span style="color:#B392F0;">git </span><span style="color:#9DB1C5;">commit</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">-m</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;dev&quot;</span></span>
<span class="line"><span style="color:#B392F0;">git </span><span style="color:#9DB1C5;">pull</span></span>
<span class="line"><span style="color:#6B737C;"># 如果冲突，解决冲突</span></span>
<span class="line"><span style="color:#B392F0;">git </span><span style="color:#9DB1C5;">add</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">.</span></span>
<span class="line"><span style="color:#B392F0;">git </span><span style="color:#9DB1C5;">commit</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">-m</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;fix&quot;</span></span>
<span class="line"><span style="color:#B392F0;">git </span><span style="color:#9DB1C5;">checkout</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">master</span></span>
<span class="line"><span style="color:#B392F0;">git </span><span style="color:#9DB1C5;">merge</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">dev</span></span>
<span class="line"><span style="color:#B392F0;">git </span><span style="color:#9DB1C5;">push</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">-u</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">origin</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">master</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="二、当master代码改动了-需要更新开发分支-dev-上的代码" tabindex="-1">二、当master代码改动了，需要更新开发分支（dev）上的代码 <a class="header-anchor" href="#二、当master代码改动了-需要更新开发分支-dev-上的代码" aria-hidden="true">#</a></h3><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">checkout</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">master</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">add</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">.</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">commit</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-m</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;master&quot;</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">pull</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 如果冲突，解决冲突</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">add</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">.</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">commit</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-m</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;fix&quot;</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">checkout</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">dev</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">merge</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">master</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">push</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-u</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">origin</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">dev</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">git </span><span style="color:#9DB1C5;">checkout</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">master</span><span style="color:#B392F0;"> </span></span>
<span class="line"><span style="color:#B392F0;">git </span><span style="color:#9DB1C5;">add</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">.</span></span>
<span class="line"><span style="color:#B392F0;">git </span><span style="color:#9DB1C5;">commit</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">-m</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;master&quot;</span></span>
<span class="line"><span style="color:#B392F0;">git </span><span style="color:#9DB1C5;">pull</span></span>
<span class="line"><span style="color:#6B737C;"># 如果冲突，解决冲突</span></span>
<span class="line"><span style="color:#B392F0;">git </span><span style="color:#9DB1C5;">add</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">.</span></span>
<span class="line"><span style="color:#B392F0;">git </span><span style="color:#9DB1C5;">commit</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">-m</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;fix&quot;</span></span>
<span class="line"><span style="color:#B392F0;">git </span><span style="color:#9DB1C5;">checkout</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">dev</span></span>
<span class="line"><span style="color:#B392F0;">git </span><span style="color:#9DB1C5;">merge</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">master</span><span style="color:#B392F0;"> </span></span>
<span class="line"><span style="color:#B392F0;">git </span><span style="color:#9DB1C5;">push</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">-u</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">origin</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">dev</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="ff-fast-forward" tabindex="-1">--ff/fast-forward <a class="header-anchor" href="#ff-fast-forward" aria-hidden="true">#</a></h3><p>Git 合并两个分支时，如果顺着一个分支走下去可以到达另一个分支的话，那么 Git 在合并两者时，只会简单地把指针右移，叫做“快进”（fast-forward）不过这种情况如果删除分支，则会丢失merge分支信息</p><h2 id="git-merge-no-ff的作用" tabindex="-1">git merge --no-ff的作用 <a class="header-anchor" href="#git-merge-no-ff的作用" aria-hidden="true">#</a></h2><p>在许多介绍 Git 工作流的文章里，都会推荐在合并分支时，加上 <code>--no-ff</code> 参数：</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">checkout</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">dev</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">merge</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">--no-ff</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">feature</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">git </span><span style="color:#9DB1C5;">checkout</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">dev</span></span>
<span class="line"><span style="color:#B392F0;">git </span><span style="color:#9DB1C5;">merge</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">--no-ff</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">feature</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><code>--no-ff</code> 在这的作用是禁止快进式合并</p><p>Git 合并两个分支时，如果顺着一个分支走下去可以到达另一个分支的话，那么 Git 在合并两者时，只会简单地把指针右移，叫做“快进”（fast-forward），比如下图：</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">          </span><span style="color:#61AFEF;">A---B---C</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">feature</span></span>
<span class="line"><span style="color:#ABB2BF;">         </span><span style="color:#61AFEF;">/</span></span>
<span class="line"><span style="color:#61AFEF;">D---E---F</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">master</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">          A---B---C </span><span style="color:#9DB1C5;">feature</span></span>
<span class="line"><span style="color:#B392F0;">         /</span></span>
<span class="line"><span style="color:#B392F0;">D---E---F </span><span style="color:#9DB1C5;">master</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>要把 feature 合并到 master 中，执行以下命令</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">checkout</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">master</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">merge</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">feature</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">git </span><span style="color:#9DB1C5;">checkout</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">master</span></span>
<span class="line"><span style="color:#B392F0;">git </span><span style="color:#9DB1C5;">merge</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">feature</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>结果就会变成</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">          </span><span style="color:#61AFEF;">A---B---C</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">feature</span></span>
<span class="line"><span style="color:#ABB2BF;">         </span><span style="color:#61AFEF;">/</span><span style="color:#ABB2BF;">         </span><span style="color:#98C379;">master</span></span>
<span class="line"><span style="color:#61AFEF;">D---E---F</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">          A---B---C </span><span style="color:#9DB1C5;">feature</span></span>
<span class="line"><span style="color:#B392F0;">         /         </span><span style="color:#9DB1C5;">master</span></span>
<span class="line"><span style="color:#B392F0;">D---E---F </span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>因为 feature 就在 master 的下游，所以直接移动了 master 的指针，master 和 feature 都指向了 C。而如果执行了 <code>git merge --no-ff feature</code> 的话，是下面的结果：</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">          </span><span style="color:#61AFEF;">A---B---C</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">feature</span></span>
<span class="line"><span style="color:#ABB2BF;">         </span><span style="color:#61AFEF;">/</span><span style="color:#ABB2BF;">         </span><span style="color:#56B6C2;">\\</span></span>
<span class="line"><span style="color:#ABB2BF;">D---E---F-----------G </span><span style="color:#98C379;">master</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">          A---B---C </span><span style="color:#9DB1C5;">feature</span></span>
<span class="line"><span style="color:#B392F0;">         /         \\</span></span>
<span class="line"><span style="color:#B392F0;">D---E---F-----------G </span><span style="color:#9DB1C5;">master</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>由于 <code>--no-ff</code> 禁止了快进，所以会生成一个新的提交，master 指向 G</p><p>从合并后的代码来看，结果其实是一样的，区别就在于 <code>--no-ff</code> 会让 Git 生成一个新的提交对象。为什么要这样？</p><p>通常我们把 master 作为主分支，上面存放的都是比较稳定的代码，提交频率也很低，而 feature 是用来开发特性的，上面会存在许多零碎的提交，快进式合并会把 feature 的提交历史混入到 master 中，搅乱 master 的提交历史。所以如果你根本不在意提交历史，也不爱管 master 干不干净，那么 <code>--no-ff</code> 其实没什么用。不过，如果某一次 master 出现了问题，你需要回退到上个版本的时候，比如上例，你就会发现退一个版本到了 B，而不是想要的 F，因为 feature 的历史合并进了 master 里</p><h2 id="合并分支-git-rebase" tabindex="-1">合并分支-git rebase <a class="header-anchor" href="#合并分支-git-rebase" aria-hidden="true">#</a></h2><p>git merge的缺点：当合并两个没有上下游关系的分支时，git会自动生成一个merge commit，记录此次的merge，该操作本身没有问题，问题是如果遇到特殊情况需要反复merge的时候，就会导致commit的提交记录非常混乱</p><p>git rebase和git merge区别</p><ul><li>merge 是一个合并操作，会将两个分支的修改合并在一起</li><li>merge 的提交历史忠实地记录了实际发生过什么，关注点在真实的提交历史上面</li><li>rebase 并没有进行合并操作，只是提取了当前分支的修改，将其复制在了目标分支的最新提交后面</li></ul><p>简单来说，就是merge会保留分支记录，rebase则不会</p><p>具体命令如下</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">checkout</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">dev</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">rebase</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">master</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">checkout</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">master</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">merge</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">dev</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">git </span><span style="color:#9DB1C5;">checkout</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">dev</span></span>
<span class="line"><span style="color:#B392F0;">git </span><span style="color:#9DB1C5;">rebase</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">master</span></span>
<span class="line"><span style="color:#B392F0;">git </span><span style="color:#9DB1C5;">checkout</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">master</span></span>
<span class="line"><span style="color:#B392F0;">git </span><span style="color:#9DB1C5;">merge</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">dev</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="git-stash暂存" tabindex="-1"><code>git stash</code>暂存 <a class="header-anchor" href="#git-stash暂存" aria-hidden="true">#</a></h2><p>切换分支一般有以下四种情况：</p><ul><li><code>当前分支工作区和缓存区是干净的</code> 也就是在commit之后再没做任何更改，往别的分支切换时没有影响</li><li><code>当前分支有更改，与其他分支更改了不同的地方，未commit</code> 分支切换的时候，会自动合并</li><li><code>当前分支有更改，与其他分支更改了相同的地方，未commit</code> 切换分支操作会被拒绝，提示当前分支的更改内容没有提交至远程仓库</li><li><code>当前分支有更改，已经commit</code> 往别的分支切换时没有影响</li></ul><p>第二种情况会导致分支代码错乱，第三种情况会导致不能切换分支</p><p>针对第二种和第三种情况，使用<code>git stash</code>命令解决</p><p>示例：开发一个功能，还没开发完，这时来了一个更紧急的需求，需要先去实现这个需求</p><p>自然而然想要切换一个分支去实现，但切换分支操作会被拒绝，但当前分支的更改内容没有提交至远程仓库，因为还没开发完，不太适合提交，所以这时就可以使用git stash了</p><p>git stash将当前分支的所有改动全部存起来，然后当前分支的项目就会直接恢复到最后一次commit之前的代码了，这时就可以切换分支，去完成那个紧急的需求了</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 存储改动</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">stash</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 查看存储的改动列表</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">stash</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">list</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 恢复改动</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">stash</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">apply</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 删除存储的改动列表</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">stash</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">drop</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 或者使用，等价于apply和drop，直接恢复和删除</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">stash</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">pop</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#6B737C;"># 存储改动</span></span>
<span class="line"><span style="color:#B392F0;">git </span><span style="color:#9DB1C5;">stash</span></span>
<span class="line"><span style="color:#6B737C;"># 查看存储的改动列表</span></span>
<span class="line"><span style="color:#B392F0;">git </span><span style="color:#9DB1C5;">stash</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">list</span></span>
<span class="line"><span style="color:#6B737C;"># 恢复改动</span></span>
<span class="line"><span style="color:#B392F0;">git </span><span style="color:#9DB1C5;">stash</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">apply</span></span>
<span class="line"><span style="color:#6B737C;"># 删除存储的改动列表</span></span>
<span class="line"><span style="color:#B392F0;">git </span><span style="color:#9DB1C5;">stash</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">drop</span><span style="color:#B392F0;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;"># 或者使用，等价于apply和drop，直接恢复和删除</span></span>
<span class="line"><span style="color:#B392F0;">git </span><span style="color:#9DB1C5;">stash</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">pop</span><span style="color:#B392F0;"> </span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="管理远程仓库地址" tabindex="-1">管理远程仓库地址 <a class="header-anchor" href="#管理远程仓库地址" aria-hidden="true">#</a></h2><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 查看远程仓库地址</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">remote</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-v</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 添加远程仓库地址到本地仓库中，如已存在，会提示exist</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">remote</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">add</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">origin</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">https://git-repo-address.git</span><span style="color:#ABB2BF;">   </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 修改远程仓库地址</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">remote</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">set-url</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">origin</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">https://git-repo-address.git</span><span style="color:#ABB2BF;">  </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 删除远程仓库地址</span></span>
<span class="line"><span style="color:#61AFEF;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">remote</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">remove</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">origin</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#6B737C;"># 查看远程仓库地址</span></span>
<span class="line"><span style="color:#B392F0;">git </span><span style="color:#9DB1C5;">remote</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">-v</span><span style="color:#B392F0;"> </span></span>
<span class="line"><span style="color:#6B737C;"># 添加远程仓库地址到本地仓库中，如已存在，会提示exist</span></span>
<span class="line"><span style="color:#B392F0;">git </span><span style="color:#9DB1C5;">remote</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">add</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">origin</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">https://git-repo-address.git</span><span style="color:#B392F0;">   </span></span>
<span class="line"><span style="color:#6B737C;"># 修改远程仓库地址</span></span>
<span class="line"><span style="color:#B392F0;">git </span><span style="color:#9DB1C5;">remote</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">set-url</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">origin</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">https://git-repo-address.git</span><span style="color:#B392F0;">  </span></span>
<span class="line"><span style="color:#6B737C;"># 删除远程仓库地址</span></span>
<span class="line"><span style="color:#B392F0;">git </span><span style="color:#9DB1C5;">remote</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">remove</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">origin</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="commit" tabindex="-1">commit <a class="header-anchor" href="#commit" aria-hidden="true">#</a></h2><p>git log查看commit的哈希，然后回退到相应commi</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">reset</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">--hard</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">f36801544670e00b2f59a28e19017d2786c4085e</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">git </span><span style="color:#9DB1C5;">reset</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">--hard</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">f36801544670e00b2f59a28e19017d2786c4085e</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>修改才提交的commit</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">git</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">commit</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">--amend</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">git </span><span style="color:#9DB1C5;">commit</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">--amend</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="fast-forward" tabindex="-1">Fast-forward <a class="header-anchor" href="#fast-forward" aria-hidden="true">#</a></h2><p>默认情况下直接使用 <code>git merge</code> 命令，没有附加任何选项命令的话，那么应该是交给 git 来判断使用哪种 merge 模式，实际上 git 默认执行的指令是 <code>git merge -ff</code> 指令（默认值）</p><h3 id="什么是-fast-forward" tabindex="-1">什么是 <code>Fast-forward</code> <a class="header-anchor" href="#什么是-fast-forward" aria-hidden="true">#</a></h3><p>git merge会自动执行了 <code>Fast-forward</code> 操作 <code>Fast-forward</code> 是指 Master 合并 Feature 时候发现 Master 当前节点一直和 Feature 的根节点相同，没有发生改变，那么 Master 快速移动头指针到 Feature 的位置，所以 <strong>Fast-forward 并不会发生真正的合并</strong>，只是通过移动指针造成合并的假象，这也体现 git 设计的巧妙之处。</p><p>先简单介绍一下 <code>git merge</code> 的三个合并参数模式：</p><ul><li>-ff 自动合并模式：当合并的分支为当前分支的后代的，那么会自动执行 <code>--ff (Fast-forward)</code> 模式，如果不匹配则执行 <code>--no-ff（non-Fast-forward）</code> 合并模式</li><li>--no-ff 非 Fast-forward 模式：在任何情况下都会创建新的 commit 进行多方合并（及时被合并的分支为自己的直接后代）</li><li>--ff-onlu Fast-forward 模式：只会按照 <code>Fast-forward</code> 模式进行合并，如果不符合条件（并非当前分支的直接后代），则会拒绝合并请求并且推出</li></ul><h3 id="选择" tabindex="-1">选择 <a class="header-anchor" href="#选择" aria-hidden="true">#</a></h3><p>三种 merge 模式没有好坏和优劣之分，只有根据团队的需求和实际情况选择合适的合并模式才是最优解，那么应该怎么选择呢？ 给出以下推荐：</p><ul><li>如果你是小型团队，并且追求干净线性 git 历史记录，那么我推荐使用 <code>git merge --ff-only</code> 方式保持主线模式开发是一种不错的选择</li><li>如果你团队不大不小，并且也不追求线性的 git 历史记录，要体现相对真实的 merge 记录，那么默认的 <code>git --ff</code> 比较合适</li><li>如果你是大型团队，并且要严格监控每个功能分支的合并情况，那么使用 <code>--no-ff</code> 禁用 <code>Fast-forward</code> 是一个不错的选择</li></ul><h1 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h1>`,82),o=[p];function r(t,c,i,d,B,y){return a(),n("div",null,o)}const m=s(e,[["render",r]]);export{g as __pageData,m as default};
