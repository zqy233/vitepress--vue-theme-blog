import{_ as s,o as n,c as a,a as l}from"./app.bfa9bd4b.js";const h=JSON.parse('{"title":"three.js的实战手册","description":"","frontmatter":{},"headers":[{"level":2,"title":"什么是three.js？","slug":"什么是three-js","link":"#什么是three-js","children":[]},{"level":2,"title":"cdn方式使用threejs","slug":"cdn方式使用threejs","link":"#cdn方式使用threejs","children":[{"level":3,"title":"这是因为浏览器不直接支持 CommonJS","slug":"这是因为浏览器不直接支持-commonjs","link":"#这是因为浏览器不直接支持-commonjs","children":[]}]},{"level":2,"title":"Three.js 应用的结构","slug":"three-js-应用的结构","link":"#three-js-应用的结构","children":[]},{"level":2,"title":"index.html","slug":"index-html","link":"#index-html","children":[]},{"level":2,"title":"styles/main.css","slug":"styles-main-css","link":"#styles-main-css","children":[]},{"level":2,"title":"src/main.js: JavaScript 入口点","slug":"src-main-js-javascript-入口点","link":"#src-main-js-javascript-入口点","children":[]},{"level":2,"title":"向页面添加 three.js 场景","slug":"向页面添加-three-js-场景","link":"#向页面添加-three-js-场景","children":[]},{"level":2,"title":"vendor/ 文件夹","slug":"vendor-文件夹","link":"#vendor-文件夹","children":[]},{"level":2,"title":"assets/ 文件夹","slug":"assets-文件夹","link":"#assets-文件夹","children":[]},{"level":2,"title":"第一个 three.js 场景：你好，立方体！","slug":"第一个-three-js-场景-你好-立方体","link":"#第一个-three-js-场景-你好-立方体","children":[]},{"level":2,"title":"场景：小宇宙","slug":"场景-小宇宙","link":"#场景-小宇宙","children":[]},{"level":2,"title":"相机：指向小宇宙的望远镜","slug":"相机-指向小宇宙的望远镜","link":"#相机-指向小宇宙的望远镜","children":[]},{"level":2,"title":"渲染器：具有非凡才能和速度的艺术家","slug":"渲染器-具有非凡才能和速度的艺术家","link":"#渲染器-具有非凡才能和速度的艺术家","children":[]},{"level":2,"title":"我们的第一个可见对象：网格 Mesh","slug":"我们的第一个可见对象-网格-mesh","link":"#我们的第一个可见对象-网格-mesh","children":[]},{"level":2,"title":"几何体","slug":"几何体","link":"#几何体","children":[]},{"level":2,"title":"材料","slug":"材料","link":"#材料","children":[]},{"level":2,"title":"我们的第一个 three.js 应用程序","slug":"我们的第一个-three-js-应用程序","link":"#我们的第一个-three-js-应用程序","children":[]},{"level":2,"title":"1. 初始设置","slug":"_1-初始设置","link":"#_1-初始设置","children":[{"level":3,"title":"从 three.js 中导入类","slug":"从-three-js-中导入类","link":"#从-three-js-中导入类","children":[]},{"level":3,"title":"JavaScript 中访问 HTML 的scene-container元素","slug":"javascript-中访问-html-的scene-container元素","link":"#javascript-中访问-html-的scene-container元素","children":[]}]},{"level":2,"title":"2.创建场景","slug":"_2-创建场景","link":"#_2-创建场景","children":[{"level":3,"title":"设置场景的背景颜色","slug":"设置场景的背景颜色","link":"#设置场景的背景颜色","children":[]}]},{"level":2,"title":"3.创建相机","slug":"_3-创建相机","link":"#_3-创建相机","children":[{"level":3,"title":"相机的视锥体","slug":"相机的视锥体","link":"#相机的视锥体","children":[]},{"level":3,"title":"定位相机","slug":"定位相机","link":"#定位相机","children":[]}]},{"level":2,"title":"4.创建一个可见对象","slug":"_4-创建一个可见对象","link":"#_4-创建一个可见对象","children":[{"level":3,"title":"创建几何体","slug":"创建几何体","link":"#创建几何体","children":[]},{"level":3,"title":"创建材质","slug":"创建材质","link":"#创建材质","children":[]},{"level":3,"title":"将网格添加到场景中","slug":"将网格添加到场景中","link":"#将网格添加到场景中","children":[]}]},{"level":2,"title":"5. 创建渲染器","slug":"_5-创建渲染器","link":"#_5-创建渲染器","children":[{"level":3,"title":"设置渲染器的大小","slug":"设置渲染器的大小","link":"#设置渲染器的大小","children":[]},{"level":3,"title":"设置设备像素比（DPR）","slug":"设置设备像素比-dpr","link":"#设置设备像素比-dpr","children":[]},{"level":3,"title":"将<canvas>元素添加到我们的页面","slug":"将-canvas-元素添加到我们的页面","link":"#将-canvas-元素添加到我们的页面","children":[]}]},{"level":2,"title":"6. 渲染场景","slug":"_6-渲染场景","link":"#_6-渲染场景","children":[]}],"relativePath":"4.库/threejs/three.js的实战手册.md","lastUpdated":1720835436702}'),e={name:"4.库/threejs/three.js的实战手册.md"},p=l(`<h1 id="three-js的实战手册" tabindex="-1">three.js的实战手册 <a class="header-anchor" href="#three-js的实战手册" aria-hidden="true">#</a></h1><blockquote><p><a href="https://discoverthreejs.com/zh/" target="_blank" rel="noreferrer">https://discoverthreejs.com/zh/</a></p></blockquote><p>《探索three.js》是对web作为3D图形平台的完整介绍，它使用three.js WebGL库，编写自一位核心 three.js 开发人员。</p><p>该书是一个完整的教程系列，旨在帮助您在尽可能短的时间内开始创建现代、专业品质的3D Web应用程序。</p><p>笔记只用于记录个人需要记忆理解的内容，完整内容请查看上方链接网站。</p><h2 id="什么是three-js" tabindex="-1">什么是three.js？ <a class="header-anchor" href="#什么是three-js" aria-hidden="true">#</a></h2><p>three.js是世界上最流行的用于在Web上显示3D内容的JavaScript框架。</p><p>使用 three.js，您不再需要花哨的游戏PC或控制台来显示逼真的3D图形。 您甚至不需要下载特殊的应用程序。现在每个人都可以使用智能手机和网络浏览器体验令人惊叹的3D应用程序。</p><p>这个惊人的库和充满活力的社区是您在浏览器、笔记本电脑、平板电脑或智能手机上创建游戏、 音乐视频、科学和数据可视化或几乎任何您能想象的任何东西所需要的一切！</p><h2 id="cdn方式使用threejs" tabindex="-1">cdn方式使用threejs <a class="header-anchor" href="#cdn方式使用threejs" aria-hidden="true">#</a></h2><p>浏览器地址栏输入<code>unpkg（一个常见的cdn服务商）网址+包名</code>，最后添加斜线，可以查看一个包内的所有文件列表:</p><p><code>https://www.unpkg.com/three/</code>：</p><p>并且地址会自动调整为对应的three最新版本的文件目录</p><p><code>https://www.unpkg.com/browse/three@0.157.0/</code></p><p>访问文件目录中的threejs文件的完整地址</p><p><code>https://www.unpkg.com/three@0.157.0/build/three.module.js</code></p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#56B6C2;">&lt;!</span><span style="color:#E5C07B;">DOCTYPE</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">html</span><span style="color:#56B6C2;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">meta</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;font-style:italic;">charset</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;utf-8&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;My first three.js app&lt;/</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">style</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">      body </span><span style="color:#C678DD;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E06C75;">margin</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#C678DD;">}</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;/</span><span style="color:#E06C75;">style</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;/</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;font-style:italic;">type</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;module&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">      import * as THREE from &quot;https://www.unpkg.com/three@0.157.0/build/three.module.js&quot;;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">      console.log(THREE);</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;/</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">&lt;!</span><span style="color:#79B8FF;">DOCTYPE</span><span style="color:#B392F0;"> html</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">&lt;</span><span style="color:#FFAB70;">html</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">  &lt;</span><span style="color:#FFAB70;">head</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">    &lt;</span><span style="color:#FFAB70;">meta</span><span style="color:#B392F0;"> charset</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;utf-8&quot;</span><span style="color:#B392F0;"> /&gt;</span></span>
<span class="line"><span style="color:#B392F0;">    &lt;</span><span style="color:#FFAB70;">title</span><span style="color:#B392F0;">&gt;My first three.js app&lt;/</span><span style="color:#FFAB70;">title</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">    &lt;</span><span style="color:#FFAB70;">style</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">      body {</span></span>
<span class="line"><span style="color:#B392F0;">        margin: </span><span style="color:#F8F8F8;">0</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">      }</span></span>
<span class="line"><span style="color:#B392F0;">    &lt;/</span><span style="color:#FFAB70;">style</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">  &lt;/</span><span style="color:#FFAB70;">head</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">  &lt;</span><span style="color:#FFAB70;">body</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">    &lt;</span><span style="color:#FFAB70;">script</span><span style="color:#B392F0;"> type</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;module&quot;</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">      import * as THREE from &quot;https://www.unpkg.com/three@0.157.0/build/three.module.js&quot;;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">      console.log(THREE);</span></span>
<span class="line"><span style="color:#B392F0;">    &lt;/</span><span style="color:#FFAB70;">script</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">  &lt;/</span><span style="color:#FFAB70;">body</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">&lt;/</span><span style="color:#FFAB70;">html</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>这里我们引入的cdn是es6模块，而非commonjs模块</p><h3 id="这是因为浏览器不直接支持-commonjs" tabindex="-1">这是因为浏览器不直接支持 CommonJS <a class="header-anchor" href="#这是因为浏览器不直接支持-commonjs" aria-hidden="true">#</a></h3><p>浏览器不直接支持 CommonJS 的原因主要是因为 CommonJS 是一种模块化规范，最初是为服务器端 JavaScript 开发而设计的，例如 Node.js。它使用 <code>require</code> 和 <code>module.exports</code> 来导入和导出模块，这种同步的模块加载方式在服务器端运行时通常是可行的，但在浏览器中不太适用。以下是一些原因：</p><ol><li><strong>同步加载：</strong> CommonJS 模块通常是同步加载的，这意味着当一个模块需要导入另一个模块时，它会阻塞浏览器的执行，从而导致性能问题。浏览器更倾向于异步加载模块，以提高页面加载速度和响应性。</li><li><strong>文件系统依赖：</strong> CommonJS 模块系统的设计假定存在文件系统，这对服务器端开发来说很有用，但在浏览器中并不总是适用。浏览器不提供访问文件系统的功能，因此 CommonJS 的文件加载机制需要进行适应。</li><li><strong>缺乏模块版本管理：</strong> CommonJS 模块没有内置的版本管理，这意味着无法轻松地管理模块的不同版本，这在浏览器环境中是一个重要问题。</li></ol><p>为了解决这些问题，浏览器引入了 ECMAScript 模块（ESM）标准，也被称为 ES6 模块，它是 JavaScript 的官方模块系统。ESM 支持异步加载、无需文件系统依赖，以及版本管理，因此更适合浏览器环境。</p><p>虽然浏览器现在更多地支持 ESM，但 CommonJS 仍然在服务器端 JavaScript 开发中广泛使用，而且通过工具和转换器（如Webpack、Browserify）也可以在浏览器中使用 CommonJS 模块。但对于新的浏览器端开发项目，使用原生的 ES6 模块是更好的选择。</p><h2 id="three-js-应用的结构" tabindex="-1">Three.js 应用的结构 <a class="header-anchor" href="#three-js-应用的结构" aria-hidden="true">#</a></h2><p>在我们构建一个 three.js 应用程序之前，我们需要创建一个网页。</p><p>我们的目标是尽可能创建最基本、最简单、最平淡无奇的网页，而无需对使用 three.js 的真实 Web 应用程序的外观做出任何假设。通过这样做，我们确保我们编写的代码可以适应任何地方，而无需太多努力。</p><p>我们将只用两个文件创建这个基本网页：index.html和styles/main.css。</p><h2 id="index-html" tabindex="-1">index.html <a class="header-anchor" href="#index-html" aria-hidden="true">#</a></h2><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;!</span><span style="color:#E06C75;">DOCTYPE</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;Discoverthreejs.com - The Structure of a three.js App&lt;/</span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">meta</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">name</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;viewport&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">content</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;width=device-width, initial-scale=1&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">meta</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">charset</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;UTF-8&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">link</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">rel</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;icon&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">href</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;https://discoverthreejs.com/favicon.ico&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;image/x-icon&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">link</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">href</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;./styles/main.css&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">rel</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;stylesheet&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;text/css&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;module&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">src</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;./src/main.js&quot;</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">head</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">h1</span><span style="color:#ABB2BF;">&gt;Discoverthreejs.com - Nothing to see here yet :)&lt;/</span><span style="color:#E06C75;">h1</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">id</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;scene-container&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">&lt;!-- Our &lt;canvas&gt; will be inserted here --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">&lt;!</span><span style="color:#FFAB70;">DOCTYPE</span><span style="color:#B392F0;"> html&gt;</span></span>
<span class="line"><span style="color:#B392F0;">&lt;</span><span style="color:#FFAB70;">html</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">&lt;</span><span style="color:#FFAB70;">head</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">  &lt;</span><span style="color:#FFAB70;">title</span><span style="color:#B392F0;">&gt;Discoverthreejs.com - The Structure of a three.js App&lt;/</span><span style="color:#FFAB70;">title</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  &lt;</span><span style="color:#FFAB70;">meta</span><span style="color:#B392F0;"> name</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;viewport&quot;</span><span style="color:#B392F0;"> content</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;width=device-width, initial-scale=1&quot;</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">  &lt;</span><span style="color:#FFAB70;">meta</span><span style="color:#B392F0;"> charset</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;UTF-8&quot;</span><span style="color:#B392F0;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  &lt;</span><span style="color:#FFAB70;">link</span><span style="color:#B392F0;"> rel</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;icon&quot;</span><span style="color:#B392F0;"> href</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;https://discoverthreejs.com/favicon.ico&quot;</span><span style="color:#B392F0;"> type</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;image/x-icon&quot;</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  &lt;</span><span style="color:#FFAB70;">link</span><span style="color:#B392F0;"> href</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;./styles/main.css&quot;</span><span style="color:#B392F0;"> rel</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;stylesheet&quot;</span><span style="color:#B392F0;"> type</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;text/css&quot;</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  &lt;</span><span style="color:#FFAB70;">script</span><span style="color:#B392F0;"> type</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;module&quot;</span><span style="color:#B392F0;"> src</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;./src/main.js&quot;</span><span style="color:#B392F0;">&gt;&lt;/</span><span style="color:#FFAB70;">script</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">&lt;/</span><span style="color:#FFAB70;">head</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">&lt;</span><span style="color:#FFAB70;">body</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">  &lt;</span><span style="color:#FFAB70;">h1</span><span style="color:#B392F0;">&gt;Discoverthreejs.com - Nothing to see here yet :)&lt;/</span><span style="color:#FFAB70;">h1</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  &lt;</span><span style="color:#FFAB70;">div</span><span style="color:#B392F0;"> id</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;scene-container&quot;</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#6B737C;">&lt;!-- Our &lt;canvas&gt; will be inserted here --&gt;</span></span>
<span class="line"><span style="color:#B392F0;">  &lt;/</span><span style="color:#FFAB70;">div</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">&lt;/</span><span style="color:#FFAB70;">body</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">&lt;/</span><span style="color:#FFAB70;">html</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h2 id="styles-main-css" tabindex="-1">styles/main.css <a class="header-anchor" href="#styles-main-css" aria-hidden="true">#</a></h2><p>在 <em><strong>index.html</strong></em> 的<code>&lt;head&gt;</code>部分中，其中一个<code>&lt;link&gt;</code>元素引用了 <em><strong>styles/main.css</strong></em> 文件：</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">link</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">href</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;./styles/main.css&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">rel</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;stylesheet&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;text/css&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">&lt;</span><span style="color:#FFAB70;">link</span><span style="color:#B392F0;"> href</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;./styles/main.css&quot;</span><span style="color:#B392F0;"> rel</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;stylesheet&quot;</span><span style="color:#B392F0;"> type</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;text/css&quot;</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>其中包含一些用于控制页面外观的简单样式：</p><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">/* remove margins and scroll bars */</span></span>
<span class="line"><span style="color:#ABB2BF;">  margin: </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  overflow: </span><span style="color:#D19A66;">hidden</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">/* style text */</span></span>
<span class="line"><span style="color:#ABB2BF;">  text-align: </span><span style="color:#D19A66;">center</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  font-size: </span><span style="color:#D19A66;">12</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  font-family: </span><span style="color:#D19A66;">Sans-Serif</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">/* color text */</span></span>
<span class="line"><span style="color:#ABB2BF;">  color: </span><span style="color:#D19A66;">#444</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">h1</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">/* position the heading */</span></span>
<span class="line"><span style="color:#ABB2BF;">  position: </span><span style="color:#D19A66;">absolute</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  width: </span><span style="color:#D19A66;">100</span><span style="color:#E06C75;">%</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">/* make sure that the heading is drawn on top */</span></span>
<span class="line"><span style="color:#ABB2BF;">  z-index: </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">#scene-container</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">/* tell our scene container to take up the full page */</span></span>
<span class="line"><span style="color:#ABB2BF;">  position: </span><span style="color:#D19A66;">absolute</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  width: </span><span style="color:#D19A66;">100</span><span style="color:#E06C75;">%</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  height: </span><span style="color:#D19A66;">100</span><span style="color:#E06C75;">%</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    Set the container&#39;s background color to the same as the scene&#39;s</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    background to prevent flashing on load</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  */</span></span>
<span class="line"><span style="color:#ABB2BF;">  background-color: skyblue;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#FFAB70;">body</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">/* remove margins and scroll bars */</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">margin</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">0</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">overflow</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">hidden</span><span style="color:#B392F0;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">/* style text */</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">text-align</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">center</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">font-size</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">12px</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">font-family</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">Sans-Serif</span><span style="color:#B392F0;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">/* color text */</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">color</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">#444</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFAB70;">h1</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">/* position the heading */</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">position</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">absolute</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">width</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">100%</span><span style="color:#B392F0;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">/* make sure that the heading is drawn on top */</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">z-index</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">1</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">#scene-container {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">/* tell our scene container to take up the full page */</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">position</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">absolute</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">width</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">100%</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">height</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">100%</span><span style="color:#B392F0;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">/*</span></span>
<span class="line"><span style="color:#6B737C;">    Set the container&#39;s background color to the same as the scene&#39;s</span></span>
<span class="line"><span style="color:#6B737C;">    background to prevent flashing on load</span></span>
<span class="line"><span style="color:#6B737C;">  */</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">background-color</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">skyblue</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><p>稍后我们将仔细查看样式<code>#scene-container</code>，而该文件的其余部分将在 <a href="https://discoverthreejs.com/zh/book/appendix/html-and-css-reference/#main-css" target="_blank" rel="noreferrer">附录</a> 中更详细地解释。</p><h2 id="src-main-js-javascript-入口点" tabindex="-1">src/main.js: JavaScript 入口点 <a class="header-anchor" href="#src-main-js-javascript-入口点" aria-hidden="true">#</a></h2><p>回到 <em><strong>index.html</strong></em>，样式<code>&lt;link&gt;</code>的正下方是一个<code>&lt;script&gt;</code>标签引用了<code>src/main.js</code>文件：</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;module&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">src</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;./src/main.js&quot;</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">&lt;</span><span style="color:#FFAB70;">script</span><span style="color:#B392F0;"> type</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;module&quot;</span><span style="color:#B392F0;"> src</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;./src/main.js&quot;</span><span style="color:#B392F0;">&gt;&lt;/</span><span style="color:#FFAB70;">script</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>目前是空的：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// just waiting for your beautiful creations!</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#6B737C;">// just waiting for your beautiful creations!</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><em><strong>main.js</strong></em> 是我们的 JavaScript 应用程序的入口点，我们将在下一章中填充它。该<code>type=&quot;module&quot;</code>属性告诉浏览器我们正在编写 JavaScript 模块。</p><p><code>module</code>属性还有另一个优点：浏览器将自动 <em>推迟</em> 运行此文件，直到 HTML 被解析。这将防止由于在浏览器读取之前尝试访问 HTML 元素而导致的错误（浏览器从上到下读取 HTML）。</p><h2 id="向页面添加-three-js-场景" tabindex="-1">向页面添加 three.js 场景 <a class="header-anchor" href="#向页面添加-three-js-场景" aria-hidden="true">#</a></h2><p>下一个在 <em><strong>index.html</strong></em> 中的关注点是场景 scene 容器元素：</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">h1</span><span style="color:#ABB2BF;">&gt;Discoverthreejs.com - Nothing to see here yet :)&lt;/</span><span style="color:#E06C75;">h1</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">id</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;scene-container&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">&lt;!-- Our &lt;canvas&gt; will be inserted here --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">&lt;</span><span style="color:#FFAB70;">body</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">  &lt;</span><span style="color:#FFAB70;">h1</span><span style="color:#B392F0;">&gt;Discoverthreejs.com - Nothing to see here yet :)&lt;/</span><span style="color:#FFAB70;">h1</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  &lt;</span><span style="color:#FFAB70;">div</span><span style="color:#B392F0;"> id</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;scene-container&quot;</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#6B737C;">&lt;!-- Our &lt;canvas&gt; will be inserted here --&gt;</span></span>
<span class="line"><span style="color:#B392F0;">  &lt;/</span><span style="color:#FFAB70;">div</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">&lt;/</span><span style="color:#FFAB70;">body</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>所有 three.js 场景都在一个 <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas" target="_blank" rel="noreferrer"><code>canvas</code></a> 元素内呈现。一旦我们设置了我们的应用程序，three.js 将为我们创建一个画布，然后我们将它插入到场景 scene 容器中：</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">id</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;scene-container&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">canvas</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">canvas</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">&lt;</span><span style="color:#FFAB70;">div</span><span style="color:#B392F0;"> id</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;scene-container&quot;</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">  &lt;</span><span style="color:#FFAB70;">canvas</span><span style="color:#B392F0;">&gt;&lt;/</span><span style="color:#FFAB70;">canvas</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">&lt;/</span><span style="color:#FFAB70;">div</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>然后，我们可以通过设置场景容器元素的样式来控制场景的位置和大小。如果你把注意力转回<em><strong>main.css</strong></em>，你会看到我们已经为这个元素创建了一些样式。通过设置位置、宽度和高度，我们告诉浏览器这个元素应该占据整个 window 窗口：</p><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">#scene-container</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">/* tell our scene container to take up the full page */</span></span>
<span class="line"><span style="color:#ABB2BF;">  position: </span><span style="color:#D19A66;">absolute</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  width: </span><span style="color:#D19A66;">100</span><span style="color:#E06C75;">%</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  height: </span><span style="color:#D19A66;">100</span><span style="color:#E06C75;">%</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    Set the container&#39;s background color to the same as the scene&#39;s</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    background to prevent flashing on load</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  */</span></span>
<span class="line"><span style="color:#ABB2BF;">  background-color: skyblue;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">#scene-container {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">/* tell our scene container to take up the full page */</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">position</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">absolute</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">width</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">100%</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">height</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">100%</span><span style="color:#B392F0;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#6B737C;">/*</span></span>
<span class="line"><span style="color:#6B737C;">    Set the container&#39;s background color to the same as the scene&#39;s</span></span>
<span class="line"><span style="color:#6B737C;">    background to prevent flashing on load</span></span>
<span class="line"><span style="color:#6B737C;">  */</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">background-color</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">skyblue</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>最后，我们将背景颜色设置为天蓝色，因为这是我们将为大部分的 three.js 场景提供的背景颜色。我们的场景需要几毫秒才能准备好，而浏览器会解析 JavaScript、加载 3D 模型并构建场景，而所有这些场景容器上的内容都是可见的。通过使容器与场景颜色相同，我们确保过渡尽可能平滑。</p><h2 id="vendor-文件夹" tabindex="-1">vendor/ 文件夹 <a class="header-anchor" href="#vendor-文件夹" aria-hidden="true">#</a></h2><p><em><strong>vendor/</strong></em> 文件夹是我们放置 <em>其他人</em> 编写的 JavaScript 文件的地方。对于本书中的大多数示例，这意味着来自 three.js 库的文件，从 <a href="https://discoverthreejs.com/zh/book/introduction/github-repo/" target="_blank" rel="noreferrer">three.js GitHub 仓库</a>下载。在本书中，我们将只使用库中的三个文件：</p><ul><li><em><strong>vendor/three/build/three.module.js</strong></em>: 主 three.js 文件.</li><li><em><strong>vendor/three/examples/jsm/controls/OrbitControls.js</strong></em>: 我们将介绍的相机控制插件。</li><li><em><strong>vendor/three/examples/jsm/loaders/GLTFLoader.js</strong></em>: 我们将介绍的 3D 模型加载器。</li></ul><p><em><strong>vendor/three</strong></em> 文件夹反映了 GitHub 仓库的结构，但为了清楚起见，我们将仅包含每章所需的文件。我们将使用 CDN 的方式导入这些文件到 <em><strong>main.js</strong></em> 中：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">Camera</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">Group</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">Scene</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;https://cdn.skypack.dev/three@0.132.2&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">OrbitControls</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;https://cdn.skypack.dev/three@0.132.2/examples/jsm/controls/OrbitControls.js?module&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">GLTFLoader</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;https://cdn.skypack.dev/three@0.132.2/examples/jsm/loaders/GLTFLoader.js?module&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#B392F0;"> { Camera</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> Group</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> Scene } </span><span style="color:#F97583;">from</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;https://cdn.skypack.dev/three@0.132.2&quot;</span><span style="color:#B392F0;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#B392F0;"> { OrbitControls } </span><span style="color:#F97583;">from</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;https://cdn.skypack.dev/three@0.132.2/examples/jsm/controls/OrbitControls.js?module&quot;</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#B392F0;"> { GLTFLoader } </span><span style="color:#F97583;">from</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;https://cdn.skypack.dev/three@0.132.2/examples/jsm/loaders/GLTFLoader.js?module&quot;</span><span style="color:#B392F0;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="assets-文件夹" tabindex="-1">assets/ 文件夹 <a class="header-anchor" href="#assets-文件夹" aria-hidden="true">#</a></h2><p>最后是 <em><strong>assets/</strong></em> 文件夹。<strong>我们的应用程序中使用的任何非 HTML、CSS 或 JavaScript 的东西都在这里</strong>：纹理、3D 模型、字体、声音等等。</p><p>有了这些，是时候开始做真正的工作了！在下一章中，我们将创建我们的第一个简单的 three.js 应用程序。</p><h2 id="第一个-three-js-场景-你好-立方体" tabindex="-1">第一个 three.js 场景：你好，立方体！ <a class="header-anchor" href="#第一个-three-js-场景-你好-立方体" aria-hidden="true">#</a></h2><p>在本章中，我们将创建 three.js 的 Hello World 应用程序：一个简单的白色立方体。由于我们已经建立了一个简单的网页，如上一章所述，我们需要做的就是在 <em><strong>src/main.js</strong></em> 中编写几行 JavaScript 代码，我们的应用程序就会运行起来。我们将在此过程中介绍相当多的理论，但实际代码很短。下面是该文件在本章结束时的样子。不算导入语句和注释，总共有不到二十行代码。这就是创建一个简单的“你好，立方体！”的 three.js 应用程序所需要的全部内容。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">BoxBufferGeometry</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">Color</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">Mesh</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">MeshBasicMaterial</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">PerspectiveCamera</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">Scene</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">WebGLRenderer</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">} </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;three&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Get a reference to the container element that will hold our scene</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">container</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">querySelector</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;#scene-container&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// create a Scene</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">scene</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Scene</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Set the background color</span></span>
<span class="line"><span style="color:#E5C07B;">scene</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">background</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Color</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;skyblue&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Create a camera</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">fov</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">35</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// AKA Field of View</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">aspect</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">container</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">clientWidth</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">/</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">container</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">clientHeight</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">near</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0.1</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// the near clipping plane</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">far</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// the far clipping plane</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">camera</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">PerspectiveCamera</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">fov</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">aspect</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">near</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">far</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// every object is initially created at ( 0, 0, 0 )</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// move the camera back so we can view the scene</span></span>
<span class="line"><span style="color:#E5C07B;">camera</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">position</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">set</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// create a geometry</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">geometry</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">BoxBufferGeometry</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// create a default (white) Basic material</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">material</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">MeshBasicMaterial</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// create a Mesh containing the geometry and material</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">cube</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Mesh</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">geometry</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">material</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// add the mesh to the scene</span></span>
<span class="line"><span style="color:#E5C07B;">scene</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">cube</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// create the renderer</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">renderer</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">WebGLRenderer</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// next, set the renderer to the same size as our container element</span></span>
<span class="line"><span style="color:#E5C07B;">renderer</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setSize</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">container</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">clientWidth</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">container</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">clientHeight</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// finally, set the pixel ratio so that our scene will look good on HiDPI displays</span></span>
<span class="line"><span style="color:#E5C07B;">renderer</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setPixelRatio</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">window</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">devicePixelRatio</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// add the automatically created &lt;canvas&gt; element to the page</span></span>
<span class="line"><span style="color:#E5C07B;">container</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">append</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">renderer</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">domElement</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// render, or &#39;create a still image&#39;, of the scene</span></span>
<span class="line"><span style="color:#E5C07B;">renderer</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">render</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">scene</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">camera</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">  BoxBufferGeometry</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  Color</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  Mesh</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  MeshBasicMaterial</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  PerspectiveCamera</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  Scene</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  WebGLRenderer</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">} </span><span style="color:#F97583;">from</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;three&#39;</span><span style="color:#B392F0;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">// Get a reference to the container element that will hold our scene</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">container</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">document</span><span style="color:#B392F0;">.querySelector(</span><span style="color:#FFAB70;">&#39;#scene-container&#39;</span><span style="color:#B392F0;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">// create a Scene</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">scene</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">new</span><span style="color:#B392F0;"> Scene();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">// Set the background color</span></span>
<span class="line"><span style="color:#79B8FF;">scene</span><span style="color:#B392F0;">.background </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">new</span><span style="color:#B392F0;"> Color(</span><span style="color:#FFAB70;">&#39;skyblue&#39;</span><span style="color:#B392F0;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">// Create a camera</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">fov</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">35</span><span style="color:#B392F0;">; </span><span style="color:#6B737C;">// AKA Field of View</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">aspect</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">container</span><span style="color:#B392F0;">.clientWidth </span><span style="color:#F97583;">/</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">container</span><span style="color:#B392F0;">.clientHeight;</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">near</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">0.1</span><span style="color:#B392F0;">; </span><span style="color:#6B737C;">// the near clipping plane</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">far</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">100</span><span style="color:#B392F0;">; </span><span style="color:#6B737C;">// the far clipping plane</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">camera</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">new</span><span style="color:#B392F0;"> PerspectiveCamera(fov</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> aspect</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> near</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> far);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">// every object is initially created at ( 0, 0, 0 )</span></span>
<span class="line"><span style="color:#6B737C;">// move the camera back so we can view the scene</span></span>
<span class="line"><span style="color:#79B8FF;">camera</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">position</span><span style="color:#B392F0;">.set(</span><span style="color:#F8F8F8;">0</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">0</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">10</span><span style="color:#B392F0;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">// create a geometry</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">geometry</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">new</span><span style="color:#B392F0;"> BoxBufferGeometry(</span><span style="color:#F8F8F8;">2</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">2</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">2</span><span style="color:#B392F0;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">// create a default (white) Basic material</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">material</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">new</span><span style="color:#B392F0;"> MeshBasicMaterial();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">// create a Mesh containing the geometry and material</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">cube</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">new</span><span style="color:#B392F0;"> Mesh(geometry</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> material);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">// add the mesh to the scene</span></span>
<span class="line"><span style="color:#79B8FF;">scene</span><span style="color:#B392F0;">.add(cube);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">// create the renderer</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">renderer</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">new</span><span style="color:#B392F0;"> WebGLRenderer();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">// next, set the renderer to the same size as our container element</span></span>
<span class="line"><span style="color:#79B8FF;">renderer</span><span style="color:#B392F0;">.setSize(</span><span style="color:#79B8FF;">container</span><span style="color:#B392F0;">.clientWidth</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">container</span><span style="color:#B392F0;">.clientHeight);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">// finally, set the pixel ratio so that our scene will look good on HiDPI displays</span></span>
<span class="line"><span style="color:#79B8FF;">renderer</span><span style="color:#B392F0;">.setPixelRatio(</span><span style="color:#79B8FF;">window</span><span style="color:#B392F0;">.devicePixelRatio);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">// add the automatically created &lt;canvas&gt; element to the page</span></span>
<span class="line"><span style="color:#79B8FF;">container</span><span style="color:#B392F0;">.append(</span><span style="color:#79B8FF;">renderer</span><span style="color:#B392F0;">.domElement);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">// render, or &#39;create a still image&#39;, of the scene</span></span>
<span class="line"><span style="color:#79B8FF;">renderer</span><span style="color:#B392F0;">.render(scene</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> camera);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br></div></div><p>在开始编写代码之前，让我们先看看构成每个 three.js 应用程序的基本组件。首先是场景、相机和渲染器，它们构成了应用程序的基本脚手架。接下来是 HTML <code>&lt;canvas&gt;</code>元素，我们可以在其中看到结果。最后但并非最不重要的一点是，有一个可见的对象，例如网格。除了画布 canvas（特定于浏览器）之外，在任何 3D 图形系统中都可以找到与这些组件中的每一个等效的组件，从而使您在这些页面中获得的知识具有高度可转移性。</p><h2 id="场景-小宇宙" tabindex="-1">场景：小宇宙 <a class="header-anchor" href="#场景-小宇宙" aria-hidden="true">#</a></h2><p><strong>场景是我们能看到的一切的载体</strong>。您可以将其视为所有 3D 对象都存在于其中的“小宇宙”。我们用来创建场景的 three.js 类简称为 <a href="https://threejs.org/docs/#api/en/scenes/Scene" target="_blank" rel="noreferrer"><code>Scene</code></a>. 其构造函数不带参数。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">Scene</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;three&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">scene</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Scene</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#B392F0;"> { Scene } </span><span style="color:#F97583;">from</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;three&#39;</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">scene</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">new</span><span style="color:#B392F0;"> Scene();</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>场景<code>scene</code>定义了一个名为**World Space（世界空间）**的坐标系，它是我们在 three.js 中处理可见对象时的主要参考框架。世界空间是一个 <a href="https://mathinsight.org/cartesian_coordinates" target="_blank" rel="noreferrer">3D 笛卡尔坐标系</a>。</p><p>场景的中心是点(0,0,0)，也称为坐标系的<strong>原点</strong>。每当我们创建一个新对象并将其添加到我们的场景中时，它将被放置在原点，并且每当我们移动它时，我们说的都是在这个坐标系中移动它。</p><p>当我们将对象添加到场景中时，它们会被放入 <a href="http://what-when-how.com/advanced-methods-in-computer-graphics/scene-graphs-advanced-methods-in-computer-graphics-part-1/" target="_blank" rel="noreferrer"><strong>场景图中</strong></a>，这是一个树形结构，场景位于顶部。</p><h2 id="相机-指向小宇宙的望远镜" tabindex="-1">相机：指向小宇宙的望远镜 <a class="header-anchor" href="#相机-指向小宇宙的望远镜" aria-hidden="true">#</a></h2><p>场景的小宇宙是指纯数学的领域。要查看场景，我们需要打开一个进入这个领域的窗口，并将其转换为对我们人眼感觉合理的东西，这就是相机的用武之地。</p><p>有几种方法可以将场景图形转换为人类视觉友好的格式，使用称为<strong>投影</strong>的技术。对我们来说，最重要的投影类型是<strong>透视投影</strong>，它旨在匹配我们的眼睛看待世界的方式。</p><p>要使用透视投影查看场景，我们使用 <a href="https://threejs.org/docs/#api/en/cameras/PerspectiveCamera" target="_blank" rel="noreferrer"><code>PerspectiveCamera</code></a>。 这种类型的相机是现实世界中相机的 3D 等效物，并使用许多相同的概念和术语，例如视野和纵横比。与场景<code>Scene</code>不同的是，<code>PerspectiveCamera</code>构造函数有几个参数。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">PerspectiveCamera</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;three&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">fov</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">35</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// AKA Field of View</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">aspect</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">container</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">clientWidth</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">/</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">container</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">clientHeight</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">near</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0.1</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// the near clipping plane</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">far</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// the far clipping plane</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">camera</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">PerspectiveCamera</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">fov</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">aspect</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">near</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">far</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#B392F0;"> { PerspectiveCamera } </span><span style="color:#F97583;">from</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;three&#39;</span><span style="color:#B392F0;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">fov</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">35</span><span style="color:#B392F0;">; </span><span style="color:#6B737C;">// AKA Field of View</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">aspect</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">container</span><span style="color:#B392F0;">.clientWidth </span><span style="color:#F97583;">/</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">container</span><span style="color:#B392F0;">.clientHeight;</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">near</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">0.1</span><span style="color:#B392F0;">; </span><span style="color:#6B737C;">// the near clipping plane</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">far</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">100</span><span style="color:#B392F0;">; </span><span style="color:#6B737C;">// the far clipping plane</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">camera</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">new</span><span style="color:#B392F0;"> PerspectiveCamera(fov</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> aspect</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> near</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> far);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>另一种重要的投影类型是<strong>正交投影</strong>，我们可以使用 <a href="https://threejs.org/docs/#api/en/cameras/OrthographicCamera" target="_blank" rel="noreferrer"><code>OrthographicCamera</code></a>。 如果您曾经研究过工程图或蓝图，您可能会熟悉这种类型的投影，它对于创建 2D 场景或覆盖 3D 场景的用户界面很有用。在本书中，我们将使用 HTML 来创建用户界面，并使用 three.js 来创建 3D 场景，所以我们将在大部分情况下坚持使用<code>PerspectiveCamera</code>。</p><h2 id="渲染器-具有非凡才能和速度的艺术家" tabindex="-1">渲染器：具有非凡才能和速度的艺术家 <a class="header-anchor" href="#渲染器-具有非凡才能和速度的艺术家" aria-hidden="true">#</a></h2><p>如果场景是一个小宇宙，而相机是一个指向那个宇宙的望远镜，那么渲染器就是一个艺术家，他通过望远镜观察并将他们看到的东西 <em>非常快</em> 的绘制到一个<code>&lt;canvas&gt;</code>中去。 我们把这个过程叫做<strong>渲染</strong>，得到的图片就是一个渲染效果图。在本书中，我们将专门使用 <a href="https://threejs.org/docs/#api/en/renderers/WebGLRenderer" target="_blank" rel="noreferrer"><code>WebGLRenderer</code></a> —— 它使用 <a href="https://en.wikipedia.org/wiki/WebGL" target="_blank" rel="noreferrer"><strong>WebGL2</strong></a>来渲染我们的场景 （如果可用），如果不可用则回退到<strong>WebGL V1</strong>。渲染器的构造函数确实接受了几个参数，但是，如果我们不显示传入这些参数，它将使用默认值，目前这对于我们来说没问题。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">WebGLRenderer</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;three&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">renderer</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">WebGLRenderer</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#B392F0;"> { WebGLRenderer } </span><span style="color:#F97583;">from</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;three&#39;</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">renderer</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">new</span><span style="color:#B392F0;"> WebGLRenderer();</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>场景、相机和渲染器一起为我们提供了 three.js 应用程序的基本脚手架</strong>。但是，<em>一个都看不到</em>。在本章中，我们将介绍一种称为<strong>网格</strong>的可见对象。</p><h2 id="我们的第一个可见对象-网格-mesh" tabindex="-1">我们的第一个可见对象：网格 Mesh <a class="header-anchor" href="#我们的第一个可见对象-网格-mesh" aria-hidden="true">#</a></h2><p><strong><a href="https://threejs.org/docs/#api/en/objects/Mesh" target="_blank" rel="noreferrer">网格</a>是 3D 计算机图形学中最常见的可见对象</strong>，用于显示各种 3D 对象——猫、狗、人类、树木、建筑物、花卉和山脉都可以使用网格来表示。还有其他种类的可见对象，例如线条、形状、精灵和粒子等，我们将在后面的部分中看到所有这些，但在这些介绍性章节中我们将坚持使用网格。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">Mesh</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;three&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">mesh</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Mesh</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">geometry</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">material</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#B392F0;"> { Mesh } </span><span style="color:#F97583;">from</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;three&#39;</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">mesh</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">new</span><span style="color:#B392F0;"> Mesh(geometry</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> material);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>如您所见，<code>Mesh</code>构造函数有两个参数：<strong>几何</strong>和<strong>材质</strong>。在创建网格之前，我们需要创建这两个。</p><h2 id="几何体" tabindex="-1">几何体 <a class="header-anchor" href="#几何体" aria-hidden="true">#</a></h2><p><strong>几何体定义了网格的形状</strong>。我们将使用一种称为 <a href="https://threejs.org/docs/#api/en/core/BufferGeometry" target="_blank" rel="noreferrer"><code>BufferGeometry</code></a>的几何体。在这里，我们需要一个盒子形状，所以我们将使用 <a href="https://threejs.org/docs/#api/en/geometries/BoxBufferGeometry" target="_blank" rel="noreferrer"><code>BoxBufferGeometry</code></a>，它是 three.js 核心中提供的几个基本形状之一。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">BoxBufferGeometry</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;three&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">length</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">width</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">depth</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">geometry</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">BoxBufferGeometry</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">width</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">depth</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#B392F0;"> { BoxBufferGeometry } </span><span style="color:#F97583;">from</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;three&#39;</span><span style="color:#B392F0;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">length</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">2</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">width</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">2</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">depth</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">2</span><span style="color:#B392F0;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">geometry</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">new</span><span style="color:#B392F0;"> BoxBufferGeometry(length</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> width</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> depth);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>构造函数最多需要六个参数，但在这里，我们只提供前三个参数，它们指定盒子的长度、宽度和深度。默认值将被提供给我们省略的任何其他参数。</p><h2 id="材料" tabindex="-1">材料 <a class="header-anchor" href="#材料" aria-hidden="true">#</a></h2><p>虽然几何体定义了形状，<strong>但材质定义了网格表面的外观</strong>。我们将在本章中使用 <a href="https://threejs.org/docs/#api/en/materials/MeshBasicMaterial" target="_blank" rel="noreferrer"><code>MeshBasicMaterial</code></a> ，这是可用的最简单的材质，更重要的是，不需要我们在场景中添加任何灯光。现在，我们将省略所有参数，这意味着将创建默认的白色材质。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">MeshBasicMaterial</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;three&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">material</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">MeshBasicMaterial</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#B392F0;"> { MeshBasicMaterial } </span><span style="color:#F97583;">from</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;three&#39;</span><span style="color:#B392F0;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">material</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">new</span><span style="color:#B392F0;"> MeshBasicMaterial();</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="我们的第一个-three-js-应用程序" tabindex="-1">我们的第一个 three.js 应用程序 <a class="header-anchor" href="#我们的第一个-three-js-应用程序" aria-hidden="true">#</a></h2><p>现在我们准备好编写一些代码了！我们已经介绍了构成我们简单应用程序的所有组件，因此下一步是弄清楚它们如何组合在一起。我们将把这个过程分成六个步骤。您创建的每个 three.js 应用程序都需要所有这六个步骤，尽管更复杂的应用程序通常需要更多。</p><ol><li>初始设置</li><li>创建场景</li><li>创建相机</li><li>创建可见对象</li><li>创建渲染器</li><li>渲染场景</li></ol><h2 id="_1-初始设置" tabindex="-1">1. 初始设置 <a class="header-anchor" href="#_1-初始设置" aria-hidden="true">#</a></h2><p>初始设置的一个重要部分是创建某种网页来托管我们的场景，这个我们在上一章中已经介绍过。在这里，我们将专注于我们需要编写的 JavaScript。首先，我们将从 three.js 中导入必要的类，然后我们将从 <em><strong>index.html</strong></em> 文件中获取对该<code>scene-container</code>元素的引用。</p><h3 id="从-three-js-中导入类" tabindex="-1">从 three.js 中导入类 <a class="header-anchor" href="#从-three-js-中导入类" aria-hidden="true">#</a></h3><p>总结到目前为止我们介绍的所有组件，我们可以看到我们需要这些类：</p><ul><li><code>BoxBufferGeometry</code></li><li><code>Mesh</code></li><li><code>MeshBasicMaterial</code></li><li><code>PerspectiveCamera</code></li><li><code>Scene</code></li><li><code>WebGLRenderer</code></li></ul><p>我们还将使用<code>Color</code>类来设置场景的背景颜色：</p><ul><li><code>Color</code></li></ul><p>我们可以仅使用单个<code>import</code>语句从 three.js 核心导入我们需要的所有内容。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">BoxBufferGeometry</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">Color</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">Mesh</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">MeshBasicMaterial</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">PerspectiveCamera</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">Scene</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">WebGLRenderer</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">} </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;three&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">  BoxBufferGeometry</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  Color</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  Mesh</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  MeshBasicMaterial</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  PerspectiveCamera</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  Scene</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  WebGLRenderer</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">} </span><span style="color:#F97583;">from</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;three&#39;</span><span style="color:#B392F0;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="javascript-中访问-html-的scene-container元素" tabindex="-1">JavaScript 中访问 HTML 的<code>scene-container</code>元素 <a class="header-anchor" href="#javascript-中访问-html-的scene-container元素" aria-hidden="true">#</a></h3><p>在 <em><strong>index.html</strong></em> 中，我们创建了一个<code>scene-container</code>元素。</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">h1</span><span style="color:#ABB2BF;">&gt;Discoverthreejs.com - Your First Scene&lt;/</span><span style="color:#E06C75;">h1</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">id</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;scene-container&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">&lt;!-- Our &lt;canvas&gt; will be inserted here --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">&lt;</span><span style="color:#FFAB70;">body</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">  &lt;</span><span style="color:#FFAB70;">h1</span><span style="color:#B392F0;">&gt;Discoverthreejs.com - Your First Scene&lt;/</span><span style="color:#FFAB70;">h1</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  &lt;</span><span style="color:#FFAB70;">div</span><span style="color:#B392F0;"> id</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;scene-container&quot;</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#6B737C;">&lt;!-- Our &lt;canvas&gt; will be inserted here --&gt;</span></span>
<span class="line"><span style="color:#B392F0;">  &lt;/</span><span style="color:#FFAB70;">div</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">&lt;/</span><span style="color:#FFAB70;">body</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>渲染器会自动为我们创建一个<code>&lt;canvas&gt;</code>元素，我们将把它插入到这个容器中。通过这样做，我们可以通过使用 CSS 设置容器的大小来控制场景的大小和位置。首先，我们需要在 JavaScript 中访问容器元素，我们将使用 <a href="https://discoverthreejs.com/zh/book/appendix/dom-api-reference/#accessing-html-elements" target="_blank" rel="noreferrer"><code>document.querySelector</code></a>。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// Get a reference to the container element that will hold our scene</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">container</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">querySelector</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;#scene-container&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#6B737C;">// Get a reference to the container element that will hold our scene</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">container</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">document</span><span style="color:#B392F0;">.querySelector(</span><span style="color:#FFAB70;">&#39;#scene-container&#39;</span><span style="color:#B392F0;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="_2-创建场景" tabindex="-1">2.创建场景 <a class="header-anchor" href="#_2-创建场景" aria-hidden="true">#</a></h2><p>设置好之后，我们将从创建场景开始，我们自己的小宇宙。我们将使用 <a href="https://threejs.org/docs/#api/scenes/Scene" target="_blank" rel="noreferrer"><code>Scene</code></a>构造函数（带有大写的“S”）来创建一个<code>scene</code>实例（带有小写的“s”）：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// create a Scene</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">scene</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Scene</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#6B737C;">// create a Scene</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">scene</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">new</span><span style="color:#B392F0;"> Scene();</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="设置场景的背景颜色" tabindex="-1">设置场景的背景颜色 <a class="header-anchor" href="#设置场景的背景颜色" aria-hidden="true">#</a></h3><p>接下来，我们将 <a href="https://threejs.org/docs/#api/en/scenes/Scene.background" target="_blank" rel="noreferrer">场景背景的颜色 </a>更改为天蓝色。如果我们不这样做，将使用默认颜色，即黑色。我们将使用我们在上面导入的<code>Color</code>类，将字符串<code>&#39;skyblue&#39;</code>作为参数传递给构造函数：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// Set the background color</span></span>
<span class="line"><span style="color:#E5C07B;">scene</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">background</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Color</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;skyblue&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#6B737C;">// Set the background color</span></span>
<span class="line"><span style="color:#79B8FF;">scene</span><span style="color:#B392F0;">.background </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">new</span><span style="color:#B392F0;"> Color(</span><span style="color:#FFAB70;">&#39;skyblue&#39;</span><span style="color:#B392F0;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><code>&#39;skyblue&#39;</code>是一个 <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/color_value" target="_blank" rel="noreferrer">CSS 颜色名称</a>，我们可以在这里使用全部 140 种命名颜色中的任何一种。当然，不仅限于使用这几种颜色。您可以使用您的显示器可以显示的任何颜色，并且有几种指定它们的方法，就像在 CSS 中一样。</p><h2 id="_3-创建相机" tabindex="-1">3.创建相机 <a class="header-anchor" href="#_3-创建相机" aria-hidden="true">#</a></h2><p>在 three.js 核心中有几个不同的相机可用，但正如我们上面讨论的，我们将主要使用 <a href="https://threejs.org/docs/#api/cameras/PerspectiveCamera" target="_blank" rel="noreferrer"><code>PerspectiveCamera</code></a>，因为它绘制的场景视图看起来类似于我们的眼睛看到的真实世界。<code>PerspectiveCamera</code>构造函数有四个参数：</p><ol><li><code>fov</code>，<strong>视野</strong>：相机的视野有多宽，以度为单位。</li><li><code>aspect</code>，<strong>纵横比</strong>：场景的宽度与高度的比率。</li><li><code>near</code>, <strong>近剪裁平面</strong>：任何比这更靠近相机的东西都是不可见的。</li><li><code>far</code>，<strong>远剪裁平面</strong>：任何比这更远离相机的东西都是不可见的。</li></ol><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// Create a camera</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">fov</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">35</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// AKA Field of View</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">aspect</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">container</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">clientWidth</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">/</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">container</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">clientHeight</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">near</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0.1</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// the near clipping plane</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">far</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">// the far clipping plane</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">camera</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">PerspectiveCamera</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">fov</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">aspect</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">near</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">far</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#6B737C;">// Create a camera</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">fov</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">35</span><span style="color:#B392F0;">; </span><span style="color:#6B737C;">// AKA Field of View</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">aspect</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">container</span><span style="color:#B392F0;">.clientWidth </span><span style="color:#F97583;">/</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">container</span><span style="color:#B392F0;">.clientHeight;</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">near</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">0.1</span><span style="color:#B392F0;">; </span><span style="color:#6B737C;">// the near clipping plane</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">far</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">100</span><span style="color:#B392F0;">; </span><span style="color:#6B737C;">// the far clipping plane</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">camera</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">new</span><span style="color:#B392F0;"> PerspectiveCamera(fov</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> aspect</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> near</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> far);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>这四个参数一起用于创建一个有边界的空间区域，我们称之为 <a href="https://en.wikipedia.org/wiki/Viewing_frustum" target="_blank" rel="noreferrer"><strong>视锥体</strong></a>。</p><h3 id="相机的视锥体" tabindex="-1">相机的视锥体 <a class="header-anchor" href="#相机的视锥体" aria-hidden="true">#</a></h3><p>如果<code>scene</code>是一个微小的宇宙，永远向四面八方延伸，那么相机的视锥体就是我们可以看到的部分。<em>视锥体</em> 是一个数学术语，意思是一个顶部被切掉的四边矩形金字塔。当我们通过<code>PerspectiveCamera</code>查看场景时，视锥体内的一切都是可见的，而它外面的一切都是不可见的。</p><p>我们传递给构造函数的四个参数<code>PerspectiveCamera</code>分别创建视锥体的一个方面：</p><ol><li><strong>视野</strong>定义了视锥体扩展的角度。窄视场将产生窄视锥体，宽视场将产生宽视锥体。</li><li><strong>纵横比</strong>将视锥体与场景容器元素匹配。当我们将其设置为容器的宽度除以其高度时，我们确保视锥体的矩形底座可以扩展以完全适合容器。如果我们弄错了这个值，场景看起来会变得拉伸和模糊。</li><li><strong>近剪切平面</strong>定义视锥体的小端（最靠近相机的点）。</li><li><strong>远剪裁平面</strong>定义视锥体的大端（离相机最远的点）。</li></ol><p>渲染器不会绘制场景中不在视锥体内的任何对象。如果物体部分在视锥体内，部分在视锥体外，则外部部分将被砍掉（剪裁）。</p><h3 id="定位相机" tabindex="-1">定位相机 <a class="header-anchor" href="#定位相机" aria-hidden="true">#</a></h3><p>我们创建的每个对象最初都位于场景的中心，(0,0,0)。 这意味着我们的相机当前位于(0,0,0)，我们添加到场景中的任何对象也将定位在(0,0,0), 都在彼此之上混杂在一起。艺术性地放置相机是一项重要的技能，但是，现在，我们将简单地将其移回（ <em>朝向我们</em> ）以给我们一个场景的概览。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">camera</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">PerspectiveCamera</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">fov</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">aspect</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">near</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">far</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// every object is initially created at ( 0, 0, 0 )</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// move the camera back so we can view the scene</span></span>
<span class="line"><span style="color:#E5C07B;">camera</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">position</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">set</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">camera</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">new</span><span style="color:#B392F0;"> PerspectiveCamera(fov</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> aspect</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> near</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> far);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">// every object is initially created at ( 0, 0, 0 )</span></span>
<span class="line"><span style="color:#6B737C;">// move the camera back so we can view the scene</span></span>
<span class="line"><span style="color:#79B8FF;">camera</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">position</span><span style="color:#B392F0;">.set(</span><span style="color:#F8F8F8;">0</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">0</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">10</span><span style="color:#B392F0;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>设置任何对象的位置的方法都是一样的，无论是相机，网格，灯还是其他任何东西。我们可以一次设置位置的所有三个组成部分，就像我们在这里所做的那样：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">camera</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">position</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">set</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#79B8FF;">camera</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">position</span><span style="color:#B392F0;">.set(</span><span style="color:#F8F8F8;">0</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">0</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">10</span><span style="color:#B392F0;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>或者，我们可以单独设置 X，Y 和 Z 轴：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">camera</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">position</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">x</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">camera</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">position</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">y</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">camera</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">position</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">z</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#79B8FF;">camera</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">position</span><span style="color:#B392F0;">.x </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">0</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#79B8FF;">camera</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">position</span><span style="color:#B392F0;">.y </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">0</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#79B8FF;">camera</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">position</span><span style="color:#B392F0;">.z </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">10</span><span style="color:#B392F0;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>两种设置位置的方式都会给出相同的结果。位置存储在一个 <a href="https://threejs.org/docs/#api/en/math/Vector3" target="_blank" rel="noreferrer"><code>Vector3</code></a>，一个表示 3D 向量的 three.js 类中。</p><h2 id="_4-创建一个可见对象" tabindex="-1">4.创建一个可见对象 <a class="header-anchor" href="#_4-创建一个可见对象" aria-hidden="true">#</a></h2><p>我们创建了一个<code>camera</code>用来查看事物，以及一个<code>scene</code>用来把它们放进去。下一步是创建我们可以看到的东西。在这里，我们将创建一个简单的盒子形状 <a href="https://threejs.org/docs/#api/objects/Mesh" target="_blank" rel="noreferrer"><code>Mesh</code></a>。正如我们上面提到的，网格有两个我们需要首先创建的子组件：几何体和材质。</p><h3 id="创建几何体" tabindex="-1">创建几何体 <a class="header-anchor" href="#创建几何体" aria-hidden="true">#</a></h3><p>网格的几何定义了它的形状。如果我们创建一个盒子形状的几何体（就像我们在这里所做的那样），我们的网格将被塑造成一个盒子。如果我们创建一个球形几何体，我们的网格将呈球体形状。如果我们创建一个猫形几何体，我们的网格将被塑造成一只猫……你明白了。在这里，我们使用 <a href="https://threejs.org/docs/#api/geometries/BoxBufferGeometry" target="_blank" rel="noreferrer"><code>BoxBufferGeometry</code></a>。 这三个参数定义了盒子的宽度、高度和深度：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// create a geometry</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">geometry</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">BoxBufferGeometry</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#6B737C;">// create a geometry</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">geometry</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">new</span><span style="color:#B392F0;"> BoxBufferGeometry(</span><span style="color:#F8F8F8;">2</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">2</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">2</span><span style="color:#B392F0;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>大多数参数都有默认值，因此即使文档说<code>BoxBufferGeometry</code>应该采用六个参数，我们也可以省略大部分参数，而 three.js 将使用默认值填充空白。<strong>我们不必传入任何参数</strong>。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">geometry</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">BoxBufferGeometry</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">geometry</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">new</span><span style="color:#B392F0;"> BoxBufferGeometry();</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>如果我们省略所有参数，我们将得到一个默认框，它是1×1×1立方体。我们想要一个更大的立方体，所以我们传入上面的参数来创建一个2×2×2盒子。</p><h3 id="创建材质" tabindex="-1">创建材质 <a class="header-anchor" href="#创建材质" aria-hidden="true">#</a></h3><p>材料定义了对象的表面属性，或者换句话说，定义了对象看起来是由什么制成的。<strong>几何体告诉我们网格是一个盒子、一辆汽车或一只猫，而材质告诉我们它是一个金属盒子、一辆石质汽车或一只涂成红色的猫</strong>。</p><p>在 three.js 中有不少资料。在这里，我们将创建一个 <a href="https://threejs.org/docs/#api/en/materials/MeshBasicMaterial" target="_blank" rel="noreferrer"><code>MeshBasicMaterial</code></a>，这是可用的最简单（也是最快）的材料类型。此材质还会忽略场景中的任何灯光，并根据材质的颜色和其他设置为网格着色（阴影），这非常棒，因为我们还没有添加任何灯光。我们将在不向构造函数传递任何参数的情况下创建材质，因此我们将获得默认的白色材质。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// create a default (white) Basic material</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">material</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">MeshBasicMaterial</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#6B737C;">// create a default (white) Basic material</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">material</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">new</span><span style="color:#B392F0;"> MeshBasicMaterial();</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>如果我们现在使用除<code>MeshBasicMaterial</code>之外的几乎任何其他材质类型，我们将无法看到任何东西，因为场景完全处于黑暗中。<strong>就像在现实世界中一样，我们通常需要光线才能看到场景中的事物</strong>。<code>MeshBasicMaterial</code>是该规则的一个例外。</p><p>对于 three.js 的新手来说，这是一个常见的混淆点，所以如果您看不到任何东西，请确保您已经在场景中添加了一些灯光，或者暂时将所有材质切换为<code>MeshBasicMaterial</code>。</p><p>现在我们有了几何体和材质，我们可以创建我们的网格，将两者都作为参数传入。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// create a geometry</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">geometry</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">BoxBufferGeometry</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// create a default (white) Basic material</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">material</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">MeshBasicMaterial</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// create a Mesh containing the geometry and material</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">cube</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Mesh</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">geometry</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">material</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#6B737C;">// create a geometry</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">geometry</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">new</span><span style="color:#B392F0;"> BoxBufferGeometry(</span><span style="color:#F8F8F8;">2</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">2</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">2</span><span style="color:#B392F0;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">// create a default (white) Basic material</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">material</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">new</span><span style="color:#B392F0;"> MeshBasicMaterial();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">// create a Mesh containing the geometry and material</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">cube</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">new</span><span style="color:#B392F0;"> Mesh(geometry</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> material);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>之后，我们可以随时使用<code>mesh.geometry</code>和<code>mesh.material</code>访问几何体和材质。</p><h3 id="将网格添加到场景中" tabindex="-1">将网格添加到场景中 <a class="header-anchor" href="#将网格添加到场景中" aria-hidden="true">#</a></h3><p>创建完成<code>mesh</code>后，我们需要将其添加到场景中。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// add the mesh to the scene</span></span>
<span class="line"><span style="color:#E5C07B;">scene</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">cube</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#6B737C;">// add the mesh to the scene</span></span>
<span class="line"><span style="color:#79B8FF;">scene</span><span style="color:#B392F0;">.add(cube);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>稍后，如果我们想删除它，我们可以使用<code>scene.remove(mesh)</code>。 一旦网格被添加到场景中，我们称网格为场景的子节点，我们称场景为网格的父节点。</p><h2 id="_5-创建渲染器" tabindex="-1">5. 创建渲染器 <a class="header-anchor" href="#_5-创建渲染器" aria-hidden="true">#</a></h2><p>我们这个简单应用程序的最后一个组件是渲染器，它负责将场景绘制（<strong>渲染</strong>）到<code>&lt;canvas&gt;</code>元素中。我们将在这里使用 <a href="https://threejs.org/docs/#api/renderers/WebGLRenderer" target="_blank" rel="noreferrer"><code>WebGLRenderer</code></a>。还有一些其他渲染器可用作插件，但<code>WebGLRenderer</code>是迄今为止最强大的渲染器，通常是您唯一需要的渲染器。让我们现在继续创建一个<code>WebGLRenderer</code>，再次使用默认设置。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// create the renderer</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">renderer</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">WebGLRenderer</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#6B737C;">// create the renderer</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">renderer</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">new</span><span style="color:#B392F0;"> WebGLRenderer();</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="设置渲染器的大小" tabindex="-1">设置渲染器的大小 <a class="header-anchor" href="#设置渲染器的大小" aria-hidden="true">#</a></h3><p>我们快到完成了！接下来，我们需要使用容器的宽度和高度告诉渲染器我们的场景大小。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// next, set the renderer to the same size as our container element</span></span>
<span class="line"><span style="color:#E5C07B;">renderer</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setSize</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">container</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">clientWidth</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">container</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">clientHeight</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#6B737C;">// next, set the renderer to the same size as our container element</span></span>
<span class="line"><span style="color:#79B8FF;">renderer</span><span style="color:#B392F0;">.setSize(</span><span style="color:#79B8FF;">container</span><span style="color:#B392F0;">.clientWidth</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">container</span><span style="color:#B392F0;">.clientHeight);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>如果你还记得，我们使用 CSS 使容器占据了整个浏览器窗口的大小，因此场景也将占据整个窗口。</p><h3 id="设置设备像素比-dpr" tabindex="-1">设置设备像素比（DPR） <a class="header-anchor" href="#设置设备像素比-dpr" aria-hidden="true">#</a></h3><p>我们还需要告诉渲染器设备屏幕的像素比是多少。<strong>这是防止 HiDPI 显示器模糊所必需的</strong> （也称为视网膜显示器）</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// finally, set the pixel ratio so that our scene will look good on HiDPI displays</span></span>
<span class="line"><span style="color:#E5C07B;">renderer</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setPixelRatio</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">window</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">devicePixelRatio</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#6B737C;">// finally, set the pixel ratio so that our scene will look good on HiDPI displays</span></span>
<span class="line"><span style="color:#79B8FF;">renderer</span><span style="color:#B392F0;">.setPixelRatio(</span><span style="color:#79B8FF;">window</span><span style="color:#B392F0;">.devicePixelRatio);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>我们不会在这里讨论技术细节，但你不能忘记设置它，否则你的场景在你测试它的笔记本电脑上可能看起来很棒，但在带有视网膜显示器的移动设备上会模糊。与往常一样， <a href="https://discoverthreejs.com/zh/book/appendix/dom-api-reference/#the-virtual-viewport" target="_blank" rel="noreferrer">附录有更多细节</a>。</p><h3 id="将-canvas-元素添加到我们的页面" tabindex="-1">将<code>&lt;canvas&gt;</code>元素添加到我们的页面 <a class="header-anchor" href="#将-canvas-元素添加到我们的页面" aria-hidden="true">#</a></h3><p>渲染器将 从相机的角度将我们的场景绘制到一个<code>&lt;canvas&gt;</code>元素中去。这个元素已经为我们自动创建并存储在<code>renderer.domElement</code>中，但是在我们看到它之前，我们需要将它添加到页面中。我们将使用一个 <a href="https://discoverthreejs.com/zh/book/appendix/dom-api-reference/#adding-the-new-elements-to-our-page" target="_blank" rel="noreferrer">名为<code>.append</code>的内置 JavaScript 方法</a>来做到这一点：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// add the automatically created &lt;canvas&gt; element to the page</span></span>
<span class="line"><span style="color:#E5C07B;">container</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">append</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">renderer</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">domElement</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#6B737C;">// add the automatically created &lt;canvas&gt; element to the page</span></span>
<span class="line"><span style="color:#79B8FF;">container</span><span style="color:#B392F0;">.append(</span><span style="color:#79B8FF;">renderer</span><span style="color:#B392F0;">.domElement);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>现在，如果您打开浏览器的开发控制台（按 F12）并检查 HTML，您将看到如下内容：</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">id</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;scene-container&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">canvas</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#D19A66;">width</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;800&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#D19A66;">height</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;600&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#D19A66;">style</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;width: 800px; height: 600px;&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &gt;&lt;/</span><span style="color:#E06C75;">canvas</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">&lt;</span><span style="color:#FFAB70;">div</span><span style="color:#B392F0;"> id</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;scene-container&quot;</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">  &lt;</span><span style="color:#FFAB70;">canvas</span></span>
<span class="line"><span style="color:#B392F0;">    width</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;800&quot;</span></span>
<span class="line"><span style="color:#B392F0;">    height</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;600&quot;</span></span>
<span class="line"><span style="color:#B392F0;">    style</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;width: 800px; height: 600px;&quot;</span></span>
<span class="line"><span style="color:#B392F0;">  &gt;&lt;/</span><span style="color:#FFAB70;">canvas</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">&lt;/</span><span style="color:#FFAB70;">div</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>这假设浏览器窗口大小为 800×600, 所以你看到的可能看起来略有不同。请注意，<code>renderer.setSize</code>它还设置了画布上的宽度、高度和样式属性。</p><h2 id="_6-渲染场景" tabindex="-1">6. 渲染场景 <a class="header-anchor" href="#_6-渲染场景" aria-hidden="true">#</a></h2><p>一切就绪后，剩下要做的就是<strong>渲染场景！</strong>，将以下也是最后一行添加到您的代码中：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// render, or &#39;create a still image&#39;, of the scene</span></span>
<span class="line"><span style="color:#E5C07B;">renderer</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">render</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">scene</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">camera</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#6B737C;">// render, or &#39;create a still image&#39;, of the scene</span></span>
<span class="line"><span style="color:#79B8FF;">renderer</span><span style="color:#B392F0;">.render(scene</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> camera);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>通过这一行，我们告诉渲染器使用相机创建场景的静态图片并将该图片输出到<code>&lt;canvas&gt;</code>元素中。如果一切设置正确，您将看到蓝色背景下的白色立方体。很难看出它是一个立方体，因为我们直接看的是一个正方形的脸，但我们将在接下来的几章中解决这个问题。</p><p>做得好！<strong>读完这一章，您已经迈出了作为 three.js 开发人员职业生涯的第一次巨大飞跃</strong>。我们的场景可能还没有那么有趣，但我们已经奠定了一些重要的基础，并涵盖了计算机图形学的一些基本概念，您将在以后构建的每个场景中使用这些概念，无论您使用的是 three.js 还是任何其他 3D 图形系统。</p>`,174),o=[p];function r(t,c,B,i,y,F){return n(),a("div",null,o)}const b=s(e,[["render",r]]);export{h as __pageData,b as default};
