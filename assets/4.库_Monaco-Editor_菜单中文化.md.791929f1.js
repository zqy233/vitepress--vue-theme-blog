import{_ as s,o as n,c as a,a as l}from"./app.bfa9bd4b.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"monaco-editor的vite汉化插件vite-plugin-monaco-editor-nls","slug":"monaco-editor的vite汉化插件vite-plugin-monaco-editor-nls","link":"#monaco-editor的vite汉化插件vite-plugin-monaco-editor-nls","children":[]},{"level":2,"title":"插件需要修改代码","slug":"插件需要修改代码","link":"#插件需要修改代码","children":[]},{"level":2,"title":"修改后的完整插件代码","slug":"修改后的完整插件代码","link":"#修改后的完整插件代码","children":[]},{"level":2,"title":"更新插件的中文json","slug":"更新插件的中文json","link":"#更新插件的中文json","children":[]},{"level":2,"title":"找到vscode仓库中vscode/src/vs/nls.ts文件","slug":"找到vscode仓库中vscode-src-vs-nls-ts文件","link":"#找到vscode仓库中vscode-src-vs-nls-ts文件","children":[]}],"relativePath":"4.库/Monaco-Editor/菜单中文化.md","lastUpdated":1720835436698}'),p={name:"4.库/Monaco-Editor/菜单中文化.md"},o=l(`<h2 id="monaco-editor的vite汉化插件vite-plugin-monaco-editor-nls" tabindex="-1">monaco-editor的vite汉化插件vite-plugin-monaco-editor-nls <a class="header-anchor" href="#monaco-editor的vite汉化插件vite-plugin-monaco-editor-nls" aria-hidden="true">#</a></h2><p><a href="https://github.com/pearone/vite-plugin-monaco-editor-nls" target="_blank" rel="noreferrer">vite-plugin-monaco-editor-nls</a>原理是通过vite插件钩子，在开发和打包时修改了<code>monaco-editor</code>里的一些代码。</p><p>而修改的这部分<code>monaco-editor</code>代码，又来自<code>monaco-editor</code>在开发环境通过npm的方式引入的<code>monaco-editor-core</code>包：<code>monaco-editor-core</code>包是基于<a href="https://github.dev/microsoft/vscode" target="_blank" rel="noreferrer">vscode</a>仓库中的代码打包的编辑器核心代码。</p><p>所以最终来看，vite汉化插件修改的其实是vscode仓库中一部分代码，这部分代码在<code>/src/vs/nls.ts</code>文件中，所以可以找到<a href="https://github.dev/microsoft/vscode" target="_blank" rel="noreferrer">vscode</a>仓库中的<code>/src/vs/nls.ts</code>文件，查看其原始代码。</p><h2 id="插件需要修改代码" tabindex="-1">插件需要修改代码 <a class="header-anchor" href="#插件需要修改代码" aria-hidden="true">#</a></h2><p>插件本身两年未维护了，直接使用会有问题，但是最近有提交，参考最新贡献代码复制代码直接使用</p><p><a href="https://github.com/shaoerkuai/vite-plugin-monaco-editor-nls/tree/master" target="_blank" rel="noreferrer">https://github.com/shaoerkuai/vite-plugin-monaco-editor-nls/tree/master</a></p><p><a href="https://juejin.cn/post/7370132224711098395" target="_blank" rel="noreferrer">https://juejin.cn/post/7370132224711098395</a> 参考这篇掘金文章，应该同贡献者是一人</p><h2 id="修改后的完整插件代码" tabindex="-1">修改后的完整插件代码 <a class="header-anchor" href="#修改后的完整插件代码" aria-hidden="true">#</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">fs</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;fs&#39;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;path&#39;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">Plugin</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;vite&#39;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">MagicString</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;magic-string&#39;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">Plugin</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">EsbuildPlugin</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;esbuild&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">enum</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Languages</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">bg</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;bg&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">cs</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;cs&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">de</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;de&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">en_gb</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;en-gb&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">es</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;es&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">fr</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;fr&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">hu</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;hu&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">id</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;id&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">it</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;it&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">ja</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;ja&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">ko</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;ko&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">nl</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;nl&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">pl</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;pl&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">ps</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;ps&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">pt_br</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;pt-br&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">ru</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;ru&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">tr</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;tr&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">uk</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;uk&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">zh_hans</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;zh-hans&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">zh_hant</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;zh-hant&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">interface</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Options</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">locale</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Languages</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">localeData</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Record</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">any</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 在vite中dev模式下会使用esbuild对node_modules进行预编译，导致找不到映射表中的filepath，</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 需要在预编译之前进行替换</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E06C75;font-style:italic;">options</span><span style="color:#7F848E;font-style:italic;"> 替换语言包</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@returns</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">esbuildPluginMonacoEditorNls</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;font-style:italic;">options</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Options</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">locale</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Languages</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">en_gb</span><span style="color:#ABB2BF;"> }</span></span>
<span class="line"><span style="color:#ABB2BF;">): </span><span style="color:#E5C07B;">EsbuildPlugin</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">CURRENT_LOCALE_DATA</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">getLocalizeMapping</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">options</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">locale</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">options</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">localeData</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;esbuild-plugin-monaco-editor-nls&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">setup</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">build</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E5C07B;">build</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onLoad</span><span style="color:#ABB2BF;">({ </span><span style="color:#E06C75;">filter</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /esm</span><span style="color:#D19A66;">[</span><span style="color:#56B6C2;">\\\\</span><span style="color:#D19A66;">/]</span><span style="color:#E06C75;">vs</span><span style="color:#D19A66;">[</span><span style="color:#56B6C2;">\\\\</span><span style="color:#D19A66;">/]</span><span style="color:#E06C75;">nls</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">js/</span><span style="color:#ABB2BF;"> }, </span><span style="color:#C678DD;">async</span><span style="color:#ABB2BF;"> () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">          </span><span style="color:#E06C75;">contents</span><span style="color:#ABB2BF;">: </span><span style="color:#61AFEF;">getLocalizeCode</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">CURRENT_LOCALE_DATA</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">          </span><span style="color:#E06C75;">loader</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;js&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">      })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E5C07B;">build</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onLoad</span><span style="color:#ABB2BF;">({ </span><span style="color:#E06C75;">filter</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /monaco-editor</span><span style="color:#D19A66;">[</span><span style="color:#56B6C2;">\\\\</span><span style="color:#D19A66;">/]</span><span style="color:#E06C75;">esm</span><span style="color:#D19A66;">[</span><span style="color:#56B6C2;">\\\\</span><span style="color:#D19A66;">/]</span><span style="color:#E06C75;">vs.</span><span style="color:#D19A66;">+</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">js/</span><span style="color:#ABB2BF;"> }, </span><span style="color:#C678DD;">async</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">          </span><span style="color:#E06C75;">contents</span><span style="color:#ABB2BF;">: </span><span style="color:#61AFEF;">transformLocalizeFuncCode</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">args</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">CURRENT_LOCALE_DATA</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">          </span><span style="color:#E06C75;">loader</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;js&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">      })</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 使用了monaco-editor-nls的语言映射包，把原始localize(data, message)的方法，替换成了localize(path, data, defaultMessage)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * vite build 模式下，使用rollup处理</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E06C75;font-style:italic;">options</span><span style="color:#7F848E;font-style:italic;"> 替换语言包</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@returns</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">default</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">MonacoEditorNlsPlugin</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;font-style:italic;">options</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Options</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">locale</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Languages</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">en_gb</span><span style="color:#ABB2BF;"> }</span></span>
<span class="line"><span style="color:#ABB2BF;">): </span><span style="color:#E5C07B;">Plugin</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">CURRENT_LOCALE_DATA</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">getLocalizeMapping</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">options</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">locale</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">options</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">localeData</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;rollup-plugin-monaco-editor-nls&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">enforce</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;pre&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">load</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">filepath</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">/esm</span><span style="color:#D19A66;">[</span><span style="color:#56B6C2;">\\\\</span><span style="color:#D19A66;">/]</span><span style="color:#E06C75;">vs</span><span style="color:#D19A66;">[</span><span style="color:#56B6C2;">\\\\</span><span style="color:#D19A66;">/]</span><span style="color:#E06C75;">nls</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">js/</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">filepath</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">getLocalizeCode</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">CURRENT_LOCALE_DATA</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">transform</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">code</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">filepath</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E06C75;">/monaco-editor</span><span style="color:#D19A66;">[</span><span style="color:#56B6C2;">\\\\</span><span style="color:#D19A66;">/]</span><span style="color:#E06C75;">esm</span><span style="color:#D19A66;">[</span><span style="color:#56B6C2;">\\\\</span><span style="color:#D19A66;">/]</span><span style="color:#E06C75;">vs.</span><span style="color:#D19A66;">+</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">js/</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">filepath</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">&amp;&amp;</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#56B6C2;">!</span><span style="color:#E06C75;">/esm</span><span style="color:#D19A66;">[</span><span style="color:#56B6C2;">\\\\</span><span style="color:#D19A66;">/]</span><span style="color:#E06C75;">vs</span><span style="color:#D19A66;">[</span><span style="color:#56B6C2;">\\\\</span><span style="color:#D19A66;">/]</span><span style="color:#E06C75;">.</span><span style="color:#D19A66;">*</span><span style="color:#E06C75;">nls</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">js/</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">test</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">filepath</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">      ) {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">CURRENT_LOCALE_DATA</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">re</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> /(?:monaco-editor</span><span style="color:#D19A66;">[/</span><span style="color:#56B6C2;">\\\\</span><span style="color:#D19A66;">]</span><span style="color:#E06C75;">esm</span><span style="color:#D19A66;">[/</span><span style="color:#56B6C2;">\\\\</span><span style="color:#D19A66;">]</span><span style="color:#E06C75;">)(.</span><span style="color:#D19A66;">+</span><span style="color:#E06C75;">)(?=</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">js)/</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">re</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">exec</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">filepath</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">&amp;&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">code</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">includes</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;localize(&#39;</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#ABB2BF;">          </span><span style="color:#C678DD;">let</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">RegExp</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">$1</span></span>
<span class="line"><span style="color:#ABB2BF;">          </span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">replaceAll</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;</span><span style="color:#56B6C2;">\\\\</span><span style="color:#98C379;">&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;/&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">          </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">JSON</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">parse</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">CURRENT_LOCALE_DATA</span><span style="color:#ABB2BF;">)[</span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;">]) {</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E06C75;">code</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">code</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">replace</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">/localize</span><span style="color:#56B6C2;">\\(</span><span style="color:#E06C75;">/</span><span style="color:#C678DD;">g</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">\`localize(&quot;</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">path</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">&quot;, \`</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E06C75;">code</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">code</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">replace</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">/localize2</span><span style="color:#56B6C2;">\\(</span><span style="color:#E06C75;">/</span><span style="color:#C678DD;">g</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">\`localize2(&#39;</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">path</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">&#39;, \`</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">          }</span></span>
<span class="line"><span style="color:#ABB2BF;">          </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E06C75;">code</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">code</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#7F848E;font-style:italic;">/** 使用magic-string 生成 source map */</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E06C75;">map</span><span style="color:#ABB2BF;">: </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">MagicString</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">code</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">generateMap</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#ABB2BF;">              </span><span style="color:#E06C75;">includeContent</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">              </span><span style="color:#E06C75;">hires</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">              </span><span style="color:#E06C75;">source</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">filepath</span></span>
<span class="line"><span style="color:#ABB2BF;">            })</span></span>
<span class="line"><span style="color:#ABB2BF;">          }</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 替换调用方法接口参数，替换成相应语言包语言</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E06C75;font-style:italic;">filepath</span><span style="color:#7F848E;font-style:italic;"> 路径</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E06C75;font-style:italic;">CURRENT_LOCALE_DATA</span><span style="color:#7F848E;font-style:italic;"> 替换规则</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@returns</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">transformLocalizeFuncCode</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">filepath</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">CURRENT_LOCALE_DATA</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">let</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">code</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">fs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">readFileSync</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">filepath</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;utf8&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">re</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> /(?:monaco-editor</span><span style="color:#D19A66;">[</span><span style="color:#56B6C2;">\\\\</span><span style="color:#D19A66;">/]</span><span style="color:#E06C75;">esm</span><span style="color:#D19A66;">[</span><span style="color:#56B6C2;">\\\\</span><span style="color:#D19A66;">/]</span><span style="color:#E06C75;">)(.</span><span style="color:#D19A66;">+</span><span style="color:#E06C75;">)(?=</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">js)/</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">re</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">exec</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">filepath</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">let</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">RegExp</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">$1</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">replaceAll</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;</span><span style="color:#56B6C2;">\\\\</span><span style="color:#98C379;">&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;/&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">code</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">code</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">replace</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">/localize</span><span style="color:#56B6C2;">\\(</span><span style="color:#E06C75;">/</span><span style="color:#C678DD;">g</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">\`localize(&#39;</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">path</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">&#39;, \`</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">code</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">code</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">replace</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">/localize2</span><span style="color:#56B6C2;">\\(</span><span style="color:#E06C75;">/</span><span style="color:#C678DD;">g</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">\`localize2(&#39;</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">path</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">&#39;, \`</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">code</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 获取语言包</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E06C75;font-style:italic;">locale</span><span style="color:#7F848E;font-style:italic;"> 语言</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E06C75;font-style:italic;">localeData</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@returns</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">getLocalizeMapping</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;font-style:italic;">locale</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Languages</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;font-style:italic;">localeData</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Record</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">any</span><span style="color:#ABB2BF;">&gt; | undefined </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">undefined</span></span>
<span class="line"><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">localeData</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">JSON</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">stringify</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">localeData</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">locale_data_path</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">join</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">\`./locale/</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">locale</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">.json\`</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">fs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">readFileSync</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">locale_data_path</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">unknown</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">string</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 替换代码</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E06C75;font-style:italic;">CURRENT_LOCALE_DATA</span><span style="color:#7F848E;font-style:italic;"> 语言包</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@returns</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">getLocalizeCode</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">CURRENT_LOCALE_DATA</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">\`</span></span>
<span class="line"><span style="color:#98C379;">/*---------------------------------------------------------------------------------------------</span></span>
<span class="line"><span style="color:#98C379;"> *  Copyright (c) Microsoft Corporation. All rights reserved.</span></span>
<span class="line"><span style="color:#98C379;"> *  Licensed under the MIT License. See License.txt in the project root for license information.</span></span>
<span class="line"><span style="color:#98C379;"> *--------------------------------------------------------------------------------------------*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#98C379;">let isPseudo = (typeof document !== &#39;undefined&#39; &amp;&amp; document.location &amp;&amp; document.location.hash.indexOf(&#39;pseudo=true&#39;) &gt;= 0);</span></span>
<span class="line"><span style="color:#98C379;">const DEFAULT_TAG = &#39;i-default&#39;;</span></span>
<span class="line"><span style="color:#98C379;">function _format(message, args) {</span></span>
<span class="line"><span style="color:#98C379;">    let result;</span></span>
<span class="line"><span style="color:#98C379;">    if (args.length === 0) {</span></span>
<span class="line"><span style="color:#98C379;">        result = message;</span></span>
<span class="line"><span style="color:#98C379;">    }</span></span>
<span class="line"><span style="color:#98C379;">    else {</span></span>
<span class="line"><span style="color:#98C379;">        result = message.replace(/</span><span style="color:#56B6C2;">\\\\</span><span style="color:#98C379;">{(</span><span style="color:#56B6C2;">\\\\</span><span style="color:#98C379;">d+)</span><span style="color:#56B6C2;">\\\\</span><span style="color:#98C379;">}/g, (match, rest) =&gt; {</span></span>
<span class="line"><span style="color:#98C379;">            const index = rest[0];</span></span>
<span class="line"><span style="color:#98C379;">            const arg = args[index];</span></span>
<span class="line"><span style="color:#98C379;">            let result = match;</span></span>
<span class="line"><span style="color:#98C379;">            if (typeof arg === &#39;string&#39;) {</span></span>
<span class="line"><span style="color:#98C379;">                result = arg;</span></span>
<span class="line"><span style="color:#98C379;">            }</span></span>
<span class="line"><span style="color:#98C379;">            else if (typeof arg === &#39;number&#39; || typeof arg === &#39;boolean&#39; || arg === void 0 || arg === null) {</span></span>
<span class="line"><span style="color:#98C379;">                result = String(arg);</span></span>
<span class="line"><span style="color:#98C379;">            }</span></span>
<span class="line"><span style="color:#98C379;">            return result;</span></span>
<span class="line"><span style="color:#98C379;">        });</span></span>
<span class="line"><span style="color:#98C379;">    }</span></span>
<span class="line"><span style="color:#98C379;">    if (isPseudo) {</span></span>
<span class="line"><span style="color:#98C379;">        // FF3B and FF3D is the Unicode zenkaku representation for [ and ]</span></span>
<span class="line"><span style="color:#98C379;">        result = &#39;</span><span style="color:#56B6C2;">\\\\</span><span style="color:#98C379;">uFF3B&#39; + result.replace(/[aouei]/g, &#39;$&amp;$&amp;&#39;) + &#39;</span><span style="color:#56B6C2;">\\\\</span><span style="color:#98C379;">uFF3D&#39;;</span></span>
<span class="line"><span style="color:#98C379;">    }</span></span>
<span class="line"><span style="color:#98C379;">    return result;</span></span>
<span class="line"><span style="color:#98C379;">}</span></span>
<span class="line"><span style="color:#98C379;">function findLanguageForModule(config, name) {</span></span>
<span class="line"><span style="color:#98C379;">    let result = config[name];</span></span>
<span class="line"><span style="color:#98C379;">    if (result) {</span></span>
<span class="line"><span style="color:#98C379;">        return result;</span></span>
<span class="line"><span style="color:#98C379;">    }</span></span>
<span class="line"><span style="color:#98C379;">    result = config[&#39;*&#39;];</span></span>
<span class="line"><span style="color:#98C379;">    if (result) {</span></span>
<span class="line"><span style="color:#98C379;">        return result;</span></span>
<span class="line"><span style="color:#98C379;">    }</span></span>
<span class="line"><span style="color:#98C379;">    return null;</span></span>
<span class="line"><span style="color:#98C379;">}</span></span>
<span class="line"><span style="color:#98C379;">function endWithSlash(path) {</span></span>
<span class="line"><span style="color:#98C379;">    if (path.charAt(path.length - 1) === &#39;/&#39;) {</span></span>
<span class="line"><span style="color:#98C379;">        return path;</span></span>
<span class="line"><span style="color:#98C379;">    }</span></span>
<span class="line"><span style="color:#98C379;">    return path + &#39;/&#39;;</span></span>
<span class="line"><span style="color:#98C379;">}</span></span>
<span class="line"><span style="color:#98C379;">async function getMessagesFromTranslationsService(translationServiceUrl, language, name) {</span></span>
<span class="line"><span style="color:#98C379;">    const url = endWithSlash(translationServiceUrl) + endWithSlash(language) + &#39;vscode/&#39; + endWithSlash(name);</span></span>
<span class="line"><span style="color:#98C379;">    const res = await fetch(url);</span></span>
<span class="line"><span style="color:#98C379;">    if (res.ok) {</span></span>
<span class="line"><span style="color:#98C379;">        const messages = await res.json();</span></span>
<span class="line"><span style="color:#98C379;">        return messages;</span></span>
<span class="line"><span style="color:#98C379;">    }</span></span>
<span class="line"><span style="color:#98C379;">    throw new Error(</span><span style="color:#56B6C2;">\\\`\\$</span><span style="color:#98C379;">{res.status} - </span><span style="color:#56B6C2;">\\$</span><span style="color:#98C379;">{res.statusText}</span><span style="color:#56B6C2;">\\\`</span><span style="color:#98C379;">);</span></span>
<span class="line"><span style="color:#98C379;">}</span></span>
<span class="line"><span style="color:#98C379;">function createScopedLocalize(scope) {</span></span>
<span class="line"><span style="color:#98C379;">    return function (idx, defaultValue) {</span></span>
<span class="line"><span style="color:#98C379;">        const restArgs = Array.prototype.slice.call(arguments, 2);</span></span>
<span class="line"><span style="color:#98C379;">        return _format(scope[idx], restArgs);</span></span>
<span class="line"><span style="color:#98C379;">    };</span></span>
<span class="line"><span style="color:#98C379;">}</span></span>
<span class="line"><span style="color:#98C379;">function createScopedLocalize2(scope) {</span></span>
<span class="line"><span style="color:#98C379;">    return (idx, defaultValue, ...args) =&gt; ({</span></span>
<span class="line"><span style="color:#98C379;">        value: _format(scope[idx], args),</span></span>
<span class="line"><span style="color:#98C379;">        original: _format(defaultValue, args)</span></span>
<span class="line"><span style="color:#98C379;">    });</span></span>
<span class="line"><span style="color:#98C379;">}</span></span>
<span class="line"><span style="color:#98C379;">// export function localize(data, message, ...args) {</span></span>
<span class="line"><span style="color:#98C379;">//     return _format(message, args);</span></span>
<span class="line"><span style="color:#98C379;">// }</span></span>
<span class="line"><span style="color:#98C379;">// ------------------------invoke----------------------------------------</span></span>
<span class="line"><span style="color:#98C379;">        export function localize(path, data, defaultMessage, ...args) {</span></span>
<span class="line"><span style="color:#98C379;">            var key = typeof data === &#39;object&#39; ? data.key : data;</span></span>
<span class="line"><span style="color:#98C379;">            var data = </span><span style="color:#C678DD;">\${</span><span style="color:#E5C07B;">CURRENT_LOCALE_DATA</span><span style="color:#C678DD;">}</span><span style="color:#98C379;"> || {};</span></span>
<span class="line"><span style="color:#98C379;">            var message = (data[path] || {})[key];</span></span>
<span class="line"><span style="color:#98C379;">            if (!message) {</span></span>
<span class="line"><span style="color:#98C379;">                message = defaultMessage;</span></span>
<span class="line"><span style="color:#98C379;">            }</span></span>
<span class="line"><span style="color:#98C379;">            return _format(message, args);</span></span>
<span class="line"><span style="color:#98C379;">        }</span></span>
<span class="line"><span style="color:#98C379;">// ------------------------invoke----------------------------------------</span></span>
<span class="line"></span>
<span class="line"><span style="color:#98C379;">export function localize2(path, data, defaultMessage, ...args) {</span></span>
<span class="line"><span style="color:#98C379;">            var key = typeof data === &#39;object&#39; ? data.key : data;</span></span>
<span class="line"><span style="color:#98C379;">            var data = </span><span style="color:#C678DD;">\${</span><span style="color:#E5C07B;">CURRENT_LOCALE_DATA</span><span style="color:#C678DD;">}</span><span style="color:#98C379;"> || {};</span></span>
<span class="line"><span style="color:#98C379;">            var message = (data[path] || {})[key];</span></span>
<span class="line"><span style="color:#98C379;">            if (!message) {</span></span>
<span class="line"><span style="color:#98C379;">                message = defaultMessage;</span></span>
<span class="line"><span style="color:#98C379;">            }</span></span>
<span class="line"><span style="color:#98C379;">            const original = _format(message, args);</span></span>
<span class="line"><span style="color:#98C379;">               return {</span></span>
<span class="line"><span style="color:#98C379;">                value: original,</span></span>
<span class="line"><span style="color:#98C379;">        original</span></span>
<span class="line"><span style="color:#98C379;">    };</span></span>
<span class="line"><span style="color:#98C379;">}</span></span>
<span class="line"><span style="color:#98C379;">export function getConfiguredDefaultLocale(_) {</span></span>
<span class="line"><span style="color:#98C379;">    // This returns undefined because this implementation isn&#39;t used and is overwritten by the loader</span></span>
<span class="line"><span style="color:#98C379;">    // when loaded.</span></span>
<span class="line"><span style="color:#98C379;">    return undefined;</span></span>
<span class="line"><span style="color:#98C379;">}</span></span>
<span class="line"><span style="color:#98C379;">export function setPseudoTranslation(value) {</span></span>
<span class="line"><span style="color:#98C379;">    isPseudo = value;</span></span>
<span class="line"><span style="color:#98C379;">}</span></span>
<span class="line"><span style="color:#98C379;">/**</span></span>
<span class="line"><span style="color:#98C379;"> * Invoked in a built product at run-time</span></span>
<span class="line"><span style="color:#98C379;"> */</span></span>
<span class="line"><span style="color:#98C379;">export function create(key, data) {</span></span>
<span class="line"><span style="color:#98C379;">    var _a;</span></span>
<span class="line"><span style="color:#98C379;">    return {</span></span>
<span class="line"><span style="color:#98C379;">        localize: createScopedLocalize(data[key]),</span></span>
<span class="line"><span style="color:#98C379;">        localize2: createScopedLocalize2(data[key]),</span></span>
<span class="line"><span style="color:#98C379;">        getConfiguredDefaultLocale: (_a = data.getConfiguredDefaultLocale) !== null &amp;&amp; _a !== void 0 ? _a : ((_) =&gt; undefined)</span></span>
<span class="line"><span style="color:#98C379;">    };</span></span>
<span class="line"><span style="color:#98C379;">}</span></span>
<span class="line"><span style="color:#98C379;">/**</span></span>
<span class="line"><span style="color:#98C379;"> * Invoked by the loader at run-time</span></span>
<span class="line"><span style="color:#98C379;"> */</span></span>
<span class="line"><span style="color:#98C379;">export function load(name, req, load, config) {</span></span>
<span class="line"><span style="color:#98C379;">    var _a;</span></span>
<span class="line"><span style="color:#98C379;">    const pluginConfig = (_a = config[&#39;vs/nls&#39;]) !== null &amp;&amp; _a !== void 0 ? _a : {};</span></span>
<span class="line"><span style="color:#98C379;">    if (!name || name.length === 0) {</span></span>
<span class="line"><span style="color:#98C379;">        return load({</span></span>
<span class="line"><span style="color:#98C379;">            localize: localize,</span></span>
<span class="line"><span style="color:#98C379;">            localize2: localize2,</span></span>
<span class="line"><span style="color:#98C379;">            getConfiguredDefaultLocale: () =&gt; { var _a; return (_a = pluginConfig.availableLanguages) === null || _a === void 0 ? void 0 : _a[&#39;*&#39;]; }</span></span>
<span class="line"><span style="color:#98C379;">        });</span></span>
<span class="line"><span style="color:#98C379;">    }</span></span>
<span class="line"><span style="color:#98C379;">    const language = pluginConfig.availableLanguages ? findLanguageForModule(pluginConfig.availableLanguages, name) : null;</span></span>
<span class="line"><span style="color:#98C379;">    const useDefaultLanguage = language === null || language === DEFAULT_TAG;</span></span>
<span class="line"><span style="color:#98C379;">    let suffix = &#39;.nls&#39;;</span></span>
<span class="line"><span style="color:#98C379;">    if (!useDefaultLanguage) {</span></span>
<span class="line"><span style="color:#98C379;">        suffix = suffix + &#39;.&#39; + language;</span></span>
<span class="line"><span style="color:#98C379;">    }</span></span>
<span class="line"><span style="color:#98C379;">    const messagesLoaded = (messages) =&gt; {</span></span>
<span class="line"><span style="color:#98C379;">        if (Array.isArray(messages)) {</span></span>
<span class="line"><span style="color:#98C379;">            messages.localize = createScopedLocalize(messages);</span></span>
<span class="line"><span style="color:#98C379;">            messages.localize2 = createScopedLocalize2(messages);</span></span>
<span class="line"><span style="color:#98C379;">        }</span></span>
<span class="line"><span style="color:#98C379;">        else {</span></span>
<span class="line"><span style="color:#98C379;">            messages.localize = createScopedLocalize(messages[name]);</span></span>
<span class="line"><span style="color:#98C379;">            messages.localize2 = createScopedLocalize2(messages[name]);</span></span>
<span class="line"><span style="color:#98C379;">        }</span></span>
<span class="line"><span style="color:#98C379;">        messages.getConfiguredDefaultLocale = () =&gt; { var _a; return (_a = pluginConfig.availableLanguages) === null || _a === void 0 ? void 0 : _a[&#39;*&#39;]; };</span></span>
<span class="line"><span style="color:#98C379;">        load(messages);</span></span>
<span class="line"><span style="color:#98C379;">    };</span></span>
<span class="line"><span style="color:#98C379;">    if (typeof pluginConfig.loadBundle === &#39;function&#39;) {</span></span>
<span class="line"><span style="color:#98C379;">        pluginConfig.loadBundle(name, language, (err, messages) =&gt; {</span></span>
<span class="line"><span style="color:#98C379;">            // We have an error. Load the English default strings to not fail</span></span>
<span class="line"><span style="color:#98C379;">            if (err) {</span></span>
<span class="line"><span style="color:#98C379;">                req([name + &#39;.nls&#39;], messagesLoaded);</span></span>
<span class="line"><span style="color:#98C379;">            }</span></span>
<span class="line"><span style="color:#98C379;">            else {</span></span>
<span class="line"><span style="color:#98C379;">                messagesLoaded(messages);</span></span>
<span class="line"><span style="color:#98C379;">            }</span></span>
<span class="line"><span style="color:#98C379;">        });</span></span>
<span class="line"><span style="color:#98C379;">    }</span></span>
<span class="line"><span style="color:#98C379;">    else if (pluginConfig.translationServiceUrl &amp;&amp; !useDefaultLanguage) {</span></span>
<span class="line"><span style="color:#98C379;">        (async () =&gt; {</span></span>
<span class="line"><span style="color:#98C379;">            var _a;</span></span>
<span class="line"><span style="color:#98C379;">            try {</span></span>
<span class="line"><span style="color:#98C379;">                const messages = await getMessagesFromTranslationsService(pluginConfig.translationServiceUrl, language, name);</span></span>
<span class="line"><span style="color:#98C379;">                return messagesLoaded(messages);</span></span>
<span class="line"><span style="color:#98C379;">            }</span></span>
<span class="line"><span style="color:#98C379;">            catch (err) {</span></span>
<span class="line"><span style="color:#98C379;">                // Language is already as generic as it gets, so require default messages</span></span>
<span class="line"><span style="color:#98C379;">                if (!language.includes(&#39;-&#39;)) {</span></span>
<span class="line"><span style="color:#98C379;">                    console.error(err);</span></span>
<span class="line"><span style="color:#98C379;">                    return req([name + &#39;.nls&#39;], messagesLoaded);</span></span>
<span class="line"><span style="color:#98C379;">                }</span></span>
<span class="line"><span style="color:#98C379;">                try {</span></span>
<span class="line"><span style="color:#98C379;">                    // Since there is a dash, the language configured is a specific sub-language of the same generic language.</span></span>
<span class="line"><span style="color:#98C379;">                    // Since we were unable to load the specific language, try to load the generic language. Ex. we failed to find a</span></span>
<span class="line"><span style="color:#98C379;">                    // Swiss German (de-CH), so try to load the generic German (de) messages instead.</span></span>
<span class="line"><span style="color:#98C379;">                    const genericLanguage = language.split(&#39;-&#39;)[0];</span></span>
<span class="line"><span style="color:#98C379;">                    const messages = await getMessagesFromTranslationsService(pluginConfig.translationServiceUrl, genericLanguage, name);</span></span>
<span class="line"><span style="color:#98C379;">                    // We got some messages, so we configure the configuration to use the generic language for this session.</span></span>
<span class="line"><span style="color:#98C379;">                    (_a = pluginConfig.availableLanguages) !== null &amp;&amp; _a !== void 0 ? _a : (pluginConfig.availableLanguages = {});</span></span>
<span class="line"><span style="color:#98C379;">                    pluginConfig.availableLanguages[&#39;*&#39;] = genericLanguage;</span></span>
<span class="line"><span style="color:#98C379;">                    return messagesLoaded(messages);</span></span>
<span class="line"><span style="color:#98C379;">                }</span></span>
<span class="line"><span style="color:#98C379;">                catch (err) {</span></span>
<span class="line"><span style="color:#98C379;">                    console.error(err);</span></span>
<span class="line"><span style="color:#98C379;">                    return req([name + &#39;.nls&#39;], messagesLoaded);</span></span>
<span class="line"><span style="color:#98C379;">                }</span></span>
<span class="line"><span style="color:#98C379;">            }</span></span>
<span class="line"><span style="color:#98C379;">        })();</span></span>
<span class="line"><span style="color:#98C379;">    }</span></span>
<span class="line"><span style="color:#98C379;">    else {</span></span>
<span class="line"><span style="color:#98C379;">        req([name + suffix], messagesLoaded, (err) =&gt; {</span></span>
<span class="line"><span style="color:#98C379;">            if (suffix === &#39;.nls&#39;) {</span></span>
<span class="line"><span style="color:#98C379;">                console.error(&#39;Failed trying to load default language strings&#39;, err);</span></span>
<span class="line"><span style="color:#98C379;">                return;</span></span>
<span class="line"><span style="color:#98C379;">            }</span></span>
<span class="line"><span style="color:#98C379;">            console.error(</span><span style="color:#56B6C2;">\\\`</span><span style="color:#98C379;">Failed to load message bundle for language </span><span style="color:#56B6C2;">\\$</span><span style="color:#98C379;">{language}. Falling back to the default language:</span><span style="color:#56B6C2;">\\\`</span><span style="color:#98C379;">, err);</span></span>
<span class="line"><span style="color:#98C379;">            req([name + &#39;.nls&#39;], messagesLoaded);</span></span>
<span class="line"><span style="color:#98C379;">        });</span></span>
<span class="line"><span style="color:#98C379;">    }</span></span>
<span class="line"><span style="color:#98C379;">}</span></span>
<span class="line"><span style="color:#98C379;">    \`</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#B392F0;"> fs </span><span style="color:#F97583;">from</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;fs&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#B392F0;"> path </span><span style="color:#F97583;">from</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;path&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#B392F0;"> { Plugin } </span><span style="color:#F97583;">from</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;vite&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#B392F0;"> MagicString </span><span style="color:#F97583;">from</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;magic-string&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#B392F0;"> { Plugin </span><span style="color:#F97583;">as</span><span style="color:#B392F0;"> EsbuildPlugin } </span><span style="color:#F97583;">from</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;esbuild&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">enum</span><span style="color:#B392F0;"> Languages {</span></span>
<span class="line"><span style="color:#B392F0;">  bg </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;bg&#39;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  cs </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;cs&#39;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  de </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;de&#39;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  en_gb </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;en-gb&#39;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  es </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;es&#39;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  fr </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;fr&#39;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  hu </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;hu&#39;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  id </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;id&#39;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  it </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;it&#39;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  ja </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;ja&#39;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  ko </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;ko&#39;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  nl </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;nl&#39;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  pl </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;pl&#39;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  ps </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;ps&#39;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  pt_br </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;pt-br&#39;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  ru </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;ru&#39;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  tr </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;tr&#39;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  uk </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;uk&#39;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  zh_hans </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;zh-hans&#39;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  zh_hant </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;zh-hant&#39;</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">interface</span><span style="color:#B392F0;"> Options {</span></span>
<span class="line"><span style="color:#B392F0;">  locale</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> Languages</span></span>
<span class="line"><span style="color:#B392F0;">  localeData</span><span style="color:#F97583;">?:</span><span style="color:#B392F0;"> Record&lt;</span><span style="color:#79B8FF;">string</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">any</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">/**</span></span>
<span class="line"><span style="color:#6B737C;"> * 在vite中dev模式下会使用esbuild对node_modules进行预编译，导致找不到映射表中的filepath，</span></span>
<span class="line"><span style="color:#6B737C;"> * 需要在预编译之前进行替换</span></span>
<span class="line"><span style="color:#6B737C;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6B737C;"> options 替换语言包</span></span>
<span class="line"><span style="color:#6B737C;"> * </span><span style="color:#F97583;">@returns</span></span>
<span class="line"><span style="color:#6B737C;"> */</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">function</span><span style="color:#B392F0;"> esbuildPluginMonacoEditorNls(</span></span>
<span class="line"><span style="color:#B392F0;">  options</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> Options </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> { locale</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">Languages</span><span style="color:#B392F0;">.en_gb }</span></span>
<span class="line"><span style="color:#B392F0;">)</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> EsbuildPlugin {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">CURRENT_LOCALE_DATA</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> getLocalizeMapping(</span><span style="color:#79B8FF;">options</span><span style="color:#B392F0;">.locale</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">options</span><span style="color:#B392F0;">.localeData)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">    name</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;esbuild-plugin-monaco-editor-nls&#39;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">    setup(build) {</span></span>
<span class="line"><span style="color:#B392F0;">      </span><span style="color:#79B8FF;">build</span><span style="color:#B392F0;">.onLoad({ filter</span><span style="color:#F97583;">:</span><span style="color:#FFAB70;"> /esm[\\\\/]vs[\\\\/]nls\\.js/</span><span style="color:#B392F0;"> }</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">async</span><span style="color:#B392F0;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">        </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">          contents</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> getLocalizeCode(</span><span style="color:#79B8FF;">CURRENT_LOCALE_DATA</span><span style="color:#B392F0;">)</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">          loader</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;js&#39;</span></span>
<span class="line"><span style="color:#B392F0;">        }</span></span>
<span class="line"><span style="color:#B392F0;">      })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">      </span><span style="color:#79B8FF;">build</span><span style="color:#B392F0;">.onLoad({ filter</span><span style="color:#F97583;">:</span><span style="color:#FFAB70;"> /monaco-editor[\\\\/]esm[\\\\/]vs.</span><span style="color:#F97583;">+</span><span style="color:#FFAB70;">\\.js/</span><span style="color:#B392F0;"> }</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">async</span><span style="color:#B392F0;"> (args) </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">        </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">          contents</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> transformLocalizeFuncCode(</span><span style="color:#79B8FF;">args</span><span style="color:#B392F0;">.path</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">CURRENT_LOCALE_DATA</span><span style="color:#B392F0;">)</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">          loader</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;js&#39;</span></span>
<span class="line"><span style="color:#B392F0;">        }</span></span>
<span class="line"><span style="color:#B392F0;">      })</span></span>
<span class="line"><span style="color:#B392F0;">    }</span></span>
<span class="line"><span style="color:#B392F0;">  }</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">/**</span></span>
<span class="line"><span style="color:#6B737C;"> * 使用了monaco-editor-nls的语言映射包，把原始localize(data, message)的方法，替换成了localize(path, data, defaultMessage)</span></span>
<span class="line"><span style="color:#6B737C;"> * vite build 模式下，使用rollup处理</span></span>
<span class="line"><span style="color:#6B737C;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6B737C;"> options 替换语言包</span></span>
<span class="line"><span style="color:#6B737C;"> * </span><span style="color:#F97583;">@returns</span></span>
<span class="line"><span style="color:#6B737C;"> */</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">default</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">function</span><span style="color:#B392F0;"> MonacoEditorNlsPlugin(</span></span>
<span class="line"><span style="color:#B392F0;">  options</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> Options </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> { locale</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">Languages</span><span style="color:#B392F0;">.en_gb }</span></span>
<span class="line"><span style="color:#B392F0;">)</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> Plugin {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">CURRENT_LOCALE_DATA</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> getLocalizeMapping(</span><span style="color:#79B8FF;">options</span><span style="color:#B392F0;">.locale</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">options</span><span style="color:#B392F0;">.localeData)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">    name</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;rollup-plugin-monaco-editor-nls&#39;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">    enforce</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;pre&#39;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">    load(filepath) {</span></span>
<span class="line"><span style="color:#B392F0;">      </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (</span><span style="color:#FFAB70;">/esm[\\\\/]vs[\\\\/]nls\\.js/</span><span style="color:#B392F0;">.test(filepath)) {</span></span>
<span class="line"><span style="color:#B392F0;">        </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> getLocalizeCode(</span><span style="color:#79B8FF;">CURRENT_LOCALE_DATA</span><span style="color:#B392F0;">)</span></span>
<span class="line"><span style="color:#B392F0;">      }</span></span>
<span class="line"><span style="color:#B392F0;">    }</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">    transform(code</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> filepath) {</span></span>
<span class="line"><span style="color:#B392F0;">      </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (</span></span>
<span class="line"><span style="color:#B392F0;">        </span><span style="color:#FFAB70;">/monaco-editor[\\\\/]esm[\\\\/]vs.</span><span style="color:#F97583;">+</span><span style="color:#FFAB70;">\\.js/</span><span style="color:#B392F0;">.test(filepath) </span><span style="color:#F97583;">&amp;&amp;</span></span>
<span class="line"><span style="color:#B392F0;">        </span><span style="color:#F97583;">!</span><span style="color:#FFAB70;">/esm[\\\\/]vs[\\\\/].</span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">nls\\.js/</span><span style="color:#B392F0;">.test(filepath)</span></span>
<span class="line"><span style="color:#B392F0;">      ) {</span></span>
<span class="line"><span style="color:#B392F0;">        </span><span style="color:#79B8FF;">CURRENT_LOCALE_DATA</span></span>
<span class="line"><span style="color:#B392F0;">        </span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">re</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#FFAB70;"> /(?:monaco-editor[/\\\\]esm[/\\\\])(.</span><span style="color:#F97583;">+</span><span style="color:#FFAB70;">)(?=\\.js)/</span></span>
<span class="line"><span style="color:#B392F0;">        </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (</span><span style="color:#79B8FF;">re</span><span style="color:#B392F0;">.exec(filepath) </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">code</span><span style="color:#B392F0;">.includes(</span><span style="color:#FFAB70;">&#39;localize(&#39;</span><span style="color:#B392F0;">)) {</span></span>
<span class="line"><span style="color:#B392F0;">          </span><span style="color:#F97583;">let</span><span style="color:#B392F0;"> path </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">RegExp</span><span style="color:#B392F0;">.$1</span></span>
<span class="line"><span style="color:#B392F0;">          path </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">path</span><span style="color:#B392F0;">.replaceAll(</span><span style="color:#FFAB70;">&#39;\\\\&#39;</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;/&#39;</span><span style="color:#B392F0;">)</span></span>
<span class="line"><span style="color:#B392F0;">          </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (</span><span style="color:#79B8FF;">JSON</span><span style="color:#B392F0;">.parse(</span><span style="color:#79B8FF;">CURRENT_LOCALE_DATA</span><span style="color:#B392F0;">)[path]) {</span></span>
<span class="line"><span style="color:#B392F0;">            code </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">code</span><span style="color:#B392F0;">.replace(</span><span style="color:#FFAB70;">/localize\\(/</span><span style="color:#F97583;">g</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">\`localize(&quot;</span><span style="color:#F97583;">\${</span><span style="color:#B392F0;">path</span><span style="color:#F97583;">}</span><span style="color:#FFAB70;">&quot;, \`</span><span style="color:#B392F0;">)</span></span>
<span class="line"><span style="color:#B392F0;">            code </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">code</span><span style="color:#B392F0;">.replace(</span><span style="color:#FFAB70;">/localize2\\(/</span><span style="color:#F97583;">g</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">\`localize2(&#39;</span><span style="color:#F97583;">\${</span><span style="color:#B392F0;">path</span><span style="color:#F97583;">}</span><span style="color:#FFAB70;">&#39;, \`</span><span style="color:#B392F0;">)</span></span>
<span class="line"><span style="color:#B392F0;">          }</span></span>
<span class="line"><span style="color:#B392F0;">          </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">            code</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> code</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">            </span><span style="color:#6B737C;">/** 使用magic-string 生成 source map */</span></span>
<span class="line"><span style="color:#B392F0;">            map</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">new</span><span style="color:#B392F0;"> MagicString(code).generateMap({</span></span>
<span class="line"><span style="color:#B392F0;">              includeContent</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">true</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">              hires</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">true</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">              source</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> filepath</span></span>
<span class="line"><span style="color:#B392F0;">            })</span></span>
<span class="line"><span style="color:#B392F0;">          }</span></span>
<span class="line"><span style="color:#B392F0;">        }</span></span>
<span class="line"><span style="color:#B392F0;">      }</span></span>
<span class="line"><span style="color:#B392F0;">    }</span></span>
<span class="line"><span style="color:#B392F0;">  }</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">/**</span></span>
<span class="line"><span style="color:#6B737C;"> * 替换调用方法接口参数，替换成相应语言包语言</span></span>
<span class="line"><span style="color:#6B737C;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6B737C;"> filepath 路径</span></span>
<span class="line"><span style="color:#6B737C;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6B737C;"> CURRENT_LOCALE_DATA 替换规则</span></span>
<span class="line"><span style="color:#6B737C;"> * </span><span style="color:#F97583;">@returns</span></span>
<span class="line"><span style="color:#6B737C;"> */</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> transformLocalizeFuncCode(filepath</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> CURRENT_LOCALE_DATA</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">) {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">let</span><span style="color:#B392F0;"> code </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">fs</span><span style="color:#B392F0;">.readFileSync(filepath</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;utf8&#39;</span><span style="color:#B392F0;">)</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">re</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#FFAB70;"> /(?:monaco-editor[\\\\/]esm[\\\\/])(.</span><span style="color:#F97583;">+</span><span style="color:#FFAB70;">)(?=\\.js)/</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (</span><span style="color:#79B8FF;">re</span><span style="color:#B392F0;">.exec(filepath)) {</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#F97583;">let</span><span style="color:#B392F0;"> path </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">RegExp</span><span style="color:#B392F0;">.$1</span></span>
<span class="line"><span style="color:#B392F0;">    path </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">path</span><span style="color:#B392F0;">.replaceAll(</span><span style="color:#FFAB70;">&#39;\\\\&#39;</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;/&#39;</span><span style="color:#B392F0;">)</span></span>
<span class="line"><span style="color:#B392F0;">    code </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">code</span><span style="color:#B392F0;">.replace(</span><span style="color:#FFAB70;">/localize\\(/</span><span style="color:#F97583;">g</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">\`localize(&#39;</span><span style="color:#F97583;">\${</span><span style="color:#B392F0;">path</span><span style="color:#F97583;">}</span><span style="color:#FFAB70;">&#39;, \`</span><span style="color:#B392F0;">)</span></span>
<span class="line"><span style="color:#B392F0;">    code </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">code</span><span style="color:#B392F0;">.replace(</span><span style="color:#FFAB70;">/localize2\\(/</span><span style="color:#F97583;">g</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">\`localize2(&#39;</span><span style="color:#F97583;">\${</span><span style="color:#B392F0;">path</span><span style="color:#F97583;">}</span><span style="color:#FFAB70;">&#39;, \`</span><span style="color:#B392F0;">)</span></span>
<span class="line"><span style="color:#B392F0;">  }</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> code</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">/**</span></span>
<span class="line"><span style="color:#6B737C;"> * 获取语言包</span></span>
<span class="line"><span style="color:#6B737C;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6B737C;"> locale 语言</span></span>
<span class="line"><span style="color:#6B737C;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6B737C;"> localeData</span></span>
<span class="line"><span style="color:#6B737C;"> * </span><span style="color:#F97583;">@returns</span></span>
<span class="line"><span style="color:#6B737C;"> */</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> getLocalizeMapping(</span></span>
<span class="line"><span style="color:#B392F0;">  locale</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> Languages</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  localeData</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> Record&lt;</span><span style="color:#79B8FF;">string</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">any</span><span style="color:#B392F0;">&gt; </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">undefined</span></span>
<span class="line"><span style="color:#B392F0;">) {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (localeData) </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">JSON</span><span style="color:#B392F0;">.stringify(localeData)</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">locale_data_path</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">path</span><span style="color:#B392F0;">.join(__dirname</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">\`./locale/</span><span style="color:#F97583;">\${</span><span style="color:#B392F0;">locale</span><span style="color:#F97583;">}</span><span style="color:#FFAB70;">.json\`</span><span style="color:#B392F0;">)</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">fs</span><span style="color:#B392F0;">.readFileSync(locale_data_path) </span><span style="color:#F97583;">as</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">unknown</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">as</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">/**</span></span>
<span class="line"><span style="color:#6B737C;"> * 替换代码</span></span>
<span class="line"><span style="color:#6B737C;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6B737C;"> CURRENT_LOCALE_DATA 语言包</span></span>
<span class="line"><span style="color:#6B737C;"> * </span><span style="color:#F97583;">@returns</span></span>
<span class="line"><span style="color:#6B737C;"> */</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> getLocalizeCode(CURRENT_LOCALE_DATA</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">) {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">\`</span></span>
<span class="line"><span style="color:#FFAB70;">/*---------------------------------------------------------------------------------------------</span></span>
<span class="line"><span style="color:#FFAB70;"> *  Copyright (c) Microsoft Corporation. All rights reserved.</span></span>
<span class="line"><span style="color:#FFAB70;"> *  Licensed under the MIT License. See License.txt in the project root for license information.</span></span>
<span class="line"><span style="color:#FFAB70;"> *--------------------------------------------------------------------------------------------*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFAB70;">let isPseudo = (typeof document !== &#39;undefined&#39; &amp;&amp; document.location &amp;&amp; document.location.hash.indexOf(&#39;pseudo=true&#39;) &gt;= 0);</span></span>
<span class="line"><span style="color:#FFAB70;">const DEFAULT_TAG = &#39;i-default&#39;;</span></span>
<span class="line"><span style="color:#FFAB70;">function _format(message, args) {</span></span>
<span class="line"><span style="color:#FFAB70;">    let result;</span></span>
<span class="line"><span style="color:#FFAB70;">    if (args.length === 0) {</span></span>
<span class="line"><span style="color:#FFAB70;">        result = message;</span></span>
<span class="line"><span style="color:#FFAB70;">    }</span></span>
<span class="line"><span style="color:#FFAB70;">    else {</span></span>
<span class="line"><span style="color:#FFAB70;">        result = message.replace(/\\\\{(\\\\d+)\\\\}/g, (match, rest) =&gt; {</span></span>
<span class="line"><span style="color:#FFAB70;">            const index = rest[0];</span></span>
<span class="line"><span style="color:#FFAB70;">            const arg = args[index];</span></span>
<span class="line"><span style="color:#FFAB70;">            let result = match;</span></span>
<span class="line"><span style="color:#FFAB70;">            if (typeof arg === &#39;string&#39;) {</span></span>
<span class="line"><span style="color:#FFAB70;">                result = arg;</span></span>
<span class="line"><span style="color:#FFAB70;">            }</span></span>
<span class="line"><span style="color:#FFAB70;">            else if (typeof arg === &#39;number&#39; || typeof arg === &#39;boolean&#39; || arg === void 0 || arg === null) {</span></span>
<span class="line"><span style="color:#FFAB70;">                result = String(arg);</span></span>
<span class="line"><span style="color:#FFAB70;">            }</span></span>
<span class="line"><span style="color:#FFAB70;">            return result;</span></span>
<span class="line"><span style="color:#FFAB70;">        });</span></span>
<span class="line"><span style="color:#FFAB70;">    }</span></span>
<span class="line"><span style="color:#FFAB70;">    if (isPseudo) {</span></span>
<span class="line"><span style="color:#FFAB70;">        // FF3B and FF3D is the Unicode zenkaku representation for [ and ]</span></span>
<span class="line"><span style="color:#FFAB70;">        result = &#39;\\\\uFF3B&#39; + result.replace(/[aouei]/g, &#39;$&amp;$&amp;&#39;) + &#39;\\\\uFF3D&#39;;</span></span>
<span class="line"><span style="color:#FFAB70;">    }</span></span>
<span class="line"><span style="color:#FFAB70;">    return result;</span></span>
<span class="line"><span style="color:#FFAB70;">}</span></span>
<span class="line"><span style="color:#FFAB70;">function findLanguageForModule(config, name) {</span></span>
<span class="line"><span style="color:#FFAB70;">    let result = config[name];</span></span>
<span class="line"><span style="color:#FFAB70;">    if (result) {</span></span>
<span class="line"><span style="color:#FFAB70;">        return result;</span></span>
<span class="line"><span style="color:#FFAB70;">    }</span></span>
<span class="line"><span style="color:#FFAB70;">    result = config[&#39;*&#39;];</span></span>
<span class="line"><span style="color:#FFAB70;">    if (result) {</span></span>
<span class="line"><span style="color:#FFAB70;">        return result;</span></span>
<span class="line"><span style="color:#FFAB70;">    }</span></span>
<span class="line"><span style="color:#FFAB70;">    return null;</span></span>
<span class="line"><span style="color:#FFAB70;">}</span></span>
<span class="line"><span style="color:#FFAB70;">function endWithSlash(path) {</span></span>
<span class="line"><span style="color:#FFAB70;">    if (path.charAt(path.length - 1) === &#39;/&#39;) {</span></span>
<span class="line"><span style="color:#FFAB70;">        return path;</span></span>
<span class="line"><span style="color:#FFAB70;">    }</span></span>
<span class="line"><span style="color:#FFAB70;">    return path + &#39;/&#39;;</span></span>
<span class="line"><span style="color:#FFAB70;">}</span></span>
<span class="line"><span style="color:#FFAB70;">async function getMessagesFromTranslationsService(translationServiceUrl, language, name) {</span></span>
<span class="line"><span style="color:#FFAB70;">    const url = endWithSlash(translationServiceUrl) + endWithSlash(language) + &#39;vscode/&#39; + endWithSlash(name);</span></span>
<span class="line"><span style="color:#FFAB70;">    const res = await fetch(url);</span></span>
<span class="line"><span style="color:#FFAB70;">    if (res.ok) {</span></span>
<span class="line"><span style="color:#FFAB70;">        const messages = await res.json();</span></span>
<span class="line"><span style="color:#FFAB70;">        return messages;</span></span>
<span class="line"><span style="color:#FFAB70;">    }</span></span>
<span class="line"><span style="color:#FFAB70;">    throw new Error(\\\`\\\${res.status} - \\\${res.statusText}\\\`);</span></span>
<span class="line"><span style="color:#FFAB70;">}</span></span>
<span class="line"><span style="color:#FFAB70;">function createScopedLocalize(scope) {</span></span>
<span class="line"><span style="color:#FFAB70;">    return function (idx, defaultValue) {</span></span>
<span class="line"><span style="color:#FFAB70;">        const restArgs = Array.prototype.slice.call(arguments, 2);</span></span>
<span class="line"><span style="color:#FFAB70;">        return _format(scope[idx], restArgs);</span></span>
<span class="line"><span style="color:#FFAB70;">    };</span></span>
<span class="line"><span style="color:#FFAB70;">}</span></span>
<span class="line"><span style="color:#FFAB70;">function createScopedLocalize2(scope) {</span></span>
<span class="line"><span style="color:#FFAB70;">    return (idx, defaultValue, ...args) =&gt; ({</span></span>
<span class="line"><span style="color:#FFAB70;">        value: _format(scope[idx], args),</span></span>
<span class="line"><span style="color:#FFAB70;">        original: _format(defaultValue, args)</span></span>
<span class="line"><span style="color:#FFAB70;">    });</span></span>
<span class="line"><span style="color:#FFAB70;">}</span></span>
<span class="line"><span style="color:#FFAB70;">// export function localize(data, message, ...args) {</span></span>
<span class="line"><span style="color:#FFAB70;">//     return _format(message, args);</span></span>
<span class="line"><span style="color:#FFAB70;">// }</span></span>
<span class="line"><span style="color:#FFAB70;">// ------------------------invoke----------------------------------------</span></span>
<span class="line"><span style="color:#FFAB70;">        export function localize(path, data, defaultMessage, ...args) {</span></span>
<span class="line"><span style="color:#FFAB70;">            var key = typeof data === &#39;object&#39; ? data.key : data;</span></span>
<span class="line"><span style="color:#FFAB70;">            var data = </span><span style="color:#F97583;">\${</span><span style="color:#79B8FF;">CURRENT_LOCALE_DATA</span><span style="color:#F97583;">}</span><span style="color:#FFAB70;"> || {};</span></span>
<span class="line"><span style="color:#FFAB70;">            var message = (data[path] || {})[key];</span></span>
<span class="line"><span style="color:#FFAB70;">            if (!message) {</span></span>
<span class="line"><span style="color:#FFAB70;">                message = defaultMessage;</span></span>
<span class="line"><span style="color:#FFAB70;">            }</span></span>
<span class="line"><span style="color:#FFAB70;">            return _format(message, args);</span></span>
<span class="line"><span style="color:#FFAB70;">        }</span></span>
<span class="line"><span style="color:#FFAB70;">// ------------------------invoke----------------------------------------</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFAB70;">export function localize2(path, data, defaultMessage, ...args) {</span></span>
<span class="line"><span style="color:#FFAB70;">            var key = typeof data === &#39;object&#39; ? data.key : data;</span></span>
<span class="line"><span style="color:#FFAB70;">            var data = </span><span style="color:#F97583;">\${</span><span style="color:#79B8FF;">CURRENT_LOCALE_DATA</span><span style="color:#F97583;">}</span><span style="color:#FFAB70;"> || {};</span></span>
<span class="line"><span style="color:#FFAB70;">            var message = (data[path] || {})[key];</span></span>
<span class="line"><span style="color:#FFAB70;">            if (!message) {</span></span>
<span class="line"><span style="color:#FFAB70;">                message = defaultMessage;</span></span>
<span class="line"><span style="color:#FFAB70;">            }</span></span>
<span class="line"><span style="color:#FFAB70;">            const original = _format(message, args);</span></span>
<span class="line"><span style="color:#FFAB70;">               return {</span></span>
<span class="line"><span style="color:#FFAB70;">                value: original,</span></span>
<span class="line"><span style="color:#FFAB70;">        original</span></span>
<span class="line"><span style="color:#FFAB70;">    };</span></span>
<span class="line"><span style="color:#FFAB70;">}</span></span>
<span class="line"><span style="color:#FFAB70;">export function getConfiguredDefaultLocale(_) {</span></span>
<span class="line"><span style="color:#FFAB70;">    // This returns undefined because this implementation isn&#39;t used and is overwritten by the loader</span></span>
<span class="line"><span style="color:#FFAB70;">    // when loaded.</span></span>
<span class="line"><span style="color:#FFAB70;">    return undefined;</span></span>
<span class="line"><span style="color:#FFAB70;">}</span></span>
<span class="line"><span style="color:#FFAB70;">export function setPseudoTranslation(value) {</span></span>
<span class="line"><span style="color:#FFAB70;">    isPseudo = value;</span></span>
<span class="line"><span style="color:#FFAB70;">}</span></span>
<span class="line"><span style="color:#FFAB70;">/**</span></span>
<span class="line"><span style="color:#FFAB70;"> * Invoked in a built product at run-time</span></span>
<span class="line"><span style="color:#FFAB70;"> */</span></span>
<span class="line"><span style="color:#FFAB70;">export function create(key, data) {</span></span>
<span class="line"><span style="color:#FFAB70;">    var _a;</span></span>
<span class="line"><span style="color:#FFAB70;">    return {</span></span>
<span class="line"><span style="color:#FFAB70;">        localize: createScopedLocalize(data[key]),</span></span>
<span class="line"><span style="color:#FFAB70;">        localize2: createScopedLocalize2(data[key]),</span></span>
<span class="line"><span style="color:#FFAB70;">        getConfiguredDefaultLocale: (_a = data.getConfiguredDefaultLocale) !== null &amp;&amp; _a !== void 0 ? _a : ((_) =&gt; undefined)</span></span>
<span class="line"><span style="color:#FFAB70;">    };</span></span>
<span class="line"><span style="color:#FFAB70;">}</span></span>
<span class="line"><span style="color:#FFAB70;">/**</span></span>
<span class="line"><span style="color:#FFAB70;"> * Invoked by the loader at run-time</span></span>
<span class="line"><span style="color:#FFAB70;"> */</span></span>
<span class="line"><span style="color:#FFAB70;">export function load(name, req, load, config) {</span></span>
<span class="line"><span style="color:#FFAB70;">    var _a;</span></span>
<span class="line"><span style="color:#FFAB70;">    const pluginConfig = (_a = config[&#39;vs/nls&#39;]) !== null &amp;&amp; _a !== void 0 ? _a : {};</span></span>
<span class="line"><span style="color:#FFAB70;">    if (!name || name.length === 0) {</span></span>
<span class="line"><span style="color:#FFAB70;">        return load({</span></span>
<span class="line"><span style="color:#FFAB70;">            localize: localize,</span></span>
<span class="line"><span style="color:#FFAB70;">            localize2: localize2,</span></span>
<span class="line"><span style="color:#FFAB70;">            getConfiguredDefaultLocale: () =&gt; { var _a; return (_a = pluginConfig.availableLanguages) === null || _a === void 0 ? void 0 : _a[&#39;*&#39;]; }</span></span>
<span class="line"><span style="color:#FFAB70;">        });</span></span>
<span class="line"><span style="color:#FFAB70;">    }</span></span>
<span class="line"><span style="color:#FFAB70;">    const language = pluginConfig.availableLanguages ? findLanguageForModule(pluginConfig.availableLanguages, name) : null;</span></span>
<span class="line"><span style="color:#FFAB70;">    const useDefaultLanguage = language === null || language === DEFAULT_TAG;</span></span>
<span class="line"><span style="color:#FFAB70;">    let suffix = &#39;.nls&#39;;</span></span>
<span class="line"><span style="color:#FFAB70;">    if (!useDefaultLanguage) {</span></span>
<span class="line"><span style="color:#FFAB70;">        suffix = suffix + &#39;.&#39; + language;</span></span>
<span class="line"><span style="color:#FFAB70;">    }</span></span>
<span class="line"><span style="color:#FFAB70;">    const messagesLoaded = (messages) =&gt; {</span></span>
<span class="line"><span style="color:#FFAB70;">        if (Array.isArray(messages)) {</span></span>
<span class="line"><span style="color:#FFAB70;">            messages.localize = createScopedLocalize(messages);</span></span>
<span class="line"><span style="color:#FFAB70;">            messages.localize2 = createScopedLocalize2(messages);</span></span>
<span class="line"><span style="color:#FFAB70;">        }</span></span>
<span class="line"><span style="color:#FFAB70;">        else {</span></span>
<span class="line"><span style="color:#FFAB70;">            messages.localize = createScopedLocalize(messages[name]);</span></span>
<span class="line"><span style="color:#FFAB70;">            messages.localize2 = createScopedLocalize2(messages[name]);</span></span>
<span class="line"><span style="color:#FFAB70;">        }</span></span>
<span class="line"><span style="color:#FFAB70;">        messages.getConfiguredDefaultLocale = () =&gt; { var _a; return (_a = pluginConfig.availableLanguages) === null || _a === void 0 ? void 0 : _a[&#39;*&#39;]; };</span></span>
<span class="line"><span style="color:#FFAB70;">        load(messages);</span></span>
<span class="line"><span style="color:#FFAB70;">    };</span></span>
<span class="line"><span style="color:#FFAB70;">    if (typeof pluginConfig.loadBundle === &#39;function&#39;) {</span></span>
<span class="line"><span style="color:#FFAB70;">        pluginConfig.loadBundle(name, language, (err, messages) =&gt; {</span></span>
<span class="line"><span style="color:#FFAB70;">            // We have an error. Load the English default strings to not fail</span></span>
<span class="line"><span style="color:#FFAB70;">            if (err) {</span></span>
<span class="line"><span style="color:#FFAB70;">                req([name + &#39;.nls&#39;], messagesLoaded);</span></span>
<span class="line"><span style="color:#FFAB70;">            }</span></span>
<span class="line"><span style="color:#FFAB70;">            else {</span></span>
<span class="line"><span style="color:#FFAB70;">                messagesLoaded(messages);</span></span>
<span class="line"><span style="color:#FFAB70;">            }</span></span>
<span class="line"><span style="color:#FFAB70;">        });</span></span>
<span class="line"><span style="color:#FFAB70;">    }</span></span>
<span class="line"><span style="color:#FFAB70;">    else if (pluginConfig.translationServiceUrl &amp;&amp; !useDefaultLanguage) {</span></span>
<span class="line"><span style="color:#FFAB70;">        (async () =&gt; {</span></span>
<span class="line"><span style="color:#FFAB70;">            var _a;</span></span>
<span class="line"><span style="color:#FFAB70;">            try {</span></span>
<span class="line"><span style="color:#FFAB70;">                const messages = await getMessagesFromTranslationsService(pluginConfig.translationServiceUrl, language, name);</span></span>
<span class="line"><span style="color:#FFAB70;">                return messagesLoaded(messages);</span></span>
<span class="line"><span style="color:#FFAB70;">            }</span></span>
<span class="line"><span style="color:#FFAB70;">            catch (err) {</span></span>
<span class="line"><span style="color:#FFAB70;">                // Language is already as generic as it gets, so require default messages</span></span>
<span class="line"><span style="color:#FFAB70;">                if (!language.includes(&#39;-&#39;)) {</span></span>
<span class="line"><span style="color:#FFAB70;">                    console.error(err);</span></span>
<span class="line"><span style="color:#FFAB70;">                    return req([name + &#39;.nls&#39;], messagesLoaded);</span></span>
<span class="line"><span style="color:#FFAB70;">                }</span></span>
<span class="line"><span style="color:#FFAB70;">                try {</span></span>
<span class="line"><span style="color:#FFAB70;">                    // Since there is a dash, the language configured is a specific sub-language of the same generic language.</span></span>
<span class="line"><span style="color:#FFAB70;">                    // Since we were unable to load the specific language, try to load the generic language. Ex. we failed to find a</span></span>
<span class="line"><span style="color:#FFAB70;">                    // Swiss German (de-CH), so try to load the generic German (de) messages instead.</span></span>
<span class="line"><span style="color:#FFAB70;">                    const genericLanguage = language.split(&#39;-&#39;)[0];</span></span>
<span class="line"><span style="color:#FFAB70;">                    const messages = await getMessagesFromTranslationsService(pluginConfig.translationServiceUrl, genericLanguage, name);</span></span>
<span class="line"><span style="color:#FFAB70;">                    // We got some messages, so we configure the configuration to use the generic language for this session.</span></span>
<span class="line"><span style="color:#FFAB70;">                    (_a = pluginConfig.availableLanguages) !== null &amp;&amp; _a !== void 0 ? _a : (pluginConfig.availableLanguages = {});</span></span>
<span class="line"><span style="color:#FFAB70;">                    pluginConfig.availableLanguages[&#39;*&#39;] = genericLanguage;</span></span>
<span class="line"><span style="color:#FFAB70;">                    return messagesLoaded(messages);</span></span>
<span class="line"><span style="color:#FFAB70;">                }</span></span>
<span class="line"><span style="color:#FFAB70;">                catch (err) {</span></span>
<span class="line"><span style="color:#FFAB70;">                    console.error(err);</span></span>
<span class="line"><span style="color:#FFAB70;">                    return req([name + &#39;.nls&#39;], messagesLoaded);</span></span>
<span class="line"><span style="color:#FFAB70;">                }</span></span>
<span class="line"><span style="color:#FFAB70;">            }</span></span>
<span class="line"><span style="color:#FFAB70;">        })();</span></span>
<span class="line"><span style="color:#FFAB70;">    }</span></span>
<span class="line"><span style="color:#FFAB70;">    else {</span></span>
<span class="line"><span style="color:#FFAB70;">        req([name + suffix], messagesLoaded, (err) =&gt; {</span></span>
<span class="line"><span style="color:#FFAB70;">            if (suffix === &#39;.nls&#39;) {</span></span>
<span class="line"><span style="color:#FFAB70;">                console.error(&#39;Failed trying to load default language strings&#39;, err);</span></span>
<span class="line"><span style="color:#FFAB70;">                return;</span></span>
<span class="line"><span style="color:#FFAB70;">            }</span></span>
<span class="line"><span style="color:#FFAB70;">            console.error(\\\`Failed to load message bundle for language \\\${language}. Falling back to the default language:\\\`, err);</span></span>
<span class="line"><span style="color:#FFAB70;">            req([name + &#39;.nls&#39;], messagesLoaded);</span></span>
<span class="line"><span style="color:#FFAB70;">        });</span></span>
<span class="line"><span style="color:#FFAB70;">    }</span></span>
<span class="line"><span style="color:#FFAB70;">}</span></span>
<span class="line"><span style="color:#FFAB70;">    \`</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br><span class="line-number">174</span><br><span class="line-number">175</span><br><span class="line-number">176</span><br><span class="line-number">177</span><br><span class="line-number">178</span><br><span class="line-number">179</span><br><span class="line-number">180</span><br><span class="line-number">181</span><br><span class="line-number">182</span><br><span class="line-number">183</span><br><span class="line-number">184</span><br><span class="line-number">185</span><br><span class="line-number">186</span><br><span class="line-number">187</span><br><span class="line-number">188</span><br><span class="line-number">189</span><br><span class="line-number">190</span><br><span class="line-number">191</span><br><span class="line-number">192</span><br><span class="line-number">193</span><br><span class="line-number">194</span><br><span class="line-number">195</span><br><span class="line-number">196</span><br><span class="line-number">197</span><br><span class="line-number">198</span><br><span class="line-number">199</span><br><span class="line-number">200</span><br><span class="line-number">201</span><br><span class="line-number">202</span><br><span class="line-number">203</span><br><span class="line-number">204</span><br><span class="line-number">205</span><br><span class="line-number">206</span><br><span class="line-number">207</span><br><span class="line-number">208</span><br><span class="line-number">209</span><br><span class="line-number">210</span><br><span class="line-number">211</span><br><span class="line-number">212</span><br><span class="line-number">213</span><br><span class="line-number">214</span><br><span class="line-number">215</span><br><span class="line-number">216</span><br><span class="line-number">217</span><br><span class="line-number">218</span><br><span class="line-number">219</span><br><span class="line-number">220</span><br><span class="line-number">221</span><br><span class="line-number">222</span><br><span class="line-number">223</span><br><span class="line-number">224</span><br><span class="line-number">225</span><br><span class="line-number">226</span><br><span class="line-number">227</span><br><span class="line-number">228</span><br><span class="line-number">229</span><br><span class="line-number">230</span><br><span class="line-number">231</span><br><span class="line-number">232</span><br><span class="line-number">233</span><br><span class="line-number">234</span><br><span class="line-number">235</span><br><span class="line-number">236</span><br><span class="line-number">237</span><br><span class="line-number">238</span><br><span class="line-number">239</span><br><span class="line-number">240</span><br><span class="line-number">241</span><br><span class="line-number">242</span><br><span class="line-number">243</span><br><span class="line-number">244</span><br><span class="line-number">245</span><br><span class="line-number">246</span><br><span class="line-number">247</span><br><span class="line-number">248</span><br><span class="line-number">249</span><br><span class="line-number">250</span><br><span class="line-number">251</span><br><span class="line-number">252</span><br><span class="line-number">253</span><br><span class="line-number">254</span><br><span class="line-number">255</span><br><span class="line-number">256</span><br><span class="line-number">257</span><br><span class="line-number">258</span><br><span class="line-number">259</span><br><span class="line-number">260</span><br><span class="line-number">261</span><br><span class="line-number">262</span><br><span class="line-number">263</span><br><span class="line-number">264</span><br><span class="line-number">265</span><br><span class="line-number">266</span><br><span class="line-number">267</span><br><span class="line-number">268</span><br><span class="line-number">269</span><br><span class="line-number">270</span><br><span class="line-number">271</span><br><span class="line-number">272</span><br><span class="line-number">273</span><br><span class="line-number">274</span><br><span class="line-number">275</span><br><span class="line-number">276</span><br><span class="line-number">277</span><br><span class="line-number">278</span><br><span class="line-number">279</span><br><span class="line-number">280</span><br><span class="line-number">281</span><br><span class="line-number">282</span><br><span class="line-number">283</span><br><span class="line-number">284</span><br><span class="line-number">285</span><br><span class="line-number">286</span><br><span class="line-number">287</span><br><span class="line-number">288</span><br><span class="line-number">289</span><br><span class="line-number">290</span><br><span class="line-number">291</span><br><span class="line-number">292</span><br><span class="line-number">293</span><br><span class="line-number">294</span><br><span class="line-number">295</span><br><span class="line-number">296</span><br><span class="line-number">297</span><br><span class="line-number">298</span><br><span class="line-number">299</span><br><span class="line-number">300</span><br><span class="line-number">301</span><br><span class="line-number">302</span><br><span class="line-number">303</span><br><span class="line-number">304</span><br><span class="line-number">305</span><br><span class="line-number">306</span><br><span class="line-number">307</span><br><span class="line-number">308</span><br><span class="line-number">309</span><br><span class="line-number">310</span><br><span class="line-number">311</span><br><span class="line-number">312</span><br><span class="line-number">313</span><br><span class="line-number">314</span><br><span class="line-number">315</span><br><span class="line-number">316</span><br><span class="line-number">317</span><br><span class="line-number">318</span><br><span class="line-number">319</span><br><span class="line-number">320</span><br><span class="line-number">321</span><br><span class="line-number">322</span><br><span class="line-number">323</span><br><span class="line-number">324</span><br><span class="line-number">325</span><br><span class="line-number">326</span><br><span class="line-number">327</span><br><span class="line-number">328</span><br><span class="line-number">329</span><br><span class="line-number">330</span><br><span class="line-number">331</span><br><span class="line-number">332</span><br><span class="line-number">333</span><br><span class="line-number">334</span><br><span class="line-number">335</span><br><span class="line-number">336</span><br><span class="line-number">337</span><br><span class="line-number">338</span><br><span class="line-number">339</span><br><span class="line-number">340</span><br><span class="line-number">341</span><br><span class="line-number">342</span><br><span class="line-number">343</span><br><span class="line-number">344</span><br><span class="line-number">345</span><br><span class="line-number">346</span><br><span class="line-number">347</span><br><span class="line-number">348</span><br><span class="line-number">349</span><br><span class="line-number">350</span><br><span class="line-number">351</span><br><span class="line-number">352</span><br><span class="line-number">353</span><br><span class="line-number">354</span><br><span class="line-number">355</span><br><span class="line-number">356</span><br><span class="line-number">357</span><br><span class="line-number">358</span><br></div></div><h2 id="更新插件的中文json" tabindex="-1">更新插件的中文json <a class="header-anchor" href="#更新插件的中文json" aria-hidden="true">#</a></h2><p><a href="https://github.com/microsoft/vscode-loc/blob/main/i18n/vscode-language-pack-zh-hans/translations/main.i18n.json" target="_blank" rel="noreferrer">https://github.com/microsoft/vscode-loc/blob/main/i18n/vscode-language-pack-zh-hans/translations/main.i18n.json</a></p><p>取出contents中部分</p><h2 id="找到vscode仓库中vscode-src-vs-nls-ts文件" tabindex="-1">找到vscode仓库中<code>vscode/src/vs/nls.ts</code>文件 <a class="header-anchor" href="#找到vscode仓库中vscode-src-vs-nls-ts文件" aria-hidden="true">#</a></h2><p>插件中替换的代码来自vscode中。</p><p>为了正常运行，需要更改ts为js，去除所有类型；</p><p>为了转成字符串后通过插件替换，字符串转义字符前要加\\转义；</p><p>做完这两个前置操作，我们就可以开始修改<code>vscode/src/vs/nls.ts</code>文件代码来实现汉化了</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/*---------------------------------------------------------------------------------------------</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> *  Copyright (c) Microsoft Corporation. All rights reserved.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> *  Licensed under the MIT License. See License.txt in the project root for license information.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> *--------------------------------------------------------------------------------------------*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">isPseudo</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">typeof</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">document</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">!==</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;undefined&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&amp;&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">document</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">location</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&amp;&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">document</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">location</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">hash</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">indexOf</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;pseudo=true&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">&gt;=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">DEFAULT_TAG</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;i-default&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">interface</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">INLSPluginConfig</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#E06C75;">availableLanguages</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">INLSPluginConfigAvailableLanguages</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#E06C75;">loadBundle</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">BundleLoader</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#E06C75;">translationServiceUrl</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">interface</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">INLSPluginConfigAvailableLanguages</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#98C379;">&#39;*&#39;</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	[</span><span style="color:#E06C75;font-style:italic;">module</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">]: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">undefined</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">interface</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">BundleLoader</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">	(</span><span style="color:#E06C75;font-style:italic;">bundle</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">locale</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">null</span><span style="color:#ABB2BF;">, </span><span style="color:#61AFEF;">cb</span><span style="color:#ABB2BF;">: (</span><span style="color:#E06C75;font-style:italic;">err</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Error</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">messages</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">[] | </span><span style="color:#E5C07B;">IBundledStrings</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">void</span><span style="color:#ABB2BF;">): </span><span style="color:#E5C07B;">void</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">interface</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">IBundledStrings</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">	[</span><span style="color:#E06C75;font-style:italic;">moduleId</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">]: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">[];</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">interface</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">ILocalizeInfo</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#E06C75;">comment</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">[];</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">interface</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">ILocalizedString</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#E06C75;">original</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">interface</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">ILocalizeFunc</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">	(</span><span style="color:#E06C75;font-style:italic;">info</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">ILocalizeInfo</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">message</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">, ...</span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">: (</span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">boolean</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">undefined</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">null</span><span style="color:#ABB2BF;">)[]): </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	(</span><span style="color:#E06C75;font-style:italic;">key</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">message</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">, ...</span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">: (</span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">boolean</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">undefined</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">null</span><span style="color:#ABB2BF;">)[]): </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">interface</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">IBoundLocalizeFunc</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">	(</span><span style="color:#E06C75;font-style:italic;">idx</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">defaultValue</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">null</span><span style="color:#ABB2BF;">): </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">interface</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">ILocalize2Func</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">	(</span><span style="color:#E06C75;font-style:italic;">info</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">ILocalizeInfo</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">message</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">, ...</span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">: (</span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">boolean</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">undefined</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">null</span><span style="color:#ABB2BF;">)[]): </span><span style="color:#E5C07B;">ILocalizedString</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	(</span><span style="color:#E06C75;font-style:italic;">key</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">message</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">, ...</span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">: (</span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">boolean</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">undefined</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">null</span><span style="color:#ABB2BF;">)[]): </span><span style="color:#E5C07B;">ILocalizedString</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">interface</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">IBoundLocalize2Func</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">	(</span><span style="color:#E06C75;font-style:italic;">idx</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">defaultValue</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">): </span><span style="color:#E5C07B;">ILocalizedString</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">interface</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">IConsumerAPI</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#E06C75;">localize</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">ILocalizeFunc</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">IBoundLocalizeFunc</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#E06C75;">localize2</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">ILocalize2Func</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">IBoundLocalize2Func</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#61AFEF;">getConfiguredDefaultLocale</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">stringFromLocalizeCall</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">): </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">undefined</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">_format</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">message</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">: (</span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">boolean</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">undefined</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">null</span><span style="color:#ABB2BF;">)[]): </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#C678DD;">let</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">result</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">args</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">===</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#E06C75;">result</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">message</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	} </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#E06C75;">result</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">message</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">replace</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">/</span><span style="color:#56B6C2;">\\{</span><span style="color:#E06C75;">(\\d</span><span style="color:#D19A66;">+</span><span style="color:#E06C75;">)</span><span style="color:#56B6C2;">\\}</span><span style="color:#E06C75;">/</span><span style="color:#C678DD;">g</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;font-style:italic;">match</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">rest</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">			</span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">index</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">rest</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#ABB2BF;">			</span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">arg</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">args</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">index</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#ABB2BF;">			</span><span style="color:#C678DD;">let</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">result</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">match</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">			</span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">typeof</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">arg</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">===</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;string&#39;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">				</span><span style="color:#E06C75;">result</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">arg</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">			} </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">typeof</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">arg</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">===</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;number&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">||</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">typeof</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">arg</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">===</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;boolean&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">||</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">arg</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">===</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">void</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">||</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">arg</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">===</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">null</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">				</span><span style="color:#E06C75;">result</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">String</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">arg</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"><span style="color:#ABB2BF;">			</span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">result</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">		});</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">isPseudo</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#7F848E;font-style:italic;">// FF3B and FF3D is the Unicode zenkaku representation for [ and ]</span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#E06C75;">result</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;</span><span style="color:#56B6C2;">\\uFF3B</span><span style="color:#98C379;">&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">result</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">replace</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">/</span><span style="color:#D19A66;">[aouei]</span><span style="color:#E06C75;">/</span><span style="color:#C678DD;">g</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;$&amp;$&amp;&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;</span><span style="color:#56B6C2;">\\uFF3D</span><span style="color:#98C379;">&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">result</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">findLanguageForModule</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">config</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">INLSPluginConfigAvailableLanguages</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#C678DD;">let</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">result</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">config</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">result</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">result</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#E06C75;">result</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">config</span><span style="color:#ABB2BF;">[</span><span style="color:#98C379;">&#39;*&#39;</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">result</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">result</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">null</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">endWithSlash</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">path</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">): </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">charAt</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">-</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">===</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;/&#39;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;/&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">async</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">getMessagesFromTranslationsService</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">translationServiceUrl</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">language</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">): </span><span style="color:#E5C07B;">Promise</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">[] | </span><span style="color:#E5C07B;">IBundledStrings</span><span style="color:#ABB2BF;">&gt; {</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">url</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">endWithSlash</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">translationServiceUrl</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">endWithSlash</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">language</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;vscode/&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">endWithSlash</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">res</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">await</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">fetch</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">url</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">res</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">ok</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">messages</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">await</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">res</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">json</span><span style="color:#ABB2BF;">() </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">[] | </span><span style="color:#E5C07B;">IBundledStrings</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">messages</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#C678DD;">throw</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Error</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">\`</span><span style="color:#C678DD;">\${</span><span style="color:#E5C07B;">res</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">status</span><span style="color:#C678DD;">}</span><span style="color:#98C379;"> - </span><span style="color:#C678DD;">\${</span><span style="color:#E5C07B;">res</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">statusText</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">createScopedLocalize</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">scope</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">[]): </span><span style="color:#E5C07B;">IBoundLocalizeFunc</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">idx</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">defaultValue</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">null</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">restArgs</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Array</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">slice</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">call</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">arguments</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">_format</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">scope</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">idx</span><span style="color:#ABB2BF;">], </span><span style="color:#E06C75;">restArgs</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">	};</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">createScopedLocalize2</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">scope</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">[]): </span><span style="color:#E5C07B;">IBoundLocalize2Func</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">idx</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">defaultValue</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">, ...</span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> ({</span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">: </span><span style="color:#61AFEF;">_format</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">scope</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">idx</span><span style="color:#ABB2BF;">], </span><span style="color:#E06C75;">args</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#E06C75;">original</span><span style="color:#ABB2BF;">: </span><span style="color:#61AFEF;">_format</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">defaultValue</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">args</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">	});</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * Marks a string to be localized. Returns the localized string.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E06C75;font-style:italic;">info</span><span style="color:#7F848E;font-style:italic;"> The </span><span style="color:#E5C07B;font-style:italic;">{</span><span style="color:#C678DD;font-style:italic;">@linkcode</span><span style="color:#E5C07B;font-style:italic;"> </span><span style="color:#E06C75;font-style:italic;">ILocalizeInfo</span><span style="color:#E5C07B;font-style:italic;">}</span><span style="color:#7F848E;font-style:italic;"> which describes the id and comments associated with the localized string.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E06C75;font-style:italic;">message</span><span style="color:#7F848E;font-style:italic;"> The string to localize</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#7F848E;font-style:italic;"> The arguments to the string</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@note</span><span style="color:#7F848E;font-style:italic;"> \`message\` can contain \`{n}\` notation where it is replaced by the nth value in \`...args\`</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@example</span><span style="color:#7F848E;font-style:italic;"> \`localize({ key: &#39;sayHello&#39;, comment: [&#39;Welcomes user&#39;] }, &#39;hello {0}&#39;, name)\`</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@returns</span><span style="color:#7F848E;font-style:italic;"> string The localized string.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">localize</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">info</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">ILocalizeInfo</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">message</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">, ...</span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">: (</span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">boolean</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">undefined</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">null</span><span style="color:#ABB2BF;">)[]): </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * Marks a string to be localized. Returns the localized string.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E06C75;font-style:italic;">key</span><span style="color:#7F848E;font-style:italic;"> The key to use for localizing the string</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E06C75;font-style:italic;">message</span><span style="color:#7F848E;font-style:italic;"> The string to localize</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#7F848E;font-style:italic;"> The arguments to the string</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@note</span><span style="color:#7F848E;font-style:italic;"> \`message\` can contain \`{n}\` notation where it is replaced by the nth value in \`...args\`</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@example</span><span style="color:#7F848E;font-style:italic;"> For example, \`localize(&#39;sayHello&#39;, &#39;hello {0}&#39;, name)\`</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@returns</span><span style="color:#7F848E;font-style:italic;"> string The localized string.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">localize</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">key</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">message</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">, ...</span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">: (</span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">boolean</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">undefined</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">null</span><span style="color:#ABB2BF;">)[]): </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@skipMangle</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">localize</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">data</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">ILocalizeInfo</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">message</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">, ...</span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">: (</span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">boolean</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">undefined</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">null</span><span style="color:#ABB2BF;">)[]): </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">_format</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">message</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">args</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * Marks a string to be localized. Returns an </span><span style="color:#E5C07B;font-style:italic;">{</span><span style="color:#C678DD;font-style:italic;">@linkcode</span><span style="color:#E5C07B;font-style:italic;"> </span><span style="color:#E06C75;font-style:italic;">ILocalizedString</span><span style="color:#E5C07B;font-style:italic;">}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * which contains the localized string and the original string.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E06C75;font-style:italic;">info</span><span style="color:#7F848E;font-style:italic;"> The </span><span style="color:#E5C07B;font-style:italic;">{</span><span style="color:#C678DD;font-style:italic;">@linkcode</span><span style="color:#E5C07B;font-style:italic;"> </span><span style="color:#E06C75;font-style:italic;">ILocalizeInfo</span><span style="color:#E5C07B;font-style:italic;">}</span><span style="color:#7F848E;font-style:italic;"> which describes the id and comments associated with the localized string.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E06C75;font-style:italic;">message</span><span style="color:#7F848E;font-style:italic;"> The string to localize</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#7F848E;font-style:italic;"> The arguments to the string</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@note</span><span style="color:#7F848E;font-style:italic;"> \`message\` can contain \`{n}\` notation where it is replaced by the nth value in \`...args\`</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@example</span><span style="color:#7F848E;font-style:italic;"> \`localize2({ key: &#39;sayHello&#39;, comment: [&#39;Welcomes user&#39;] }, &#39;hello {0}&#39;, name)\`</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@returns</span><span style="color:#7F848E;font-style:italic;"> ILocalizedString which contains the localized string and the original string.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">localize2</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">info</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">ILocalizeInfo</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">message</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">, ...</span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">: (</span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">boolean</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">undefined</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">null</span><span style="color:#ABB2BF;">)[]): </span><span style="color:#E5C07B;">ILocalizedString</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * Marks a string to be localized. Returns an </span><span style="color:#E5C07B;font-style:italic;">{</span><span style="color:#C678DD;font-style:italic;">@linkcode</span><span style="color:#E5C07B;font-style:italic;"> </span><span style="color:#E06C75;font-style:italic;">ILocalizedString</span><span style="color:#E5C07B;font-style:italic;">}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * which contains the localized string and the original string.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E06C75;font-style:italic;">key</span><span style="color:#7F848E;font-style:italic;"> The key to use for localizing the string</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E06C75;font-style:italic;">message</span><span style="color:#7F848E;font-style:italic;"> The string to localize</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#7F848E;font-style:italic;"> The arguments to the string</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@note</span><span style="color:#7F848E;font-style:italic;"> \`message\` can contain \`{n}\` notation where it is replaced by the nth value in \`...args\`</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@example</span><span style="color:#7F848E;font-style:italic;"> \`localize(&#39;sayHello&#39;, &#39;hello {0}&#39;, name)\`</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@returns</span><span style="color:#7F848E;font-style:italic;"> ILocalizedString which contains the localized string and the original string.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">localize2</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">key</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">message</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">, ...</span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">: (</span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">boolean</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">undefined</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">null</span><span style="color:#ABB2BF;">)[]): </span><span style="color:#E5C07B;">ILocalizedString</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@skipMangle</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">localize2</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">data</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">ILocalizeInfo</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">message</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">, ...</span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">: (</span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">boolean</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">undefined</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">null</span><span style="color:#ABB2BF;">)[]): </span><span style="color:#E5C07B;">ILocalizedString</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">original</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">_format</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">message</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">args</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">original</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#E06C75;">original</span></span>
<span class="line"><span style="color:#ABB2BF;">	};</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E06C75;font-style:italic;">stringFromLocalizeCall</span><span style="color:#7F848E;font-style:italic;"> You must pass in a string that was returned from a \`nls.localize()\` call</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * in order to ensure the loader plugin has been initialized before this function is called.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">getConfiguredDefaultLocale</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">stringFromLocalizeCall</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">): </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">undefined</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@skipMangle</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">getConfiguredDefaultLocale</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">_</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">): </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">undefined</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#7F848E;font-style:italic;">// This returns undefined because this implementation isn&#39;t used and is overwritten by the loader</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#7F848E;font-style:italic;">// when loaded.</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">undefined</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@skipMangle</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">setPseudoTranslation</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">value</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">boolean</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#E06C75;">isPseudo</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * Invoked in a built product at run-time</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@skipMangle</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">create</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">key</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">data</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">IBundledStrings</span><span style="color:#ABB2BF;"> &amp; </span><span style="color:#E5C07B;">IConsumerAPI</span><span style="color:#ABB2BF;">): </span><span style="color:#E5C07B;">IConsumerAPI</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#E06C75;">localize</span><span style="color:#ABB2BF;">: </span><span style="color:#61AFEF;">createScopedLocalize</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">]),</span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#E06C75;">localize2</span><span style="color:#ABB2BF;">: </span><span style="color:#61AFEF;">createScopedLocalize2</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">]),</span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#E06C75;">getConfiguredDefaultLocale</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">data</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">getConfiguredDefaultLocale</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">??</span><span style="color:#ABB2BF;"> ((</span><span style="color:#E06C75;font-style:italic;">_</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">undefined</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">	};</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * Invoked by the loader at run-time</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@skipMangle</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">load</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">req</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">AMDLoader</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">IRelativeRequire</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">load</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">AMDLoader</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">IPluginLoadCallback</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">config</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">AMDLoader</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">IConfigurationOptions</span><span style="color:#ABB2BF;">): </span><span style="color:#E5C07B;">void</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">pluginConfig</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">INLSPluginConfig</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">config</span><span style="color:#ABB2BF;">[</span><span style="color:#98C379;">&#39;vs/nls&#39;</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">??</span><span style="color:#ABB2BF;"> {};</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">||</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">name</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">===</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#7F848E;font-style:italic;">// TODO: We need to give back the mangled names here</span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">load</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#ABB2BF;">			</span><span style="color:#E06C75;">localize</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">localize</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">			</span><span style="color:#E06C75;">localize2</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">localize2</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">			</span><span style="color:#61AFEF;">getConfiguredDefaultLocale</span><span style="color:#ABB2BF;">: () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">pluginConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">availableLanguages</span><span style="color:#ABB2BF;">?.[</span><span style="color:#98C379;">&#39;*&#39;</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">		} </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">IConsumerAPI</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">language</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">pluginConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">availableLanguages</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">findLanguageForModule</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">pluginConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">availableLanguages</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">null</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">useDefaultLanguage</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">language</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">===</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">null</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">||</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">language</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">===</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">DEFAULT_TAG</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#C678DD;">let</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">suffix</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;.nls&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#E06C75;">useDefaultLanguage</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#E06C75;">suffix</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">suffix</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;.&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">language</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">messagesLoaded</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">messages</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">[] | </span><span style="color:#E5C07B;">IBundledStrings</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">Array</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">isArray</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">messages</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#ABB2BF;">			(</span><span style="color:#E06C75;">messages</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">any</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">IConsumerAPI</span><span style="color:#ABB2BF;">).</span><span style="color:#E06C75;">localize</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">createScopedLocalize</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">messages</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			(</span><span style="color:#E06C75;">messages</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">any</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">IConsumerAPI</span><span style="color:#ABB2BF;">).</span><span style="color:#E06C75;">localize2</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">createScopedLocalize2</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">messages</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">		} </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">			(</span><span style="color:#E06C75;">messages</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">any</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">IConsumerAPI</span><span style="color:#ABB2BF;">).</span><span style="color:#E06C75;">localize</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">createScopedLocalize</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">messages</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">]);</span></span>
<span class="line"><span style="color:#ABB2BF;">			(</span><span style="color:#E06C75;">messages</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">any</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">IConsumerAPI</span><span style="color:#ABB2BF;">).</span><span style="color:#E06C75;">localize2</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">createScopedLocalize2</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">messages</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">]);</span></span>
<span class="line"><span style="color:#ABB2BF;">		}</span></span>
<span class="line"><span style="color:#ABB2BF;">		(</span><span style="color:#E06C75;">messages</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">any</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">IConsumerAPI</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">getConfiguredDefaultLocale</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">pluginConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">availableLanguages</span><span style="color:#ABB2BF;">?.[</span><span style="color:#98C379;">&#39;*&#39;</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#61AFEF;">load</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">messages</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">	};</span></span>
<span class="line"><span style="color:#ABB2BF;">	</span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">typeof</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">pluginConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">loadBundle</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">===</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;function&#39;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">		(</span><span style="color:#E5C07B;">pluginConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">loadBundle</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">BundleLoader</span><span style="color:#ABB2BF;">)(</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">language</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;font-style:italic;">err</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Error</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">messages</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">			</span><span style="color:#7F848E;font-style:italic;">// We have an error. Load the English default strings to not fail</span></span>
<span class="line"><span style="color:#ABB2BF;">			</span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">err</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">				</span><span style="color:#61AFEF;">req</span><span style="color:#ABB2BF;">([</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;.nls&#39;</span><span style="color:#ABB2BF;">], </span><span style="color:#E06C75;">messagesLoaded</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			} </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">				</span><span style="color:#61AFEF;">messagesLoaded</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">messages</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"><span style="color:#ABB2BF;">		});</span></span>
<span class="line"><span style="color:#ABB2BF;">	} </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">pluginConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">translationServiceUrl</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&amp;&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">!</span><span style="color:#E06C75;">useDefaultLanguage</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">		(</span><span style="color:#C678DD;">async</span><span style="color:#ABB2BF;"> () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">			</span><span style="color:#C678DD;">try</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">				</span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">messages</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">await</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">getMessagesFromTranslationsService</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">pluginConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">translationServiceUrl</span><span style="color:#56B6C2;">!</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">language</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">				</span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">messagesLoaded</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">messages</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			} </span><span style="color:#C678DD;">catch</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">err</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">				</span><span style="color:#7F848E;font-style:italic;">// Language is already as generic as it gets, so require default messages</span></span>
<span class="line"><span style="color:#ABB2BF;">				</span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#E5C07B;">language</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">includes</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;-&#39;</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#ABB2BF;">					</span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">error</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">err</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">					</span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">req</span><span style="color:#ABB2BF;">([</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;.nls&#39;</span><span style="color:#ABB2BF;">], </span><span style="color:#E06C75;">messagesLoaded</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">				}</span></span>
<span class="line"><span style="color:#ABB2BF;">				</span><span style="color:#C678DD;">try</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">					</span><span style="color:#7F848E;font-style:italic;">// Since there is a dash, the language configured is a specific sub-language of the same generic language.</span></span>
<span class="line"><span style="color:#ABB2BF;">					</span><span style="color:#7F848E;font-style:italic;">// Since we were unable to load the specific language, try to load the generic language. Ex. we failed to find a</span></span>
<span class="line"><span style="color:#ABB2BF;">					</span><span style="color:#7F848E;font-style:italic;">// Swiss German (de-CH), so try to load the generic German (de) messages instead.</span></span>
<span class="line"><span style="color:#ABB2BF;">					</span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">genericLanguage</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">language</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">split</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;-&#39;</span><span style="color:#ABB2BF;">)[</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#ABB2BF;">					</span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">messages</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">await</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">getMessagesFromTranslationsService</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">pluginConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">translationServiceUrl</span><span style="color:#56B6C2;">!</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">genericLanguage</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">					</span><span style="color:#7F848E;font-style:italic;">// We got some messages, so we configure the configuration to use the generic language for this session.</span></span>
<span class="line"><span style="color:#ABB2BF;">					</span><span style="color:#E5C07B;">pluginConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">availableLanguages</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">??=</span><span style="color:#ABB2BF;"> {};</span></span>
<span class="line"><span style="color:#ABB2BF;">					</span><span style="color:#E5C07B;">pluginConfig</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">availableLanguages</span><span style="color:#ABB2BF;">[</span><span style="color:#98C379;">&#39;*&#39;</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">genericLanguage</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">					</span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">messagesLoaded</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">messages</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">				} </span><span style="color:#C678DD;">catch</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">err</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">					</span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">error</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">err</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">					</span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">req</span><span style="color:#ABB2BF;">([</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;.nls&#39;</span><span style="color:#ABB2BF;">], </span><span style="color:#E06C75;">messagesLoaded</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">				}</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"><span style="color:#ABB2BF;">		})();</span></span>
<span class="line"><span style="color:#ABB2BF;">	} </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">		</span><span style="color:#61AFEF;">req</span><span style="color:#ABB2BF;">([</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">suffix</span><span style="color:#ABB2BF;">], </span><span style="color:#E06C75;">messagesLoaded</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;font-style:italic;">err</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Error</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">			</span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">suffix</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">===</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;.nls&#39;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">				</span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">error</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;Failed trying to load default language strings&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">err</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">				</span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">			}</span></span>
<span class="line"><span style="color:#ABB2BF;">			</span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">error</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">\`Failed to load message bundle for language </span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">language</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">. Falling back to the default language:\`</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">err</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">			</span><span style="color:#61AFEF;">req</span><span style="color:#ABB2BF;">([</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;.nls&#39;</span><span style="color:#ABB2BF;">], </span><span style="color:#E06C75;">messagesLoaded</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">		});</span></span>
<span class="line"><span style="color:#ABB2BF;">	}</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#6B737C;">/*---------------------------------------------------------------------------------------------</span></span>
<span class="line"><span style="color:#6B737C;"> *  Copyright (c) Microsoft Corporation. All rights reserved.</span></span>
<span class="line"><span style="color:#6B737C;"> *  Licensed under the MIT License. See License.txt in the project root for license information.</span></span>
<span class="line"><span style="color:#6B737C;"> *--------------------------------------------------------------------------------------------*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#B392F0;"> isPseudo </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> (</span><span style="color:#F97583;">typeof</span><span style="color:#B392F0;"> document </span><span style="color:#F97583;">!==</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;undefined&#39;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">document</span><span style="color:#B392F0;">.location </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">document</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">location</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">hash</span><span style="color:#B392F0;">.indexOf(</span><span style="color:#FFAB70;">&#39;pseudo=true&#39;</span><span style="color:#B392F0;">) </span><span style="color:#F97583;">&gt;=</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">0</span><span style="color:#B392F0;">);</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">DEFAULT_TAG</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;i-default&#39;</span><span style="color:#B392F0;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">interface</span><span style="color:#B392F0;"> INLSPluginConfig {</span></span>
<span class="line"><span style="color:#B392F0;">	availableLanguages</span><span style="color:#F97583;">?:</span><span style="color:#B392F0;"> INLSPluginConfigAvailableLanguages;</span></span>
<span class="line"><span style="color:#B392F0;">	loadBundle</span><span style="color:#F97583;">?:</span><span style="color:#B392F0;"> BundleLoader;</span></span>
<span class="line"><span style="color:#B392F0;">	translationServiceUrl</span><span style="color:#F97583;">?:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">interface</span><span style="color:#B392F0;"> INLSPluginConfigAvailableLanguages {</span></span>
<span class="line"><span style="color:#B392F0;">	</span><span style="color:#FFAB70;">&#39;*&#39;</span><span style="color:#F97583;">?:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">	[module</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">]</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">interface</span><span style="color:#B392F0;"> BundleLoader {</span></span>
<span class="line"><span style="color:#B392F0;">	(bundle</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> locale</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">null</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> cb</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> (err</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> Error</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> messages</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">[] </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> IBundledStrings) </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">void</span><span style="color:#B392F0;">)</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">void</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">interface</span><span style="color:#B392F0;"> IBundledStrings {</span></span>
<span class="line"><span style="color:#B392F0;">	[moduleId</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">]</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">[];</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">interface</span><span style="color:#B392F0;"> ILocalizeInfo {</span></span>
<span class="line"><span style="color:#B392F0;">	key</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">	comment</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">[];</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">interface</span><span style="color:#B392F0;"> ILocalizedString {</span></span>
<span class="line"><span style="color:#B392F0;">	original</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">	value</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">interface</span><span style="color:#B392F0;"> ILocalizeFunc {</span></span>
<span class="line"><span style="color:#B392F0;">	(info</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> ILocalizeInfo</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> message</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">...</span><span style="color:#B392F0;">args</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> (</span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">number</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">null</span><span style="color:#B392F0;">)[])</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">	(key</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> message</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">...</span><span style="color:#B392F0;">args</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> (</span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">number</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">null</span><span style="color:#B392F0;">)[])</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">interface</span><span style="color:#B392F0;"> IBoundLocalizeFunc {</span></span>
<span class="line"><span style="color:#B392F0;">	(idx</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">number</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> defaultValue</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">null</span><span style="color:#B392F0;">)</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">interface</span><span style="color:#B392F0;"> ILocalize2Func {</span></span>
<span class="line"><span style="color:#B392F0;">	(info</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> ILocalizeInfo</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> message</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">...</span><span style="color:#B392F0;">args</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> (</span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">number</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">null</span><span style="color:#B392F0;">)[])</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> ILocalizedString;</span></span>
<span class="line"><span style="color:#B392F0;">	(key</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> message</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">...</span><span style="color:#B392F0;">args</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> (</span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">number</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">null</span><span style="color:#B392F0;">)[])</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> ILocalizedString;</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">interface</span><span style="color:#B392F0;"> IBoundLocalize2Func {</span></span>
<span class="line"><span style="color:#B392F0;">	(idx</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">number</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> defaultValue</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">)</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> ILocalizedString;</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">interface</span><span style="color:#B392F0;"> IConsumerAPI {</span></span>
<span class="line"><span style="color:#B392F0;">	localize</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> ILocalizeFunc </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> IBoundLocalizeFunc;</span></span>
<span class="line"><span style="color:#B392F0;">	localize2</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> ILocalize2Func </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> IBoundLocalize2Func;</span></span>
<span class="line"><span style="color:#B392F0;">	getConfiguredDefaultLocale(stringFromLocalizeCall</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">)</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> _format(message</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> args</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> (</span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">number</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">null</span><span style="color:#B392F0;">)[])</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">	</span><span style="color:#F97583;">let</span><span style="color:#B392F0;"> result</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">	</span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (</span><span style="color:#79B8FF;">args</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">length</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">===</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">0</span><span style="color:#B392F0;">) {</span></span>
<span class="line"><span style="color:#B392F0;">		result </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> message;</span></span>
<span class="line"><span style="color:#B392F0;">	} </span><span style="color:#F97583;">else</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">		result </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">message</span><span style="color:#B392F0;">.replace(</span><span style="color:#FFAB70;">/\\{(\\d</span><span style="color:#F97583;">+</span><span style="color:#FFAB70;">)\\}/</span><span style="color:#F97583;">g</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> (match</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> rest) </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">			</span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">index</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> rest[</span><span style="color:#F8F8F8;">0</span><span style="color:#B392F0;">];</span></span>
<span class="line"><span style="color:#B392F0;">			</span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">arg</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> args[index];</span></span>
<span class="line"><span style="color:#B392F0;">			</span><span style="color:#F97583;">let</span><span style="color:#B392F0;"> result </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> match;</span></span>
<span class="line"><span style="color:#B392F0;">			</span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (</span><span style="color:#F97583;">typeof</span><span style="color:#B392F0;"> arg </span><span style="color:#F97583;">===</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;string&#39;</span><span style="color:#B392F0;">) {</span></span>
<span class="line"><span style="color:#B392F0;">				result </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> arg;</span></span>
<span class="line"><span style="color:#B392F0;">			} </span><span style="color:#F97583;">else</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (</span><span style="color:#F97583;">typeof</span><span style="color:#B392F0;"> arg </span><span style="color:#F97583;">===</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;number&#39;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">||</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">typeof</span><span style="color:#B392F0;"> arg </span><span style="color:#F97583;">===</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;boolean&#39;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">||</span><span style="color:#B392F0;"> arg </span><span style="color:#F97583;">===</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">void</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">0</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">||</span><span style="color:#B392F0;"> arg </span><span style="color:#F97583;">===</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">null</span><span style="color:#B392F0;">) {</span></span>
<span class="line"><span style="color:#B392F0;">				result </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> String(arg);</span></span>
<span class="line"><span style="color:#B392F0;">			}</span></span>
<span class="line"><span style="color:#B392F0;">			</span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> result;</span></span>
<span class="line"><span style="color:#B392F0;">		});</span></span>
<span class="line"><span style="color:#B392F0;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">	</span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (isPseudo) {</span></span>
<span class="line"><span style="color:#B392F0;">		</span><span style="color:#6B737C;">// FF3B and FF3D is the Unicode zenkaku representation for [ and ]</span></span>
<span class="line"><span style="color:#B392F0;">		result </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;\\uFF3B&#39;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">+</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">result</span><span style="color:#B392F0;">.replace(</span><span style="color:#FFAB70;">/[aouei]/</span><span style="color:#F97583;">g</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;$&amp;$&amp;&#39;</span><span style="color:#B392F0;">) </span><span style="color:#F97583;">+</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;\\uFF3D&#39;</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">	</span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> result;</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> findLanguageForModule(config</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> INLSPluginConfigAvailableLanguages</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> name</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">) {</span></span>
<span class="line"><span style="color:#B392F0;">	</span><span style="color:#F97583;">let</span><span style="color:#B392F0;"> result </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> config[name];</span></span>
<span class="line"><span style="color:#B392F0;">	</span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (result) {</span></span>
<span class="line"><span style="color:#B392F0;">		</span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> result;</span></span>
<span class="line"><span style="color:#B392F0;">	}</span></span>
<span class="line"><span style="color:#B392F0;">	result </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> config[</span><span style="color:#FFAB70;">&#39;*&#39;</span><span style="color:#B392F0;">];</span></span>
<span class="line"><span style="color:#B392F0;">	</span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (result) {</span></span>
<span class="line"><span style="color:#B392F0;">		</span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> result;</span></span>
<span class="line"><span style="color:#B392F0;">	}</span></span>
<span class="line"><span style="color:#B392F0;">	</span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">null</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> endWithSlash(path</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">)</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">	</span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (</span><span style="color:#79B8FF;">path</span><span style="color:#B392F0;">.charAt(</span><span style="color:#79B8FF;">path</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">length</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">-</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">1</span><span style="color:#B392F0;">) </span><span style="color:#F97583;">===</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;/&#39;</span><span style="color:#B392F0;">) {</span></span>
<span class="line"><span style="color:#B392F0;">		</span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> path;</span></span>
<span class="line"><span style="color:#B392F0;">	}</span></span>
<span class="line"><span style="color:#B392F0;">	</span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> path </span><span style="color:#F97583;">+</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;/&#39;</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">async</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">function</span><span style="color:#B392F0;"> getMessagesFromTranslationsService(translationServiceUrl</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> language</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> name</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">)</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> Promise&lt;</span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">[] </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> IBundledStrings&gt; {</span></span>
<span class="line"><span style="color:#B392F0;">	</span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">url</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> endWithSlash(translationServiceUrl) </span><span style="color:#F97583;">+</span><span style="color:#B392F0;"> endWithSlash(language) </span><span style="color:#F97583;">+</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;vscode/&#39;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">+</span><span style="color:#B392F0;"> endWithSlash(name);</span></span>
<span class="line"><span style="color:#B392F0;">	</span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">res</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">await</span><span style="color:#B392F0;"> fetch(url);</span></span>
<span class="line"><span style="color:#B392F0;">	</span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (</span><span style="color:#79B8FF;">res</span><span style="color:#B392F0;">.ok) {</span></span>
<span class="line"><span style="color:#B392F0;">		</span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">messages</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">await</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">res</span><span style="color:#B392F0;">.json() </span><span style="color:#F97583;">as</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">[] </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> IBundledStrings;</span></span>
<span class="line"><span style="color:#B392F0;">		</span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> messages;</span></span>
<span class="line"><span style="color:#B392F0;">	}</span></span>
<span class="line"><span style="color:#B392F0;">	</span><span style="color:#F97583;">throw</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">new</span><span style="color:#B392F0;"> Error(</span><span style="color:#FFAB70;">\`</span><span style="color:#F97583;">\${</span><span style="color:#79B8FF;">res</span><span style="color:#B392F0;">.status</span><span style="color:#F97583;">}</span><span style="color:#FFAB70;"> - </span><span style="color:#F97583;">\${</span><span style="color:#79B8FF;">res</span><span style="color:#B392F0;">.statusText</span><span style="color:#F97583;">}</span><span style="color:#FFAB70;">\`</span><span style="color:#B392F0;">);</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> createScopedLocalize(scope</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">[])</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> IBoundLocalizeFunc {</span></span>
<span class="line"><span style="color:#B392F0;">	</span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">function</span><span style="color:#B392F0;"> (idx</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">number</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> defaultValue</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">null</span><span style="color:#B392F0;">) {</span></span>
<span class="line"><span style="color:#B392F0;">		</span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">restArgs</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">Array</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">prototype</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">slice</span><span style="color:#B392F0;">.call(arguments</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">2</span><span style="color:#B392F0;">);</span></span>
<span class="line"><span style="color:#B392F0;">		</span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> _format(scope[idx]</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> restArgs);</span></span>
<span class="line"><span style="color:#B392F0;">	};</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> createScopedLocalize2(scope</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">[])</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> IBoundLocalize2Func {</span></span>
<span class="line"><span style="color:#B392F0;">	</span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> (idx</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">number</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> defaultValue</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">...</span><span style="color:#B392F0;">args) </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> ({</span></span>
<span class="line"><span style="color:#B392F0;">		value</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> _format(scope[idx]</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> args)</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">		original</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> _format(defaultValue</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> args)</span></span>
<span class="line"><span style="color:#B392F0;">	});</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">/**</span></span>
<span class="line"><span style="color:#6B737C;"> * Marks a string to be localized. Returns the localized string.</span></span>
<span class="line"><span style="color:#6B737C;"> *</span></span>
<span class="line"><span style="color:#6B737C;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6B737C;"> info The </span><span style="color:#B392F0;">{</span><span style="color:#F97583;">@linkcode</span><span style="color:#B392F0;"> ILocalizeInfo}</span><span style="color:#6B737C;"> which describes the id and comments associated with the localized string.</span></span>
<span class="line"><span style="color:#6B737C;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6B737C;"> message The string to localize</span></span>
<span class="line"><span style="color:#6B737C;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6B737C;"> args The arguments to the string</span></span>
<span class="line"><span style="color:#6B737C;"> *</span></span>
<span class="line"><span style="color:#6B737C;"> * </span><span style="color:#F97583;">@note</span><span style="color:#6B737C;"> \`message\` can contain \`{n}\` notation where it is replaced by the nth value in \`...args\`</span></span>
<span class="line"><span style="color:#6B737C;"> * </span><span style="color:#F97583;">@example</span><span style="color:#6B737C;"> \`localize({ key: &#39;sayHello&#39;, comment: [&#39;Welcomes user&#39;] }, &#39;hello {0}&#39;, name)\`</span></span>
<span class="line"><span style="color:#6B737C;"> *</span></span>
<span class="line"><span style="color:#6B737C;"> * </span><span style="color:#F97583;">@returns</span><span style="color:#6B737C;"> string The localized string.</span></span>
<span class="line"><span style="color:#6B737C;"> */</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">function</span><span style="color:#B392F0;"> localize(info</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> ILocalizeInfo</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> message</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">...</span><span style="color:#B392F0;">args</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> (</span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">number</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">null</span><span style="color:#B392F0;">)[])</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">/**</span></span>
<span class="line"><span style="color:#6B737C;"> * Marks a string to be localized. Returns the localized string.</span></span>
<span class="line"><span style="color:#6B737C;"> *</span></span>
<span class="line"><span style="color:#6B737C;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6B737C;"> key The key to use for localizing the string</span></span>
<span class="line"><span style="color:#6B737C;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6B737C;"> message The string to localize</span></span>
<span class="line"><span style="color:#6B737C;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6B737C;"> args The arguments to the string</span></span>
<span class="line"><span style="color:#6B737C;"> *</span></span>
<span class="line"><span style="color:#6B737C;"> * </span><span style="color:#F97583;">@note</span><span style="color:#6B737C;"> \`message\` can contain \`{n}\` notation where it is replaced by the nth value in \`...args\`</span></span>
<span class="line"><span style="color:#6B737C;"> * </span><span style="color:#F97583;">@example</span><span style="color:#6B737C;"> For example, \`localize(&#39;sayHello&#39;, &#39;hello {0}&#39;, name)\`</span></span>
<span class="line"><span style="color:#6B737C;"> *</span></span>
<span class="line"><span style="color:#6B737C;"> * </span><span style="color:#F97583;">@returns</span><span style="color:#6B737C;"> string The localized string.</span></span>
<span class="line"><span style="color:#6B737C;"> */</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">function</span><span style="color:#B392F0;"> localize(key</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> message</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">...</span><span style="color:#B392F0;">args</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> (</span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">number</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">null</span><span style="color:#B392F0;">)[])</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">/**</span></span>
<span class="line"><span style="color:#6B737C;"> * </span><span style="color:#F97583;">@skipMangle</span></span>
<span class="line"><span style="color:#6B737C;"> */</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">function</span><span style="color:#B392F0;"> localize(data</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> ILocalizeInfo </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> message</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">...</span><span style="color:#B392F0;">args</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> (</span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">number</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">null</span><span style="color:#B392F0;">)[])</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">	</span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> _format(message</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> args);</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">/**</span></span>
<span class="line"><span style="color:#6B737C;"> * Marks a string to be localized. Returns an </span><span style="color:#B392F0;">{</span><span style="color:#F97583;">@linkcode</span><span style="color:#B392F0;"> ILocalizedString}</span></span>
<span class="line"><span style="color:#6B737C;"> * which contains the localized string and the original string.</span></span>
<span class="line"><span style="color:#6B737C;"> *</span></span>
<span class="line"><span style="color:#6B737C;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6B737C;"> info The </span><span style="color:#B392F0;">{</span><span style="color:#F97583;">@linkcode</span><span style="color:#B392F0;"> ILocalizeInfo}</span><span style="color:#6B737C;"> which describes the id and comments associated with the localized string.</span></span>
<span class="line"><span style="color:#6B737C;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6B737C;"> message The string to localize</span></span>
<span class="line"><span style="color:#6B737C;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6B737C;"> args The arguments to the string</span></span>
<span class="line"><span style="color:#6B737C;"> *</span></span>
<span class="line"><span style="color:#6B737C;"> * </span><span style="color:#F97583;">@note</span><span style="color:#6B737C;"> \`message\` can contain \`{n}\` notation where it is replaced by the nth value in \`...args\`</span></span>
<span class="line"><span style="color:#6B737C;"> * </span><span style="color:#F97583;">@example</span><span style="color:#6B737C;"> \`localize2({ key: &#39;sayHello&#39;, comment: [&#39;Welcomes user&#39;] }, &#39;hello {0}&#39;, name)\`</span></span>
<span class="line"><span style="color:#6B737C;"> *</span></span>
<span class="line"><span style="color:#6B737C;"> * </span><span style="color:#F97583;">@returns</span><span style="color:#6B737C;"> ILocalizedString which contains the localized string and the original string.</span></span>
<span class="line"><span style="color:#6B737C;"> */</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">function</span><span style="color:#B392F0;"> localize2(info</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> ILocalizeInfo</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> message</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">...</span><span style="color:#B392F0;">args</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> (</span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">number</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">null</span><span style="color:#B392F0;">)[])</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> ILocalizedString;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">/**</span></span>
<span class="line"><span style="color:#6B737C;"> * Marks a string to be localized. Returns an </span><span style="color:#B392F0;">{</span><span style="color:#F97583;">@linkcode</span><span style="color:#B392F0;"> ILocalizedString}</span></span>
<span class="line"><span style="color:#6B737C;"> * which contains the localized string and the original string.</span></span>
<span class="line"><span style="color:#6B737C;"> *</span></span>
<span class="line"><span style="color:#6B737C;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6B737C;"> key The key to use for localizing the string</span></span>
<span class="line"><span style="color:#6B737C;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6B737C;"> message The string to localize</span></span>
<span class="line"><span style="color:#6B737C;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6B737C;"> args The arguments to the string</span></span>
<span class="line"><span style="color:#6B737C;"> *</span></span>
<span class="line"><span style="color:#6B737C;"> * </span><span style="color:#F97583;">@note</span><span style="color:#6B737C;"> \`message\` can contain \`{n}\` notation where it is replaced by the nth value in \`...args\`</span></span>
<span class="line"><span style="color:#6B737C;"> * </span><span style="color:#F97583;">@example</span><span style="color:#6B737C;"> \`localize(&#39;sayHello&#39;, &#39;hello {0}&#39;, name)\`</span></span>
<span class="line"><span style="color:#6B737C;"> *</span></span>
<span class="line"><span style="color:#6B737C;"> * </span><span style="color:#F97583;">@returns</span><span style="color:#6B737C;"> ILocalizedString which contains the localized string and the original string.</span></span>
<span class="line"><span style="color:#6B737C;"> */</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">function</span><span style="color:#B392F0;"> localize2(key</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> message</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">...</span><span style="color:#B392F0;">args</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> (</span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">number</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">null</span><span style="color:#B392F0;">)[])</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> ILocalizedString;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">/**</span></span>
<span class="line"><span style="color:#6B737C;"> * </span><span style="color:#F97583;">@skipMangle</span></span>
<span class="line"><span style="color:#6B737C;"> */</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">function</span><span style="color:#B392F0;"> localize2(data</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> ILocalizeInfo </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> message</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">...</span><span style="color:#B392F0;">args</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> (</span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">number</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">null</span><span style="color:#B392F0;">)[])</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> ILocalizedString {</span></span>
<span class="line"><span style="color:#B392F0;">	</span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">original</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> _format(message</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> args);</span></span>
<span class="line"><span style="color:#B392F0;">	</span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">		value</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> original</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">		original</span></span>
<span class="line"><span style="color:#B392F0;">	};</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">/**</span></span>
<span class="line"><span style="color:#6B737C;"> *</span></span>
<span class="line"><span style="color:#6B737C;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6B737C;"> stringFromLocalizeCall You must pass in a string that was returned from a \`nls.localize()\` call</span></span>
<span class="line"><span style="color:#6B737C;"> * in order to ensure the loader plugin has been initialized before this function is called.</span></span>
<span class="line"><span style="color:#6B737C;"> */</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">function</span><span style="color:#B392F0;"> getConfiguredDefaultLocale(stringFromLocalizeCall</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">)</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#6B737C;">/**</span></span>
<span class="line"><span style="color:#6B737C;"> * </span><span style="color:#F97583;">@skipMangle</span></span>
<span class="line"><span style="color:#6B737C;"> */</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">function</span><span style="color:#B392F0;"> getConfiguredDefaultLocale(_</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">)</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">	</span><span style="color:#6B737C;">// This returns undefined because this implementation isn&#39;t used and is overwritten by the loader</span></span>
<span class="line"><span style="color:#B392F0;">	</span><span style="color:#6B737C;">// when loaded.</span></span>
<span class="line"><span style="color:#B392F0;">	</span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">/**</span></span>
<span class="line"><span style="color:#6B737C;"> * </span><span style="color:#F97583;">@skipMangle</span></span>
<span class="line"><span style="color:#6B737C;"> */</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">function</span><span style="color:#B392F0;"> setPseudoTranslation(value</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#B392F0;">) {</span></span>
<span class="line"><span style="color:#B392F0;">	isPseudo </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> value;</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">/**</span></span>
<span class="line"><span style="color:#6B737C;"> * Invoked in a built product at run-time</span></span>
<span class="line"><span style="color:#6B737C;"> * </span><span style="color:#F97583;">@skipMangle</span></span>
<span class="line"><span style="color:#6B737C;"> */</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">function</span><span style="color:#B392F0;"> create(key</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> data</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> IBundledStrings </span><span style="color:#F97583;">&amp;</span><span style="color:#B392F0;"> IConsumerAPI)</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> IConsumerAPI {</span></span>
<span class="line"><span style="color:#B392F0;">	</span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">		localize</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> createScopedLocalize(data[key])</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">		localize2</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> createScopedLocalize2(data[key])</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">		getConfiguredDefaultLocale</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">data</span><span style="color:#B392F0;">.getConfiguredDefaultLocale </span><span style="color:#F97583;">??</span><span style="color:#B392F0;"> ((_</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#B392F0;">)</span></span>
<span class="line"><span style="color:#B392F0;">	};</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">/**</span></span>
<span class="line"><span style="color:#6B737C;"> * Invoked by the loader at run-time</span></span>
<span class="line"><span style="color:#6B737C;"> * </span><span style="color:#F97583;">@skipMangle</span></span>
<span class="line"><span style="color:#6B737C;"> */</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">function</span><span style="color:#B392F0;"> load(name</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> req</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> AMDLoader.IRelativeRequire</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> load</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> AMDLoader.IPluginLoadCallback</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> config</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> AMDLoader.IConfigurationOptions)</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">void</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">	</span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">pluginConfig</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> INLSPluginConfig </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> config[</span><span style="color:#FFAB70;">&#39;vs/nls&#39;</span><span style="color:#B392F0;">] </span><span style="color:#F97583;">??</span><span style="color:#B392F0;"> {};</span></span>
<span class="line"><span style="color:#B392F0;">	</span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (</span><span style="color:#F97583;">!</span><span style="color:#B392F0;">name </span><span style="color:#F97583;">||</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">name</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">length</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">===</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">0</span><span style="color:#B392F0;">) {</span></span>
<span class="line"><span style="color:#B392F0;">		</span><span style="color:#6B737C;">// TODO: We need to give back the mangled names here</span></span>
<span class="line"><span style="color:#B392F0;">		</span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> load({</span></span>
<span class="line"><span style="color:#B392F0;">			localize</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> localize</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">			localize2</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> localize2</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">			getConfiguredDefaultLocale</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">pluginConfig</span><span style="color:#B392F0;">.availableLanguages?.[</span><span style="color:#FFAB70;">&#39;*&#39;</span><span style="color:#B392F0;">]</span></span>
<span class="line"><span style="color:#B392F0;">		} </span><span style="color:#F97583;">as</span><span style="color:#B392F0;"> IConsumerAPI);</span></span>
<span class="line"><span style="color:#B392F0;">	}</span></span>
<span class="line"><span style="color:#B392F0;">	</span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">language</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">pluginConfig</span><span style="color:#B392F0;">.availableLanguages </span><span style="color:#F97583;">?</span><span style="color:#B392F0;"> findLanguageForModule(</span><span style="color:#79B8FF;">pluginConfig</span><span style="color:#B392F0;">.availableLanguages</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> name) </span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">null</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">	</span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">useDefaultLanguage</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> language </span><span style="color:#F97583;">===</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">null</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">||</span><span style="color:#B392F0;"> language </span><span style="color:#F97583;">===</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">DEFAULT_TAG</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">	</span><span style="color:#F97583;">let</span><span style="color:#B392F0;"> suffix </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;.nls&#39;</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">	</span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (</span><span style="color:#F97583;">!</span><span style="color:#B392F0;">useDefaultLanguage) {</span></span>
<span class="line"><span style="color:#B392F0;">		suffix </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> suffix </span><span style="color:#F97583;">+</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;.&#39;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">+</span><span style="color:#B392F0;"> language;</span></span>
<span class="line"><span style="color:#B392F0;">	}</span></span>
<span class="line"><span style="color:#B392F0;">	</span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> messagesLoaded </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> (messages</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">[] </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> IBundledStrings) </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">		</span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (</span><span style="color:#79B8FF;">Array</span><span style="color:#B392F0;">.isArray(messages)) {</span></span>
<span class="line"><span style="color:#B392F0;">			(messages </span><span style="color:#F97583;">as</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">any</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">as</span><span style="color:#B392F0;"> IConsumerAPI).localize </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> createScopedLocalize(messages);</span></span>
<span class="line"><span style="color:#B392F0;">			(messages </span><span style="color:#F97583;">as</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">any</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">as</span><span style="color:#B392F0;"> IConsumerAPI).localize2 </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> createScopedLocalize2(messages);</span></span>
<span class="line"><span style="color:#B392F0;">		} </span><span style="color:#F97583;">else</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">			(messages </span><span style="color:#F97583;">as</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">any</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">as</span><span style="color:#B392F0;"> IConsumerAPI).localize </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> createScopedLocalize(messages[name]);</span></span>
<span class="line"><span style="color:#B392F0;">			(messages </span><span style="color:#F97583;">as</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">any</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">as</span><span style="color:#B392F0;"> IConsumerAPI).localize2 </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> createScopedLocalize2(messages[name]);</span></span>
<span class="line"><span style="color:#B392F0;">		}</span></span>
<span class="line"><span style="color:#B392F0;">		(messages </span><span style="color:#F97583;">as</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">any</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">as</span><span style="color:#B392F0;"> IConsumerAPI).getConfiguredDefaultLocale </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">pluginConfig</span><span style="color:#B392F0;">.availableLanguages?.[</span><span style="color:#FFAB70;">&#39;*&#39;</span><span style="color:#B392F0;">];</span></span>
<span class="line"><span style="color:#B392F0;">		load(messages);</span></span>
<span class="line"><span style="color:#B392F0;">	};</span></span>
<span class="line"><span style="color:#B392F0;">	</span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (</span><span style="color:#F97583;">typeof</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">pluginConfig</span><span style="color:#B392F0;">.loadBundle </span><span style="color:#F97583;">===</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;function&#39;</span><span style="color:#B392F0;">) {</span></span>
<span class="line"><span style="color:#B392F0;">		(</span><span style="color:#79B8FF;">pluginConfig</span><span style="color:#B392F0;">.loadBundle </span><span style="color:#F97583;">as</span><span style="color:#B392F0;"> BundleLoader)(name</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> language</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> (err</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> Error</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> messages) </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">			</span><span style="color:#6B737C;">// We have an error. Load the English default strings to not fail</span></span>
<span class="line"><span style="color:#B392F0;">			</span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (err) {</span></span>
<span class="line"><span style="color:#B392F0;">				req([name </span><span style="color:#F97583;">+</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;.nls&#39;</span><span style="color:#B392F0;">]</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> messagesLoaded);</span></span>
<span class="line"><span style="color:#B392F0;">			} </span><span style="color:#F97583;">else</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">				messagesLoaded(messages);</span></span>
<span class="line"><span style="color:#B392F0;">			}</span></span>
<span class="line"><span style="color:#B392F0;">		});</span></span>
<span class="line"><span style="color:#B392F0;">	} </span><span style="color:#F97583;">else</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (</span><span style="color:#79B8FF;">pluginConfig</span><span style="color:#B392F0;">.translationServiceUrl </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">!</span><span style="color:#B392F0;">useDefaultLanguage) {</span></span>
<span class="line"><span style="color:#B392F0;">		(</span><span style="color:#F97583;">async</span><span style="color:#B392F0;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">			</span><span style="color:#F97583;">try</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">				</span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">messages</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">await</span><span style="color:#B392F0;"> getMessagesFromTranslationsService(</span><span style="color:#79B8FF;">pluginConfig</span><span style="color:#B392F0;">.translationServiceUrl</span><span style="color:#F97583;">!</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> language</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> name);</span></span>
<span class="line"><span style="color:#B392F0;">				</span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> messagesLoaded(messages);</span></span>
<span class="line"><span style="color:#B392F0;">			} </span><span style="color:#F97583;">catch</span><span style="color:#B392F0;"> (err) {</span></span>
<span class="line"><span style="color:#B392F0;">				</span><span style="color:#6B737C;">// Language is already as generic as it gets, so require default messages</span></span>
<span class="line"><span style="color:#B392F0;">				</span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (</span><span style="color:#F97583;">!</span><span style="color:#79B8FF;">language</span><span style="color:#B392F0;">.includes(</span><span style="color:#FFAB70;">&#39;-&#39;</span><span style="color:#B392F0;">)) {</span></span>
<span class="line"><span style="color:#B392F0;">					</span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.error(err);</span></span>
<span class="line"><span style="color:#B392F0;">					</span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> req([name </span><span style="color:#F97583;">+</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;.nls&#39;</span><span style="color:#B392F0;">]</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> messagesLoaded);</span></span>
<span class="line"><span style="color:#B392F0;">				}</span></span>
<span class="line"><span style="color:#B392F0;">				</span><span style="color:#F97583;">try</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">					</span><span style="color:#6B737C;">// Since there is a dash, the language configured is a specific sub-language of the same generic language.</span></span>
<span class="line"><span style="color:#B392F0;">					</span><span style="color:#6B737C;">// Since we were unable to load the specific language, try to load the generic language. Ex. we failed to find a</span></span>
<span class="line"><span style="color:#B392F0;">					</span><span style="color:#6B737C;">// Swiss German (de-CH), so try to load the generic German (de) messages instead.</span></span>
<span class="line"><span style="color:#B392F0;">					</span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">genericLanguage</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">language</span><span style="color:#B392F0;">.split(</span><span style="color:#FFAB70;">&#39;-&#39;</span><span style="color:#B392F0;">)[</span><span style="color:#F8F8F8;">0</span><span style="color:#B392F0;">];</span></span>
<span class="line"><span style="color:#B392F0;">					</span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">messages</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">await</span><span style="color:#B392F0;"> getMessagesFromTranslationsService(</span><span style="color:#79B8FF;">pluginConfig</span><span style="color:#B392F0;">.translationServiceUrl</span><span style="color:#F97583;">!</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> genericLanguage</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> name);</span></span>
<span class="line"><span style="color:#B392F0;">					</span><span style="color:#6B737C;">// We got some messages, so we configure the configuration to use the generic language for this session.</span></span>
<span class="line"><span style="color:#B392F0;">					</span><span style="color:#79B8FF;">pluginConfig</span><span style="color:#B392F0;">.availableLanguages </span><span style="color:#F97583;">??=</span><span style="color:#B392F0;"> {};</span></span>
<span class="line"><span style="color:#B392F0;">					</span><span style="color:#79B8FF;">pluginConfig</span><span style="color:#B392F0;">.availableLanguages[</span><span style="color:#FFAB70;">&#39;*&#39;</span><span style="color:#B392F0;">] </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> genericLanguage;</span></span>
<span class="line"><span style="color:#B392F0;">					</span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> messagesLoaded(messages);</span></span>
<span class="line"><span style="color:#B392F0;">				} </span><span style="color:#F97583;">catch</span><span style="color:#B392F0;"> (err) {</span></span>
<span class="line"><span style="color:#B392F0;">					</span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.error(err);</span></span>
<span class="line"><span style="color:#B392F0;">					</span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> req([name </span><span style="color:#F97583;">+</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;.nls&#39;</span><span style="color:#B392F0;">]</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> messagesLoaded);</span></span>
<span class="line"><span style="color:#B392F0;">				}</span></span>
<span class="line"><span style="color:#B392F0;">			}</span></span>
<span class="line"><span style="color:#B392F0;">		})();</span></span>
<span class="line"><span style="color:#B392F0;">	} </span><span style="color:#F97583;">else</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">		req([name </span><span style="color:#F97583;">+</span><span style="color:#B392F0;"> suffix]</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> messagesLoaded</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> (err</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> Error) </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">			</span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (suffix </span><span style="color:#F97583;">===</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;.nls&#39;</span><span style="color:#B392F0;">) {</span></span>
<span class="line"><span style="color:#B392F0;">				</span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.error(</span><span style="color:#FFAB70;">&#39;Failed trying to load default language strings&#39;</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> err);</span></span>
<span class="line"><span style="color:#B392F0;">				</span><span style="color:#F97583;">return</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">			}</span></span>
<span class="line"><span style="color:#B392F0;">			</span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.error(</span><span style="color:#FFAB70;">\`Failed to load message bundle for language </span><span style="color:#F97583;">\${</span><span style="color:#B392F0;">language</span><span style="color:#F97583;">}</span><span style="color:#FFAB70;">. Falling back to the default language:\`</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> err);</span></span>
<span class="line"><span style="color:#B392F0;">			req([name </span><span style="color:#F97583;">+</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;.nls&#39;</span><span style="color:#B392F0;">]</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> messagesLoaded);</span></span>
<span class="line"><span style="color:#B392F0;">		});</span></span>
<span class="line"><span style="color:#B392F0;">	}</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br><span class="line-number">174</span><br><span class="line-number">175</span><br><span class="line-number">176</span><br><span class="line-number">177</span><br><span class="line-number">178</span><br><span class="line-number">179</span><br><span class="line-number">180</span><br><span class="line-number">181</span><br><span class="line-number">182</span><br><span class="line-number">183</span><br><span class="line-number">184</span><br><span class="line-number">185</span><br><span class="line-number">186</span><br><span class="line-number">187</span><br><span class="line-number">188</span><br><span class="line-number">189</span><br><span class="line-number">190</span><br><span class="line-number">191</span><br><span class="line-number">192</span><br><span class="line-number">193</span><br><span class="line-number">194</span><br><span class="line-number">195</span><br><span class="line-number">196</span><br><span class="line-number">197</span><br><span class="line-number">198</span><br><span class="line-number">199</span><br><span class="line-number">200</span><br><span class="line-number">201</span><br><span class="line-number">202</span><br><span class="line-number">203</span><br><span class="line-number">204</span><br><span class="line-number">205</span><br><span class="line-number">206</span><br><span class="line-number">207</span><br><span class="line-number">208</span><br><span class="line-number">209</span><br><span class="line-number">210</span><br><span class="line-number">211</span><br><span class="line-number">212</span><br><span class="line-number">213</span><br><span class="line-number">214</span><br><span class="line-number">215</span><br><span class="line-number">216</span><br><span class="line-number">217</span><br><span class="line-number">218</span><br><span class="line-number">219</span><br><span class="line-number">220</span><br><span class="line-number">221</span><br><span class="line-number">222</span><br><span class="line-number">223</span><br><span class="line-number">224</span><br><span class="line-number">225</span><br><span class="line-number">226</span><br><span class="line-number">227</span><br><span class="line-number">228</span><br><span class="line-number">229</span><br><span class="line-number">230</span><br><span class="line-number">231</span><br><span class="line-number">232</span><br><span class="line-number">233</span><br><span class="line-number">234</span><br><span class="line-number">235</span><br><span class="line-number">236</span><br><span class="line-number">237</span><br><span class="line-number">238</span><br><span class="line-number">239</span><br><span class="line-number">240</span><br><span class="line-number">241</span><br><span class="line-number">242</span><br><span class="line-number">243</span><br><span class="line-number">244</span><br><span class="line-number">245</span><br><span class="line-number">246</span><br><span class="line-number">247</span><br><span class="line-number">248</span><br><span class="line-number">249</span><br><span class="line-number">250</span><br><span class="line-number">251</span><br><span class="line-number">252</span><br><span class="line-number">253</span><br><span class="line-number">254</span><br><span class="line-number">255</span><br><span class="line-number">256</span><br><span class="line-number">257</span><br><span class="line-number">258</span><br><span class="line-number">259</span><br><span class="line-number">260</span><br><span class="line-number">261</span><br><span class="line-number">262</span><br><span class="line-number">263</span><br><span class="line-number">264</span><br><span class="line-number">265</span><br><span class="line-number">266</span><br><span class="line-number">267</span><br><span class="line-number">268</span><br><span class="line-number">269</span><br><span class="line-number">270</span><br><span class="line-number">271</span><br><span class="line-number">272</span><br><span class="line-number">273</span><br><span class="line-number">274</span><br><span class="line-number">275</span><br><span class="line-number">276</span><br><span class="line-number">277</span><br><span class="line-number">278</span><br><span class="line-number">279</span><br><span class="line-number">280</span><br><span class="line-number">281</span><br><span class="line-number">282</span><br><span class="line-number">283</span><br><span class="line-number">284</span><br><span class="line-number">285</span><br><span class="line-number">286</span><br><span class="line-number">287</span><br><span class="line-number">288</span><br><span class="line-number">289</span><br><span class="line-number">290</span><br><span class="line-number">291</span><br><span class="line-number">292</span><br><span class="line-number">293</span><br><span class="line-number">294</span><br><span class="line-number">295</span><br><span class="line-number">296</span><br><span class="line-number">297</span><br><span class="line-number">298</span><br><span class="line-number">299</span><br><span class="line-number">300</span><br><span class="line-number">301</span><br><span class="line-number">302</span><br><span class="line-number">303</span><br><span class="line-number">304</span><br><span class="line-number">305</span><br><span class="line-number">306</span><br><span class="line-number">307</span><br><span class="line-number">308</span><br><span class="line-number">309</span><br><span class="line-number">310</span><br><span class="line-number">311</span><br><span class="line-number">312</span><br><span class="line-number">313</span><br><span class="line-number">314</span><br><span class="line-number">315</span><br><span class="line-number">316</span><br><span class="line-number">317</span><br><span class="line-number">318</span><br><span class="line-number">319</span><br></div></div>`,19),e=[o];function t(c,r,B,y,F,i){return n(),a("div",null,e)}const C=s(p,[["render",t]]);export{u as __pageData,C as default};
