import{_ as s,o as n,c as a,a as l}from"./app.bfa9bd4b.js";const A=JSON.parse('{"title":"edges边","description":"","frontmatter":{},"headers":[{"level":2,"title":"内置边","slug":"内置边","link":"#内置边","children":[]},{"level":2,"title":"开启两端的调整连线功能","slug":"开启两端的调整连线功能","link":"#开启两端的调整连线功能","children":[]},{"level":2,"title":"切换边的类型","slug":"切换边的类型","link":"#切换边的类型","children":[]}],"relativePath":"4.库/logic-flow/边.md","lastUpdated":1720835436702}'),p={name:"4.库/logic-flow/边.md"},o=l(`<h1 id="edges边" tabindex="-1">edges边 <a class="header-anchor" href="#edges边" aria-hidden="true">#</a></h1><p>边指的是图形之间的连线</p><h2 id="内置边" tabindex="-1">内置边 <a class="header-anchor" href="#内置边" aria-hidden="true">#</a></h2><p>和节点一样，LogicFlow 也内置一些基础的边。LogicFlow 的内置边包括:</p><ul><li>直线(line)</li><li>直角折线(polyline)</li><li>贝塞尔曲线(bezier)</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 直线</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">LineEdge</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">PolylineEdgeModel</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;@logicflow/core&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 折线</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">PolylineEdge</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">PolylineEdgeModel</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;@logicflow/core&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 贝塞尔曲线</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">BezierEdge</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">BezierEdgeModel</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;@logicflow/core&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#6B737C;">// 直线</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#B392F0;"> { LineEdge</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> PolylineEdgeModel } </span><span style="color:#F97583;">from</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;@logicflow/core&quot;</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#6B737C;">// 折线</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#B392F0;"> { PolylineEdge</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> PolylineEdgeModel } </span><span style="color:#F97583;">from</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;@logicflow/core&quot;</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#6B737C;">// 贝塞尔曲线</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#B392F0;"> { BezierEdge</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> BezierEdgeModel } </span><span style="color:#F97583;">from</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;@logicflow/core&quot;</span><span style="color:#B392F0;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="开启两端的调整连线功能" tabindex="-1">开启两端的调整连线功能 <a class="header-anchor" href="#开启两端的调整连线功能" aria-hidden="true">#</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">lf</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">LogicFlow</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">container</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">querySelector</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;#app&quot;</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">grid</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">adjustEdgeStartAndEnd</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 开启两端的调整连线功能</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">lf</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">new</span><span style="color:#B392F0;"> LogicFlow({</span></span>
<span class="line"><span style="color:#B392F0;">  container</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">document</span><span style="color:#B392F0;">.querySelector(</span><span style="color:#FFAB70;">&quot;#app&quot;</span><span style="color:#B392F0;">)</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  grid</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">true</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  adjustEdgeStartAndEnd</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">true</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#6B737C;">// 开启两端的调整连线功能</span></span>
<span class="line"><span style="color:#B392F0;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="切换边的类型" tabindex="-1">切换边的类型 <a class="header-anchor" href="#切换边的类型" aria-hidden="true">#</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">   </span><span style="color:#61AFEF;">$_changeLineType</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> {</span><span style="color:#E5C07B;">lf</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">activeEdges</span><span style="color:#ABB2BF;">} </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">$props</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> {</span><span style="color:#E5C07B;">graphModel</span><span style="color:#ABB2BF;">} </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">lf</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#7F848E;font-style:italic;">// 更改新建边的类型</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E5C07B;">lf</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setDefaultEdgeType</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">activeEdges</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&amp;&amp;</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">activeEdges</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#7F848E;font-style:italic;">// 根据所有id切换边的类型</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#E5C07B;">activeEdges</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">forEach</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">edge</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">          </span><span style="color:#E5C07B;">graphModel</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">changeEdgeType</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">edge</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">id</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">        })</span></span>
<span class="line"><span style="color:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">   $_changeLineType(value) {</span></span>
<span class="line"><span style="color:#B392F0;">      </span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> {</span><span style="color:#79B8FF;">lf</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">activeEdges</span><span style="color:#B392F0;">} </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">this</span><span style="color:#B392F0;">.$props</span></span>
<span class="line"><span style="color:#B392F0;">      </span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> {</span><span style="color:#79B8FF;">graphModel</span><span style="color:#B392F0;">} </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> lf</span></span>
<span class="line"><span style="color:#B392F0;">      </span><span style="color:#6B737C;">// 更改新建边的类型</span></span>
<span class="line"><span style="color:#B392F0;">      </span><span style="color:#79B8FF;">lf</span><span style="color:#B392F0;">.setDefaultEdgeType(value)</span></span>
<span class="line"><span style="color:#B392F0;">      </span><span style="color:#F97583;">if</span><span style="color:#B392F0;">(activeEdges </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">activeEdges</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">length</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">&gt;</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">0</span><span style="color:#B392F0;">) {</span></span>
<span class="line"><span style="color:#B392F0;">        </span><span style="color:#6B737C;">// 根据所有id切换边的类型</span></span>
<span class="line"><span style="color:#B392F0;">        </span><span style="color:#79B8FF;">activeEdges</span><span style="color:#B392F0;">.forEach(edge </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">          </span><span style="color:#79B8FF;">graphModel</span><span style="color:#B392F0;">.changeEdgeType(</span><span style="color:#79B8FF;">edge</span><span style="color:#B392F0;">.id</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> value)</span></span>
<span class="line"><span style="color:#B392F0;">        })</span></span>
<span class="line"><span style="color:#B392F0;">      }</span></span>
<span class="line"><span style="color:#B392F0;">    }</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>`,10),e=[o];function c(r,t,B,y,i,F){return n(),a("div",null,e)}const u=s(p,[["render",c]]);export{A as __pageData,u as default};
