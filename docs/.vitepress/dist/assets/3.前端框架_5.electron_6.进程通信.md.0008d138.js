import{_ as s,c as n,o as a,a as e}from"./app.a9997904.js";const u=JSON.parse('{"title":"介绍","description":"","frontmatter":{},"headers":[{"level":2,"title":"主进程和渲染进程","slug":"主进程和渲染进程","link":"#主进程和渲染进程","children":[]},{"level":2,"title":"渲染进程Renderer","slug":"渲染进程renderer","link":"#渲染进程renderer","children":[]},{"level":2,"title":"ipc","slug":"ipc","link":"#ipc","children":[]},{"level":2,"title":"ipcMain","slug":"ipcmain","link":"#ipcmain","children":[]},{"level":2,"title":"ipcRenderer","slug":"ipcrenderer","link":"#ipcrenderer","children":[]}],"relativePath":"3.前端框架/5.electron/6.进程通信.md","lastUpdated":1676276426000}'),p={name:"3.前端框架/5.electron/6.进程通信.md"},l=e(`<h1 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-hidden="true">#</a></h1><blockquote><p>Electron中有两个进程，分别是<code>Main</code>主进程和<code>Renderer</code>渲染进程。两个进程间有多种方法进行通信</p></blockquote><h2 id="主进程和渲染进程" tabindex="-1">主进程和渲染进程 <a class="header-anchor" href="#主进程和渲染进程" aria-hidden="true">#</a></h2><p>main.js在启动应用后就创建了一个主进程main process，它可以通过electron中的一些模块直接与原生GUI（在你的应用窗口）交互</p><h2 id="渲染进程renderer" tabindex="-1">渲染进程<code>Renderer</code> <a class="header-anchor" href="#渲染进程renderer" aria-hidden="true">#</a></h2><p>仅启动主进程并不能给你的应用创建应用窗口。窗口是通过main文件里的主进程调用叫<code>BrowserWindow</code>的模块创建的。每个页面都是运行在自己的进程里，这些进程我们称之为渲染进程。渲染进程会在窗口中渲染出web页面（引用了CSS，JavaScript，图片等的HTML文件）。web页面是Chromium渲染的，因为各系统下标准是统一的的，所以兼容性很好</p><h2 id="ipc" tabindex="-1"><code>ipc</code> <a class="header-anchor" href="#ipc" aria-hidden="true">#</a></h2><ul><li><code>ipcMain</code>模块</li><li><code>ipcRenderer</code>模块</li></ul><h2 id="ipcmain" tabindex="-1">ipcMain <a class="header-anchor" href="#ipcmain" aria-hidden="true">#</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">ipcMain</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;electron&quot;</span></span>
<span class="line"><span style="color:#E5C07B;">ipcMain</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;fixed-app&quot;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">setAlwaysOnTop</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">!</span><span style="color:#E06C75;">setAlwaysOnTop</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">win</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setAlwaysOnTop</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">setAlwaysOnTop</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  })</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#B392F0;"> { ipcMain } </span><span style="color:#F97583;">from</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;electron&quot;</span></span>
<span class="line"><span style="color:#79B8FF;">ipcMain</span><span style="color:#B392F0;">.on(</span><span style="color:#FFAB70;">&quot;fixed-app&quot;</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">    setAlwaysOnTop </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">!</span><span style="color:#B392F0;">setAlwaysOnTop</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#79B8FF;">win</span><span style="color:#B392F0;">.setAlwaysOnTop(setAlwaysOnTop)</span></span>
<span class="line"><span style="color:#B392F0;">  })</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="ipcrenderer" tabindex="-1">ipcRenderer <a class="header-anchor" href="#ipcrenderer" aria-hidden="true">#</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">ipcRenderer</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;electron&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">fixedApp</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">ipcRenderer</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">send</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;fixed-app&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#B392F0;"> { ipcRenderer } </span><span style="color:#F97583;">from</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;electron&quot;</span></span>
<span class="line"><span style="color:#B392F0;"> </span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> fixedApp </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">ipcRenderer</span><span style="color:#B392F0;">.send(</span><span style="color:#FFAB70;">&quot;fixed-app&quot;</span><span style="color:#B392F0;">)</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,12),o=[l];function r(c,t,i,d,B,y){return a(),n("div",null,o)}const h=s(p,[["render",r]]);export{u as __pageData,h as default};
