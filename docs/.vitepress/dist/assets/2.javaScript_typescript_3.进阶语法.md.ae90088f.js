import{_ as s,c as n,o as a,a as l}from"./app.a9997904.js";const A=JSON.parse('{"title":"进阶语法","description":"","frontmatter":{},"headers":[{"level":2,"title":"加号减号","slug":"加号减号","link":"#加号减号","children":[]},{"level":2,"title":"in","slug":"in","link":"#in","children":[]},{"level":2,"title":"keyof","slug":"keyof","link":"#keyof","children":[]},{"level":2,"title":"in keyof","slug":"in-keyof","link":"#in-keyof","children":[]},{"level":2,"title":"extends","slug":"extends","link":"#extends","children":[]},{"level":2,"title":"extends keyof","slug":"extends-keyof","link":"#extends-keyof","children":[]},{"level":2,"title":"infer","slug":"infer","link":"#infer","children":[]},{"level":2,"title":"typeof","slug":"typeof","link":"#typeof","children":[]},{"level":2,"title":"空值判断运算符","slug":"空值判断运算符","link":"#空值判断运算符","children":[]},{"level":2,"title":"[name:type]:type","slug":"name-type-type","link":"#name-type-type","children":[]},{"level":2,"title":"常用内置类型","slug":"常用内置类型","link":"#常用内置类型","children":[{"level":3,"title":"Readonly","slug":"readonly","link":"#readonly","children":[]},{"level":3,"title":"Pick","slug":"pick","link":"#pick","children":[]},{"level":3,"title":"Omit","slug":"omit","link":"#omit","children":[]},{"level":3,"title":"Partial","slug":"partial","link":"#partial","children":[]},{"level":3,"title":"Required","slug":"required","link":"#required","children":[]},{"level":3,"title":"Record","slug":"record","link":"#record","children":[]},{"level":3,"title":"ReturnType","slug":"returntype","link":"#returntype","children":[]},{"level":3,"title":"NonNullable","slug":"nonnullable","link":"#nonnullable","children":[]},{"level":3,"title":"Exclude","slug":"exclude","link":"#exclude","children":[]},{"level":3,"title":"Extract","slug":"extract","link":"#extract","children":[]}]},{"level":2,"title":"declare","slug":"declare","link":"#declare","children":[]},{"level":2,"title":"解构赋值设置类型","slug":"解构赋值设置类型","link":"#解构赋值设置类型","children":[]},{"level":2,"title":"is类型保护","slug":"is类型保护","link":"#is类型保护","children":[]},{"level":2,"title":"unknown","slug":"unknown","link":"#unknown","children":[]},{"level":2,"title":"声明文件","slug":"声明文件","link":"#声明文件","children":[]}],"relativePath":"2.javaScript/typescript/3.进阶语法.md","lastUpdated":1676276426000}'),p={name:"2.javaScript/typescript/3.进阶语法.md"},o=l(`<h1 id="进阶语法" tabindex="-1">进阶语法 <a class="header-anchor" href="#进阶语法" aria-hidden="true">#</a></h1><h2 id="加号减号" tabindex="-1">加号减号 <a class="header-anchor" href="#加号减号" aria-hidden="true">#</a></h2><p>一些内置类型中，可能会出现<code>+</code>或者<code>-</code>这些符号，例如：</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">type</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Required</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  [</span><span style="color:#E5C07B;">P</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">in</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">keyof</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">]-</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">[</span><span style="color:#E5C07B;">P</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">type</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Person</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">age</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 结果：{ name: string; age: number; }</span></span>
<span class="line"><span style="color:#C678DD;">type</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">result</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Required</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">Person</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> Required&lt;T&gt; </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">  [P </span><span style="color:#F97583;">in</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">keyof</span><span style="color:#B392F0;"> T]</span><span style="color:#F97583;">-?:</span><span style="color:#B392F0;"> T[P]</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> Person </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">  name</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">  age</span><span style="color:#F97583;">?:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">number</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">// 结果：{ name: string; age: number; }</span></span>
<span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> result </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> Required&lt;Person&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><code>-?</code>是去掉类型中属性后面的<code>?</code>，整个<code>Required</code>的实际效果是去掉<code>T</code>类型中所有属性键后面的<code>?</code>，让所有属性变成必填的</p><h2 id="in" tabindex="-1">in <a class="header-anchor" href="#in" aria-hidden="true">#</a></h2><p><code>in</code>操作符的右侧通常跟一个联合类型，可以使用<code>in</code>来迭代这个联合类型，如下：</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 仅演示使用</span></span>
<span class="line"><span style="color:#C678DD;">in</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;name&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">|</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;age&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">|</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;sex&#39;</span></span>
<span class="line"><span style="color:#98C379;">&#39;name&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">// 第一次迭代结果</span></span>
<span class="line"><span style="color:#98C379;">&#39;age&#39;</span><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 第二次迭代结果</span></span>
<span class="line"><span style="color:#98C379;">&#39;sex&#39;</span><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 第三次迭代结果</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#6B737C;">// 仅演示使用</span></span>
<span class="line"><span style="color:#F97583;">in</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;name&#39;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;age&#39;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;sex&#39;</span></span>
<span class="line"><span style="color:#FFAB70;">&#39;name&#39;</span><span style="color:#B392F0;"> </span><span style="color:#6B737C;">// 第一次迭代结果</span></span>
<span class="line"><span style="color:#FFAB70;">&#39;age&#39;</span><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// 第二次迭代结果</span></span>
<span class="line"><span style="color:#FFAB70;">&#39;sex&#39;</span><span style="color:#B392F0;">  </span><span style="color:#6B737C;">// 第三次迭代结果</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="keyof" tabindex="-1">keyof <a class="header-anchor" href="#keyof" aria-hidden="true">#</a></h2><p><code>keyof T</code>表示获取<code>T</code>类型中所有属性键，这些属性键组合成一个联合类型，例如：</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">type</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Person</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">age</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// &#39;name&#39; | &#39;age&#39;</span></span>
<span class="line"><span style="color:#C678DD;">type</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">result</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">keyof</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Person</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> Person </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">  name</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">  age</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">number</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"><span style="color:#6B737C;">// &#39;name&#39; | &#39;age&#39;</span></span>
<span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> result </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">keyof</span><span style="color:#B392F0;"> Person</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><code>TS</code>中的<code>keyof T</code>，有点类似<code>JavaScript</code>中的<code>Object.keys()</code>，它们的共同点都是获取属性键的集合，只不过<code>keyof T</code>得到的结果是一个联合类型，而<code>Object.keys()</code>得到的是一个数组</p><h2 id="in-keyof" tabindex="-1">in keyof <a class="header-anchor" href="#in-keyof" aria-hidden="true">#</a></h2><p><code>[P in keyof T]</code>：表示遍历<code>T</code>中的每一个属性键，每次遍历时属性键取名为<code>P</code>，这和<code>JavaScript</code>中的<code>for in</code>非常类似：</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">type</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">required</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  [</span><span style="color:#E5C07B;">p</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">in</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">keyof</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">]-</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">[</span><span style="color:#E5C07B;">p</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> required&lt;T&gt; </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">  [p </span><span style="color:#F97583;">in</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">keyof</span><span style="color:#B392F0;"> T]</span><span style="color:#F97583;">-?:</span><span style="color:#B392F0;"> T[p]</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="extends" tabindex="-1">extends <a class="header-anchor" href="#extends" aria-hidden="true">#</a></h2><p>一般有两种用法：<strong>条件类型</strong>和<strong>类型约束</strong></p><h4 id="条件类型" tabindex="-1">条件类型 <a class="header-anchor" href="#条件类型" aria-hidden="true">#</a></h4><p>常见的条件类型表现形式如下：</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">extends</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">U</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;Y&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;N&#39;</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#79B8FF;">T</span><span style="color:#B392F0;"> extends </span><span style="color:#79B8FF;">U</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">?</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;Y&#39;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;N&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>条件类型有点像<code>JavaScript</code>中的三元表达式，事实上它们的工作原理是类似的，例如：</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">type</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">res1</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">true</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">extends</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">boolean</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">true</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">false</span><span style="color:#ABB2BF;">                  </span><span style="color:#7F848E;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#C678DD;">type</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">res2</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;name&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">extends</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;name&#39;</span><span style="color:#ABB2BF;">|</span><span style="color:#98C379;">&#39;age&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">true</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">false</span><span style="color:#ABB2BF;">           </span><span style="color:#7F848E;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#C678DD;">type</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">res3</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> [</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">] </span><span style="color:#C678DD;">extends</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">; } </span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">true</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">false</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#C678DD;">type</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">res4</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> [</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">] </span><span style="color:#C678DD;">extends</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Array</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">true</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">false</span><span style="color:#ABB2BF;">       </span><span style="color:#7F848E;font-style:italic;">// true</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> res1 </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">true</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">extends</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">?</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">true</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">false</span><span style="color:#B392F0;">                  </span><span style="color:#6B737C;">// true</span></span>
<span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> res2 </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;name&#39;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">extends</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;name&#39;</span><span style="color:#F97583;">|</span><span style="color:#FFAB70;">&#39;age&#39;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">?</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">true</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">false</span><span style="color:#B392F0;">           </span><span style="color:#6B737C;">// true</span></span>
<span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> res3 </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> [</span><span style="color:#F8F8F8;">1</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">2</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">3</span><span style="color:#B392F0;">] </span><span style="color:#F97583;">extends</span><span style="color:#B392F0;"> { length</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">number</span><span style="color:#B392F0;">; } </span><span style="color:#F97583;">?</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">true</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">false</span><span style="color:#B392F0;"> </span><span style="color:#6B737C;">// true</span></span>
<span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> res4 </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> [</span><span style="color:#F8F8F8;">1</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">2</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">3</span><span style="color:#B392F0;">] </span><span style="color:#F97583;">extends</span><span style="color:#B392F0;"> Array&lt;</span><span style="color:#79B8FF;">number</span><span style="color:#B392F0;">&gt; </span><span style="color:#F97583;">?</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">true</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">false</span><span style="color:#B392F0;">       </span><span style="color:#6B737C;">// true</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>在条件类型中，有一个特别需要注意的东西就是：<strong>分布式条件类型</strong>，如下：</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">type</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Extract</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">U</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">extends</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">U</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">never</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">type</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">type1</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;name&#39;</span><span style="color:#ABB2BF;">|</span><span style="color:#98C379;">&#39;age&#39;</span></span>
<span class="line"><span style="color:#C678DD;">type</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">type2</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;name&#39;</span><span style="color:#ABB2BF;">|</span><span style="color:#98C379;">&#39;address&#39;</span><span style="color:#ABB2BF;">|</span><span style="color:#98C379;">&#39;sex&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 结果：&#39;name&#39;</span></span>
<span class="line"><span style="color:#C678DD;">type</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">test</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Extract</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">type1</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">type2</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 推理步骤</span></span>
<span class="line"><span style="color:#98C379;">&#39;name&#39;</span><span style="color:#ABB2BF;">|</span><span style="color:#98C379;">&#39;age&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">extends</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;name&#39;</span><span style="color:#ABB2BF;">|</span><span style="color:#98C379;">&#39;address&#39;</span><span style="color:#ABB2BF;">|</span><span style="color:#98C379;">&#39;sex&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">never</span></span>
<span class="line"><span style="color:#E5C07B;">step1</span><span style="color:#ABB2BF;">： (</span><span style="color:#98C379;">&#39;name&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">extends</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;name&#39;</span><span style="color:#ABB2BF;">|</span><span style="color:#98C379;">&#39;address&#39;</span><span style="color:#ABB2BF;">|</span><span style="color:#98C379;">&#39;sex&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;name&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">never</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;name&#39;</span></span>
<span class="line"><span style="color:#E5C07B;">step2</span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;">  (</span><span style="color:#98C379;">&#39;age&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">extends</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;name&#39;</span><span style="color:#ABB2BF;">|</span><span style="color:#98C379;">&#39;address&#39;</span><span style="color:#ABB2BF;">|</span><span style="color:#98C379;">&#39;sex&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;age&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">never</span><span style="color:#ABB2BF;">)   </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">never</span></span>
<span class="line"><span style="color:#E5C07B;">result</span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;name&#39;</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">never</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;name&#39;</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> Extract&lt;T</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> U&gt; </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> T </span><span style="color:#F97583;">extends</span><span style="color:#B392F0;"> U </span><span style="color:#F97583;">?</span><span style="color:#B392F0;"> T </span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">never</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> type1 </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;name&#39;</span><span style="color:#F97583;">|</span><span style="color:#FFAB70;">&#39;age&#39;</span></span>
<span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> type2 </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;name&#39;</span><span style="color:#F97583;">|</span><span style="color:#FFAB70;">&#39;address&#39;</span><span style="color:#F97583;">|</span><span style="color:#FFAB70;">&#39;sex&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">// 结果：&#39;name&#39;</span></span>
<span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> test </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> Extract&lt;type1</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> type2&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">// 推理步骤</span></span>
<span class="line"><span style="color:#FFAB70;">&#39;name&#39;</span><span style="color:#F97583;">|</span><span style="color:#FFAB70;">&#39;age&#39;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">extends</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;name&#39;</span><span style="color:#F97583;">|</span><span style="color:#FFAB70;">&#39;address&#39;</span><span style="color:#F97583;">|</span><span style="color:#FFAB70;">&#39;sex&#39;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">?</span><span style="color:#B392F0;"> T </span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">never</span></span>
<span class="line"><span style="color:#B392F0;">step1： (</span><span style="color:#FFAB70;">&#39;name&#39;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">extends</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;name&#39;</span><span style="color:#F97583;">|</span><span style="color:#FFAB70;">&#39;address&#39;</span><span style="color:#F97583;">|</span><span style="color:#FFAB70;">&#39;sex&#39;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">?</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;name&#39;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">never</span><span style="color:#B392F0;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;name&#39;</span></span>
<span class="line"><span style="color:#B392F0;">step2</span><span style="color:#F97583;">:</span><span style="color:#B392F0;">  (</span><span style="color:#FFAB70;">&#39;age&#39;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">extends</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;name&#39;</span><span style="color:#F97583;">|</span><span style="color:#FFAB70;">&#39;address&#39;</span><span style="color:#F97583;">|</span><span style="color:#FFAB70;">&#39;sex&#39;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">?</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;age&#39;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">never</span><span style="color:#B392F0;">)   </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">never</span></span>
<span class="line"><span style="color:#B392F0;">result</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;name&#39;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">never</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;name&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>代码详解：</p><ul><li><code>T extends U ? T : never</code>：因为<code>T</code>是一个联合类型，所以这里适用于<strong>分布式条件类型</strong>的概念。根据其概念，在实际的过程中会把<code>T</code>类型中的每一个子类型进行迭代，如下：</li></ul><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 第一次迭代：</span></span>
<span class="line"><span style="color:#98C379;">&#39;name&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">extends</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;name&#39;</span><span style="color:#56B6C2;">|</span><span style="color:#98C379;">&#39;address&#39;</span><span style="color:#56B6C2;">|</span><span style="color:#98C379;">&#39;sex&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;name&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">never</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 第二次迭代：</span></span>
<span class="line"><span style="color:#98C379;">&#39;age&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">extends</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;name&#39;</span><span style="color:#56B6C2;">|</span><span style="color:#98C379;">&#39;address&#39;</span><span style="color:#56B6C2;">|</span><span style="color:#98C379;">&#39;sex&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;age&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">never</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#6B737C;">// 第一次迭代：</span></span>
<span class="line"><span style="color:#FFAB70;">&#39;name&#39;</span><span style="color:#B392F0;"> extends </span><span style="color:#FFAB70;">&#39;name&#39;</span><span style="color:#F97583;">|</span><span style="color:#FFAB70;">&#39;address&#39;</span><span style="color:#F97583;">|</span><span style="color:#FFAB70;">&#39;sex&#39;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">?</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;name&#39;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> never</span></span>
<span class="line"><span style="color:#6B737C;">// 第二次迭代：</span></span>
<span class="line"><span style="color:#FFAB70;">&#39;age&#39;</span><span style="color:#B392F0;"> extends </span><span style="color:#FFAB70;">&#39;name&#39;</span><span style="color:#F97583;">|</span><span style="color:#FFAB70;">&#39;address&#39;</span><span style="color:#F97583;">|</span><span style="color:#FFAB70;">&#39;sex&#39;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">?</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;age&#39;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> never</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>在迭代完成之后，会把每次迭代的结果组合成一个新的联合类型(根据<code>never</code>类型的特点，最后的结果会剔除掉<code>never</code>)，如下：</li></ul><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">type</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">result</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;name&#39;</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">never</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;name&#39;</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> result </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;name&#39;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">never</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;name&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="extends-keyof" tabindex="-1">extends keyof <a class="header-anchor" href="#extends-keyof" aria-hidden="true">#</a></h2><p>类型约束，经常和泛型一起使用：</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">U</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">extends</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">keyof</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">T</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#79B8FF;">U</span><span style="color:#B392F0;"> extends keyof </span><span style="color:#79B8FF;">T</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>keyof T</code>是一个整体，它表示一个联合类型。<code>U extends Union</code>这一整段表示<code>U</code>的类型被收缩在一个联合类型的范围内</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">interface</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Person</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">age</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">number</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">person</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Person</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">age</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">22</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;Tobias&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">getProperty</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">K</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">extends</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">keyof</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">&gt;(</span><span style="color:#E06C75;font-style:italic;">obj</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">key</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">K</span><span style="color:#ABB2BF;">): </span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">[</span><span style="color:#E5C07B;">K</span><span style="color:#ABB2BF;">] {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">name1</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">getProperty</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">person</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;name&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">gender</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">getProperty</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">person</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;sex&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">//报错 </span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">interface</span><span style="color:#B392F0;"> Person {</span></span>
<span class="line"><span style="color:#B392F0;">  age</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">number</span></span>
<span class="line"><span style="color:#B392F0;">  name</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">person</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> Person </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">  age</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">22</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  name</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;Tobias&quot;</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> getProperty&lt;T</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> K </span><span style="color:#F97583;">extends</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">keyof</span><span style="color:#B392F0;"> T&gt;(obj</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> T</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> key</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> K)</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> T[K] {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> obj[key]</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">name1</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> getProperty(person</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;name&quot;</span><span style="color:#B392F0;">)</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">gender</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> getProperty(person</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;sex&quot;</span><span style="color:#B392F0;">) </span><span style="color:#6B737C;">//报错 </span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="infer" tabindex="-1">infer <a class="header-anchor" href="#infer" aria-hidden="true">#</a></h2><p><code>infer</code>关键词的作用是延时推导，它会在类型未推导时进行占位，等到真正推导成功后，它能准确的返回正确的类型</p><p>为了更好的理解<code>infer</code>关键词的用法，使用<code>ReturnType</code>这个例子来说明，<code>ReturnType</code>是一个用来获取函数返回类型的工具。</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">type</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">ReturnType</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">extends</span><span style="color:#ABB2BF;"> (...</span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">any</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> infer </span><span style="color:#E5C07B;">R</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">R</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">never</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">a</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">b</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">): </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">b</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 结果: number</span></span>
<span class="line"><span style="color:#C678DD;">type</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">result</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">ReturnType</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#C678DD;">typeof</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">add</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> ReturnType&lt;T&gt; </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> T </span><span style="color:#F97583;">extends</span><span style="color:#B392F0;"> (</span><span style="color:#F97583;">...</span><span style="color:#B392F0;">args</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">any</span><span style="color:#B392F0;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">infer</span><span style="color:#B392F0;"> R </span><span style="color:#F97583;">?</span><span style="color:#B392F0;"> R </span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">never</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> add </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> (a</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">number</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> b</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">number</span><span style="color:#B392F0;">)</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">number</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> a </span><span style="color:#F97583;">+</span><span style="color:#B392F0;"> b</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"><span style="color:#6B737C;">// 结果: number</span></span>
<span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> result </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> ReturnType&lt;</span><span style="color:#F97583;">typeof</span><span style="color:#B392F0;"> add&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>代码详解：</p><ul><li><code>T extends (...args: any) =&gt; infer R</code>：如果不看<code>infer R</code>，这段代码实际表示：<code>T</code>是不是一个函数类型。</li><li><code>(...args: any) =&gt; infer R</code>：这段代码实际表示一个函数类型，其中把它的参数使用<code>args</code>来表示，把它的返回类型用<code>R</code>来进行占位。 如果<code>T</code>满足是一个函数类型，那么我们返回其函数的返回类型，也就是<code>R</code>；如果不是一个函数类型，就返回<code>never</code></li></ul><h2 id="typeof" tabindex="-1">typeof <a class="header-anchor" href="#typeof" aria-hidden="true">#</a></h2><p>获取一个变量的类型，通常用于获取一个<code>对象</code>或<code>函数</code>的类型</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">a</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">b</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">): </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">b</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">obj</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;AAA&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">age</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">23</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 结果：(a: number, b:number) =&gt; number</span></span>
<span class="line"><span style="color:#C678DD;">type</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">t1</span><span style="color:#ABB2BF;">  </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">typeof</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">add</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 结果：{ name: string; age: number; }</span></span>
<span class="line"><span style="color:#C678DD;">type</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">t2</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">typeof</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">obj</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> add </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> (a</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">number</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> b</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">number</span><span style="color:#B392F0;">)</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">number</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> a </span><span style="color:#F97583;">+</span><span style="color:#B392F0;"> b</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">obj</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">  name</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;AAA&#39;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  age</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">23</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">// 结果：(a: number, b:number) =&gt; number</span></span>
<span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> t1  </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">typeof</span><span style="color:#B392F0;"> add</span></span>
<span class="line"><span style="color:#6B737C;">// 结果：{ name: string; age: number; }</span></span>
<span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> t2 </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">typeof</span><span style="color:#B392F0;"> obj</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="空值判断运算符" tabindex="-1">空值判断运算符 <a class="header-anchor" href="#空值判断运算符" aria-hidden="true">#</a></h2><p><code>??</code>与 js中的空值判断运算符一样</p><p>同样是只有运算符左侧的值为null或undefined时，才会返回右侧的值，否则返回左侧的值</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">value</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">value1</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;&quot;</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">value2</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">null</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">value3</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">null</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">??</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;value为空值&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 0</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">value1</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">??</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;value为空值&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// &quot;&quot;</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">value2</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">??</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;value为空值&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// value为空值</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">value3</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">??</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;value为空值&quot;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// value为空值</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">value</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">number</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">0</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">value1</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;&quot;</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">value2</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">number</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">null</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">value3</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">null</span></span>
<span class="line"><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(value </span><span style="color:#F97583;">??</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;value为空值&quot;</span><span style="color:#B392F0;">) </span><span style="color:#6B737C;">// 0</span></span>
<span class="line"><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(value1 </span><span style="color:#F97583;">??</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;value为空值&quot;</span><span style="color:#B392F0;">) </span><span style="color:#6B737C;">// &quot;&quot;</span></span>
<span class="line"><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(value2 </span><span style="color:#F97583;">??</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;value为空值&quot;</span><span style="color:#B392F0;">) </span><span style="color:#6B737C;">// value为空值</span></span>
<span class="line"><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(value3 </span><span style="color:#F97583;">??</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;value为空值&quot;</span><span style="color:#B392F0;">) </span><span style="color:#6B737C;">// value为空值</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="name-type-type" tabindex="-1">[name:type]:type <a class="header-anchor" href="#name-type-type" aria-hidden="true">#</a></h2><p>在不确定对象属性名与对应属性值类型的情况下，形参设置对象的属性名为<code>string</code>类型(一般情况下都是<code>string</code>类型)，而属性值的类型则可能有很多种</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">interface</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">ccache</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    [</span><span style="color:#E06C75;font-style:italic;">a</span><span style="color:#ABB2BF;">:</span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">]:</span><span style="color:#E5C07B;">number</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">cache</span><span style="color:#ABB2BF;">:</span><span style="color:#E5C07B;">ccache</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 类型正确</span></span>
<span class="line"><span style="color:#E5C07B;">cache</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 不报错</span></span>
<span class="line"><span style="color:#E5C07B;">cache</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;1&quot;</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">interface</span><span style="color:#B392F0;"> ccache {</span></span>
<span class="line"><span style="color:#B392F0;">    [a</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">]</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">number</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">cache</span><span style="color:#F97583;">:</span><span style="color:#B392F0;">ccache </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> {}</span></span>
<span class="line"><span style="color:#6B737C;">// 类型正确</span></span>
<span class="line"><span style="color:#79B8FF;">cache</span><span style="color:#B392F0;">.name </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">1</span></span>
<span class="line"><span style="color:#6B737C;">// 不报错</span></span>
<span class="line"><span style="color:#79B8FF;">cache</span><span style="color:#B392F0;">.name </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;1&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="常用内置类型" tabindex="-1">常用内置类型 <a class="header-anchor" href="#常用内置类型" aria-hidden="true">#</a></h2><p>位于<code>node_modules/typescript/lib/lib.es5.d.ts</code>中</p><h3 id="readonly" tabindex="-1">Readonly <a class="header-anchor" href="#readonly" aria-hidden="true">#</a></h3><p>把每个属性都变成只读</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 使用</span></span>
<span class="line"><span style="color:#C678DD;">type</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">A</span><span style="color:#ABB2BF;">  </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">:</span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">:</span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">type</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">A1</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Readonly</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">A</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#7F848E;font-style:italic;">// {readonly a: number;readonly b: string;}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 实现</span></span>
<span class="line"><span style="color:#C678DD;">type</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Readonly</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">readonly</span><span style="color:#ABB2BF;"> [</span><span style="color:#E5C07B;">P</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">in</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">keyof</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">]: </span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">[</span><span style="color:#E5C07B;">P</span><span style="color:#ABB2BF;">] </span><span style="color:#7F848E;font-style:italic;">// keyof获取T上的键值集合 in表示循环keyof获取的键值</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#6B737C;">// 使用</span></span>
<span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> A  </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> {a</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">number</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> b</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">}</span></span>
<span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> A1 </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> Readonly&lt;A&gt; </span><span style="color:#6B737C;">// {readonly a: number;readonly b: string;}</span></span>
<span class="line"><span style="color:#6B737C;">// 实现</span></span>
<span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> Readonly&lt;T&gt; </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#F97583;">readonly</span><span style="color:#B392F0;"> [P </span><span style="color:#F97583;">in</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">keyof</span><span style="color:#B392F0;"> T]</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> T[P] </span><span style="color:#6B737C;">// keyof获取T上的键值集合 in表示循环keyof获取的键值</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="pick" tabindex="-1">Pick <a class="header-anchor" href="#pick" aria-hidden="true">#</a></h3><p>只保留自己选择的属性</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">type</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">A</span><span style="color:#ABB2BF;">  </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">:</span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">:</span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">type</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">A1</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Pick</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">A</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;a&#39;</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#7F848E;font-style:italic;">//  {a:number}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> A  </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> {a</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">number</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> b</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">}</span></span>
<span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> A1 </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> Pick&lt;A</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;a&#39;</span><span style="color:#B392F0;">&gt; </span><span style="color:#6B737C;">//  {a:number}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="omit" tabindex="-1">Omit <a class="header-anchor" href="#omit" aria-hidden="true">#</a></h3><p>排除已选的属性</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">type</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">A</span><span style="color:#ABB2BF;">  </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">:</span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">:</span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">type</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">A1</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Omit</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">A</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;a&#39;</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#7F848E;font-style:italic;">// {b:string}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> A  </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> {a</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">number</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> b</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">}</span></span>
<span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> A1 </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> Omit&lt;A</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;a&#39;</span><span style="color:#B392F0;">&gt; </span><span style="color:#6B737C;">// {b:string}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="partial" tabindex="-1">Partial <a class="header-anchor" href="#partial" aria-hidden="true">#</a></h3><p>通过泛型让目标类型中的所有属性变为可选</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">type</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">A</span><span style="color:#ABB2BF;">  </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">:</span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">:</span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">type</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">A1</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Partial</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">A</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#7F848E;font-style:italic;">// { a?: number; b?: string;}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> A  </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> {a</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">number</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> b</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">}</span></span>
<span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> A1 </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> Partial&lt;A&gt; </span><span style="color:#6B737C;">// { a?: number; b?: string;}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="required" tabindex="-1">Required <a class="header-anchor" href="#required" aria-hidden="true">#</a></h3><p>通过泛型让目标类型中的所有属性变为必选</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">type</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">A</span><span style="color:#ABB2BF;">  </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {</span><span style="color:#E06C75;">a</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">:</span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">b</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">:</span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">type</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">A1</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Required</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">A</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#7F848E;font-style:italic;">// { a: number; b: string;}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> A  </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> {a</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;">number</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> b</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">}</span></span>
<span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> A1 </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> Required&lt;A&gt; </span><span style="color:#6B737C;">// { a: number; b: string;}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="record" tabindex="-1">Record <a class="header-anchor" href="#record" aria-hidden="true">#</a></h3><p>创建一个类型，Record&lt;K, T&gt;，K代表新类型键的类型，T代表新类型值的类型</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 示例一，对象a键的类型为字符串，值的类型为数字</span></span>
<span class="line"><span style="color:#C678DD;">type</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">A1</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Record</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">a</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">A1</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">1</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 示例二，对象result键的类型是&quot;home&quot; | &quot;about&quot; | &quot;contact&quot;，值的类型为PageInfo</span></span>
<span class="line"><span style="color:#C678DD;">interface</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">PageInfo</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">type</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Page</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;home&quot;</span><span style="color:#ABB2BF;"> | </span><span style="color:#98C379;">&quot;about&quot;</span><span style="color:#ABB2BF;"> | </span><span style="color:#98C379;">&quot;contact&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">nav</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Record</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">Page</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">PageInfo</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">about</span><span style="color:#ABB2BF;">: { </span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;about&quot;</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">contact</span><span style="color:#ABB2BF;">: { </span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;contact&quot;</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">home</span><span style="color:#ABB2BF;">: { </span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;home&quot;</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 示例三，对象result键的类型是 &#39;A&#39; | &#39;B&#39; | &#39;C&#39;，值的类型为数字</span></span>
<span class="line"><span style="color:#C678DD;">type</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">keys</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;A&#39;</span><span style="color:#ABB2BF;"> | </span><span style="color:#98C379;">&#39;B&#39;</span><span style="color:#ABB2BF;"> | </span><span style="color:#98C379;">&#39;C&#39;</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">result</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Record</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">keys</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">A</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">B</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">C</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">3</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#6B737C;">// 示例一，对象a键的类型为字符串，值的类型为数字</span></span>
<span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> A1 </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> Record&lt;</span><span style="color:#79B8FF;">string</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">number</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">a</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> A1 </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">  a</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">1</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">// 示例二，对象result键的类型是&quot;home&quot; | &quot;about&quot; | &quot;contact&quot;，值的类型为PageInfo</span></span>
<span class="line"><span style="color:#F97583;">interface</span><span style="color:#B392F0;"> PageInfo {</span></span>
<span class="line"><span style="color:#B392F0;">  title</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> Page </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;home&quot;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;about&quot;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;contact&quot;</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">nav</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> Record&lt;Page</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> PageInfo&gt; </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">  about</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> { title</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;about&quot;</span><span style="color:#B392F0;"> }</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  contact</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> { title</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;contact&quot;</span><span style="color:#B392F0;"> }</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  home</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> { title</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;home&quot;</span><span style="color:#B392F0;"> }</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">// 示例三，对象result键的类型是 &#39;A&#39; | &#39;B&#39; | &#39;C&#39;，值的类型为数字</span></span>
<span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> keys </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;A&#39;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;B&#39;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;C&#39;</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">result</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> Record&lt;keys</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">number</span><span style="color:#B392F0;">&gt; </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">  A</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">1</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  B</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">2</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  C</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">3</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h4 id="实现" tabindex="-1">实现 <a class="header-anchor" href="#实现" aria-hidden="true">#</a></h4><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">type</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Record</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">K</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">extends</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">keyof</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">any</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    [</span><span style="color:#E5C07B;">P</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">in</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">K</span><span style="color:#ABB2BF;">]: </span><span style="color:#E5C07B;">T</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> Record&lt;K </span><span style="color:#F97583;">extends</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">keyof</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">any</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> T&gt; </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">    [P </span><span style="color:#F97583;">in</span><span style="color:#B392F0;"> K]</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> T</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="returntype" tabindex="-1">ReturnType <a class="header-anchor" href="#returntype" aria-hidden="true">#</a></h3><p>获取T的返回值的类型</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">type</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">A1</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">ReturnType</span><span style="color:#ABB2BF;">&lt;()</span><span style="color:#C678DD;">=&gt;</span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#7F848E;font-style:italic;">// number</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> A1</span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> ReturnType&lt;()</span><span style="color:#F97583;">=&gt;</span><span style="color:#79B8FF;">number</span><span style="color:#B392F0;">&gt; </span><span style="color:#6B737C;">// number</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="nonnullable" tabindex="-1">NonNullable <a class="header-anchor" href="#nonnullable" aria-hidden="true">#</a></h3><p>剔除undefined和null</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">type</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">A1</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">NonNullable</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">null</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">undefined</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#7F848E;font-style:italic;">// number|string</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> A1 </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> NonNullable&lt;</span><span style="color:#79B8FF;">number</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">null</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#B392F0;">&gt; </span><span style="color:#6B737C;">// number|string</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="exclude" tabindex="-1">Exclude <a class="header-anchor" href="#exclude" aria-hidden="true">#</a></h3><p>过滤T中和K相同(或兼容)的类型</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">type</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">A</span><span style="color:#ABB2BF;">  </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">:</span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">:</span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">type</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">A1</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Exclude</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">|</span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">|</span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">[]&gt; </span><span style="color:#7F848E;font-style:italic;">// number</span></span>
<span class="line"><span style="color:#C678DD;">type</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">A2</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Exclude</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">|</span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">any</span><span style="color:#ABB2BF;">|</span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">[]&gt; </span><span style="color:#7F848E;font-style:italic;">// never , 因为any兼容number, 所以number被过滤掉</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> A  </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> {a</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">number</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> b</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">}</span></span>
<span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> A1 </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> Exclude&lt;</span><span style="color:#79B8FF;">number</span><span style="color:#F97583;">|</span><span style="color:#79B8FF;">string</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#F97583;">|</span><span style="color:#79B8FF;">number</span><span style="color:#B392F0;">[]&gt; </span><span style="color:#6B737C;">// number</span></span>
<span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> A2 </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> Exclude&lt;</span><span style="color:#79B8FF;">number</span><span style="color:#F97583;">|</span><span style="color:#79B8FF;">string</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">any</span><span style="color:#F97583;">|</span><span style="color:#79B8FF;">number</span><span style="color:#B392F0;">[]&gt; </span><span style="color:#6B737C;">// never , 因为any兼容number, 所以number被过滤掉</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="extract" tabindex="-1">Extract <a class="header-anchor" href="#extract" aria-hidden="true">#</a></h3><h4 id="用法" tabindex="-1">用法 <a class="header-anchor" href="#用法" aria-hidden="true">#</a></h4><p><code>Extract&lt;T, U&gt;</code>用来取联合类型<code>T</code>和<code>U</code>的交集，用法如下：</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">type</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Person</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">age</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">address</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 结果：&#39;age&#39;|&#39;address&#39;</span></span>
<span class="line"><span style="color:#C678DD;">type</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">ExtractResult</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Extract</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#C678DD;">keyof</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Person</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;age&#39;</span><span style="color:#ABB2BF;">|</span><span style="color:#98C379;">&#39;address&#39;</span><span style="color:#ABB2BF;">|</span><span style="color:#98C379;">&#39;sex&#39;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> Person </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">  name</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">  age</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">number</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">  address</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">;</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;">// 结果：&#39;age&#39;|&#39;address&#39;</span></span>
<span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> ExtractResult </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> Extract&lt;</span><span style="color:#F97583;">keyof</span><span style="color:#B392F0;"> Person</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;age&#39;</span><span style="color:#F97583;">|</span><span style="color:#FFAB70;">&#39;address&#39;</span><span style="color:#F97583;">|</span><span style="color:#FFAB70;">&#39;sex&#39;</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h4 id="实现方式" tabindex="-1">实现方式 <a class="header-anchor" href="#实现方式" aria-hidden="true">#</a></h4><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">type</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">MyExtract</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">U</span><span style="color:#ABB2BF;">&gt; </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">extends</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">U</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">never</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> MyExtract&lt;T</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> U&gt; </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> T </span><span style="color:#F97583;">extends</span><span style="color:#B392F0;"> U </span><span style="color:#F97583;">?</span><span style="color:#B392F0;"> T </span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">never</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>代码详解：</p><ul><li><code>T extends U</code>：此代码会自动将<code>T</code>的子类型进行分发，例如：</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">extends</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">U</span></span>
<span class="line"><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;name&#39;</span><span style="color:#56B6C2;">|</span><span style="color:#98C379;">&#39;age&#39;</span><span style="color:#56B6C2;">|</span><span style="color:#98C379;">&#39;address&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">extends</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;age&#39;</span><span style="color:#56B6C2;">|</span><span style="color:#98C379;">&#39;address&#39;</span><span style="color:#56B6C2;">|</span><span style="color:#98C379;">&#39;sex&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">never</span></span>
<span class="line"><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> (</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#98C379;">&#39;name&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">extends</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;age&#39;</span><span style="color:#56B6C2;">|</span><span style="color:#98C379;">&#39;address&#39;</span><span style="color:#56B6C2;">|</span><span style="color:#98C379;">&#39;sex&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;name&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">never</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#98C379;">&#39;age&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">extends</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;age&#39;</span><span style="color:#56B6C2;">|</span><span style="color:#98C379;">&#39;address&#39;</span><span style="color:#56B6C2;">|</span><span style="color:#98C379;">&#39;sex&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;age&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">never</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">|</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#98C379;">&#39;address&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">extends</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;age&#39;</span><span style="color:#56B6C2;">|</span><span style="color:#98C379;">&#39;address&#39;</span><span style="color:#56B6C2;">|</span><span style="color:#98C379;">&#39;address&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;age&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;font-style:italic;">never</span></span>
<span class="line"><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;age&#39;</span><span style="color:#56B6C2;">|</span><span style="color:#98C379;">&#39;address&#39;</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#79B8FF;">T</span><span style="color:#B392F0;"> extends </span><span style="color:#79B8FF;">U</span></span>
<span class="line"><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;name&#39;</span><span style="color:#F97583;">|</span><span style="color:#FFAB70;">&#39;age&#39;</span><span style="color:#F97583;">|</span><span style="color:#FFAB70;">&#39;address&#39;</span><span style="color:#B392F0;"> extends </span><span style="color:#FFAB70;">&#39;age&#39;</span><span style="color:#F97583;">|</span><span style="color:#FFAB70;">&#39;address&#39;</span><span style="color:#F97583;">|</span><span style="color:#FFAB70;">&#39;sex&#39;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">?</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">T</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> never</span></span>
<span class="line"><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> (</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#FFAB70;">&#39;name&#39;</span><span style="color:#B392F0;"> extends </span><span style="color:#FFAB70;">&#39;age&#39;</span><span style="color:#F97583;">|</span><span style="color:#FFAB70;">&#39;address&#39;</span><span style="color:#F97583;">|</span><span style="color:#FFAB70;">&#39;sex&#39;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">?</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;name&#39;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> never </span><span style="color:#F97583;">|</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#FFAB70;">&#39;age&#39;</span><span style="color:#B392F0;"> extends </span><span style="color:#FFAB70;">&#39;age&#39;</span><span style="color:#F97583;">|</span><span style="color:#FFAB70;">&#39;address&#39;</span><span style="color:#F97583;">|</span><span style="color:#FFAB70;">&#39;sex&#39;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">?</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;age&#39;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> never </span><span style="color:#F97583;">|</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#FFAB70;">&#39;address&#39;</span><span style="color:#B392F0;"> extends </span><span style="color:#FFAB70;">&#39;age&#39;</span><span style="color:#F97583;">|</span><span style="color:#FFAB70;">&#39;address&#39;</span><span style="color:#F97583;">|</span><span style="color:#FFAB70;">&#39;address&#39;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">?</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;age&#39;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> never</span></span>
<span class="line"><span style="color:#B392F0;">)</span></span>
<span class="line"><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;age&#39;</span><span style="color:#F97583;">|</span><span style="color:#FFAB70;">&#39;address&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="declare" tabindex="-1">declare <a class="header-anchor" href="#declare" aria-hidden="true">#</a></h2><p>1.全局定义类型</p><p>2.覆盖默认类型</p><h2 id="解构赋值设置类型" tabindex="-1">解构赋值设置类型 <a class="header-anchor" href="#解构赋值设置类型" aria-hidden="true">#</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">dst</span><span style="color:#ABB2BF;"> }： { </span><span style="color:#E06C75;">dst</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">data</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">trans_result</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">dst</span><span style="color:#ABB2BF;"> }： any </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">data</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">trans_result</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> { </span><span style="color:#79B8FF;">dst</span><span style="color:#B392F0;"> }： { dst: </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;"> } </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">data</span><span style="color:#B392F0;">.trans_result[</span><span style="color:#F8F8F8;">0</span><span style="color:#B392F0;">]</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> { </span><span style="color:#79B8FF;">dst</span><span style="color:#B392F0;"> }： any </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">data</span><span style="color:#B392F0;">.trans_result[</span><span style="color:#F8F8F8;">0</span><span style="color:#B392F0;">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="is类型保护" tabindex="-1">is类型保护 <a class="header-anchor" href="#is类型保护" aria-hidden="true">#</a></h2><p>在使用类型保护时，TS 会进一步缩小变量的类型。例子中，将类型从 any 缩小至了 string</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">isString</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">test</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">): </span><span style="color:#E5C07B;">boolean</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">typeof</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">test</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">===</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;string&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">example</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">foo</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">any</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#61AFEF;">isString</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">foo</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">// 编译不会出错,运行时出错</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">foo</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">push</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#61AFEF;">example</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;hello world&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> isString(test</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">)</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">typeof</span><span style="color:#B392F0;"> test </span><span style="color:#F97583;">===</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;string&quot;</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> example(foo</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">any</span><span style="color:#B392F0;">) {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (isString(foo)) {</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#6B737C;">// 编译不会出错,运行时出错</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(</span><span style="color:#79B8FF;">foo</span><span style="color:#B392F0;">.push(</span><span style="color:#F8F8F8;">2</span><span style="color:#B392F0;">))</span></span>
<span class="line"><span style="color:#B392F0;">  }</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"><span style="color:#B392F0;">example(</span><span style="color:#FFAB70;">&quot;hello world&quot;</span><span style="color:#B392F0;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">isString</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">test</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">): </span><span style="color:#E06C75;font-style:italic;">test</span><span style="color:#ABB2BF;"> is </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">typeof</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">test</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">===</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;string&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">example</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">foo</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">any</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#61AFEF;">isString</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">foo</span><span style="color:#ABB2BF;">)) {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#7F848E;font-style:italic;">// ts直接提示 类型“string”上不存在属性“push”</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">foo</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">push</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#61AFEF;">example</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;hello world&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> isString(test</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;">)</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> test </span><span style="color:#F97583;">is</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">typeof</span><span style="color:#B392F0;"> test </span><span style="color:#F97583;">===</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;string&quot;</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> example(foo</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">any</span><span style="color:#B392F0;">) {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (isString(foo)) {</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#6B737C;">// ts直接提示 类型“string”上不存在属性“push”</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(</span><span style="color:#79B8FF;">foo</span><span style="color:#B392F0;">.push(</span><span style="color:#F8F8F8;">2</span><span style="color:#B392F0;">))</span></span>
<span class="line"><span style="color:#B392F0;">  }</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"><span style="color:#B392F0;">example(</span><span style="color:#FFAB70;">&quot;hello world&quot;</span><span style="color:#B392F0;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="unknown" tabindex="-1">unknown <a class="header-anchor" href="#unknown" aria-hidden="true">#</a></h2><p>很多情况下, 我们可以使用 unknown 来替代 any , 既灵活, 又可以继续保证类型安全</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">isString</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">val</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">unknown</span><span style="color:#ABB2BF;">): </span><span style="color:#E06C75;font-style:italic;">val</span><span style="color:#ABB2BF;"> is </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">typeof</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">val</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">===</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;string&#39;</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">const</span><span style="color:#B392F0;"> isString </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> (val</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">unknown</span><span style="color:#B392F0;">)</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> val </span><span style="color:#F97583;">is</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">string</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">typeof</span><span style="color:#B392F0;"> val </span><span style="color:#F97583;">===</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;string&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="声明文件" tabindex="-1">声明文件 <a class="header-anchor" href="#声明文件" aria-hidden="true">#</a></h2><blockquote><p>用于为已有js或ts文件提供类型声明，如果多个ts文件都用到相同的类型，就适合创建一个类型声明文件，实现类型共享</p></blockquote><ol><li>创建后缀名为.d.ts的类型声明文件</li><li>使用export导出类型</li><li>ts文件中通过import导入，并且可以省略.d.ts后缀名</li><li>如果不省略.d.ts后缀，ts会报错，提示导入路径不能以“.d.ts”扩展名结束。考虑改为导入“./type.js”。ts(2691)</li><li>因此类型声明文件应该避免与ts文件同名，导致import时引用错误</li></ol><p>示例</p><p>新建<code>type.d.ts</code>，export导出</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">type</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Props</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">x</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">y</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;"> }</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">Props</span><span style="color:#ABB2BF;"> }</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">type</span><span style="color:#B392F0;"> Props </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> { x</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">number</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> y</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">number</span><span style="color:#B392F0;"> }</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#B392F0;"> { Props }</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>新建<code>a.ts</code>，import导入类型</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">Props</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;./type&quot;</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">a</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Props</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">x</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">y</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;"> }</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#B392F0;"> { Props } </span><span style="color:#F97583;">from</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;./type&quot;</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">a</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> Props </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> { x</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">1</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> y</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">2</span><span style="color:#B392F0;"> }</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,110),e=[o];function r(t,c,B,y,F,i){return a(),n("div",null,e)}const u=s(p,[["render",r]]);export{A as __pageData,u as default};
