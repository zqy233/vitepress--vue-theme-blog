import{_ as e,c as a,o,a as r}from"./app.a9997904.js";const f=JSON.parse('{"title":"uniapp","description":"","frontmatter":{},"headers":[{"level":2,"title":"The data property “x“ is already declared as a prop. Use prop default value instead","slug":"the-data-property-x-is-already-declared-as-a-prop-use-prop-default-value-instead","link":"#the-data-property-x-is-already-declared-as-a-prop-use-prop-default-value-instead","children":[]},{"level":2,"title":"JS 文件编译错误] 以下文件体积超过 500KB，已跳过压缩以及 ES6 转 ES5 的处理。common/vendor.js","slug":"js-文件编译错误-以下文件体积超过-500kb-已跳过压缩以及-es6-转-es5-的处理。common-vendor-js","link":"#js-文件编译错误-以下文件体积超过-500kb-已跳过压缩以及-es6-转-es5-的处理。common-vendor-js","children":[]},{"level":2,"title":"DevTools failed to load SourceMap: Could not load content for ***.js.map: HTTP error: code 404","slug":"devtools-failed-to-load-sourcemap-could-not-load-content-for-js-map-http-error-code-404","link":"#devtools-failed-to-load-sourcemap-could-not-load-content-for-js-map-http-error-code-404","children":[]}],"relativePath":"8.其他/4.solve-problems/uniapp.md","lastUpdated":1676276426000}'),t={name:"8.其他/4.solve-problems/uniapp.md"},d=r('<h1 id="uniapp" tabindex="-1">uniapp <a class="header-anchor" href="#uniapp" aria-hidden="true">#</a></h1><h2 id="the-data-property-x-is-already-declared-as-a-prop-use-prop-default-value-instead" tabindex="-1">The data property “x“ is already declared as a prop. Use prop default value instead <a class="header-anchor" href="#the-data-property-x-is-already-declared-as-a-prop-use-prop-default-value-instead" aria-hidden="true">#</a></h2><p>原因：组件传值时，props传过来了一个值，但在页面data中也定义了一个同名值</p><p>props的优先级 &gt; data中的优先级 &gt; methods中的优先级</p><p>解决方案：更换data中定义的属性名即可</p><h2 id="js-文件编译错误-以下文件体积超过-500kb-已跳过压缩以及-es6-转-es5-的处理。common-vendor-js" tabindex="-1">JS 文件编译错误] 以下文件体积超过 500KB，已跳过压缩以及 ES6 转 ES5 的处理。common/vendor.js <a class="header-anchor" href="#js-文件编译错误-以下文件体积超过-500kb-已跳过压缩以及-es6-转-es5-的处理。common-vendor-js" aria-hidden="true">#</a></h2><p>原因：使用uniapp运行至微信小程序时代码文件体积过大</p><p>解决方案：HBuilderx中勾选运行-&gt;运行时是否压缩代码</p><h2 id="devtools-failed-to-load-sourcemap-could-not-load-content-for-js-map-http-error-code-404" tabindex="-1">DevTools failed to load SourceMap: Could not load content for ***.js.map: HTTP error: code 404 <a class="header-anchor" href="#devtools-failed-to-load-sourcemap-could-not-load-content-for-js-map-http-error-code-404" aria-hidden="true">#</a></h2><p>原因：项目引用的第三方的JavaScript工具是压缩后的版本，存在SourceMap的指向信息，浏览器启用了JavaScript源映射，但是项目中没有相应的SourceMap文件，所以抛出此异常</p><p>SourceMap是从已转换的代码映射到原始源的文件，使浏览器能够重构原始源并在调试器中显示重建的原始源，调试原始源代码会比浏览器下载的转换后的代码更加容易</p><p>其实没有SourceMap文件是不会影响项目的正常运行和使用的</p><p>解决方案：控制台右上角点击<code>设置</code>-&gt;Preferences-&gt;Sources-&gt;取消勾选<code>Enable JavaScript source maps</code>选项</p>',13),p=[d];function s(l,n,c,i,u,h){return o(),a("div",null,p)}const v=e(t,[["render",s]]);export{f as __pageData,v as default};
