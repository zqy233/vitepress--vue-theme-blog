import{_ as s,c as n,o as a,a as p}from"./app.a9997904.js";const u=JSON.parse('{"title":"Node环境变量设置","description":"","frontmatter":{},"headers":[{"level":2,"title":"在Webpack配置文件直接赋值（不推荐）","slug":"在webpack配置文件直接赋值-不推荐","link":"#在webpack配置文件直接赋值-不推荐","children":[]},{"level":2,"title":"命令行（CLI）设置（不推荐）","slug":"命令行-cli-设置-不推荐","link":"#命令行-cli-设置-不推荐","children":[{"level":3,"title":"Windows 系统","slug":"windows-系统","link":"#windows-系统","children":[]}]},{"level":2,"title":"配置 package.json（不推荐）","slug":"配置-package-json-不推荐","link":"#配置-package-json-不推荐","children":[{"level":3,"title":"windows 系统","slug":"windows-系统-1","link":"#windows-系统-1","children":[]}]},{"level":2,"title":"cross-env跨平台（推荐）","slug":"cross-env跨平台-推荐","link":"#cross-env跨平台-推荐","children":[]}],"relativePath":"1.前端基础/5.node/4.环境变量设置.md","lastUpdated":1676276426000}'),l={name:"1.前端基础/5.node/4.环境变量设置.md"},o=p(`<h1 id="node环境变量设置" tabindex="-1">Node环境变量设置 <a class="header-anchor" href="#node环境变量设置" aria-hidden="true">#</a></h1><blockquote><p>通常情况下，需要针对不同环境（开发环境、生产环境等），进行相应策略的打包（比如更改接口地址，代码是否压缩等）</p><p>由于打包工具如<code>webpack</code>运行在Nodejs 环境中，要识别不同环境，就得配置Nodejs环境变量，并且把它当成判断不同环境的依据</p><p>Nodejs 提供了 <code>p<wbr>rocess.env</code> API，它返回一个包含用户环境信息的对象。当我们给 Nodejs 设置一个环境变量，并且把它挂载在 <code>p<wbr>rocess.env</code> 对象上，便可以在代码中进行相应的环境判断</p></blockquote><p>于是，经常会看到类似下方的代码：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">mode</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">env</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">NODE_ENV</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">===</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;production&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;production&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;development&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  ...</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#79B8FF;">module</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">  mode</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">process</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">env</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">NODE_ENV</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">===</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;production&#39;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">?</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;production&#39;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;development&#39;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">...</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>要说明的是，<code>NODE_ENV</code> 这个名称只是开发社区的一种共识，名称内容不是固定的。如果需要，你也可以把它定义为 <code>NODE_XXX</code></p><p>那么问题来了，如何设置这个环境变量呢？总结下来，可通过以下几种方式</p><h2 id="在webpack配置文件直接赋值-不推荐" tabindex="-1">在Webpack配置文件直接赋值（不推荐） <a class="header-anchor" href="#在webpack配置文件直接赋值-不推荐" aria-hidden="true">#</a></h2><p>这种方式比较简单粗暴。只需要在Webpack打包配置文件中，直接给 <code>p<wbr>rocess.env.NODE_ENV</code> 赋值即可</p><p>缺点：每次在不同环境下打包时，都要手动反复修改它的值，所以不推荐</p><p>webpack.config.js</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">env</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">NODE_ENV</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;production&quot;</span></span>
<span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">mode</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">env</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">NODE_ENV</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">===</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;production&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;production&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;development&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  ...</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#79B8FF;">process</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">env</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">NODE_ENV</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;production&quot;</span></span>
<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">  mode</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">process</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">env</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">NODE_ENV</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">===</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;production&#39;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">?</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;production&#39;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;development&#39;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">...</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="命令行-cli-设置-不推荐" tabindex="-1">命令行（CLI）设置（不推荐） <a class="header-anchor" href="#命令行-cli-设置-不推荐" aria-hidden="true">#</a></h2><h3 id="windows-系统" tabindex="-1">Windows 系统 <a class="header-anchor" href="#windows-系统" aria-hidden="true">#</a></h3><p>Windows 系统下，最常用的命令行面板就是 <code>CMD</code>（Command的简写） 和 <code>Powershell</code>。它们的操作分别如下：</p><h4 id="cmd-command-或-命令提示符" tabindex="-1">CMD (Command 或 命令提示符) <a class="header-anchor" href="#cmd-command-或-命令提示符" aria-hidden="true">#</a></h4><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 查看所有环境变量</span></span>
<span class="line"><span style="color:#56B6C2;">set</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 查看单个环境变量（以 NODE_ENV 为例）</span></span>
<span class="line"><span style="color:#56B6C2;">set</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">NODE_ENV</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 设置单个环境变量（以 NODE_ENV 为例）</span></span>
<span class="line"><span style="color:#56B6C2;">set</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">NODE_ENV=production</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 删除单个环境变量（以 NODE_ENV 为例）</span></span>
<span class="line"><span style="color:#56B6C2;">set</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">NODE_ENV=</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#6B737C;"># 查看所有环境变量</span></span>
<span class="line"><span style="color:#B392F0;">set</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;"># 查看单个环境变量（以 NODE_ENV 为例）</span></span>
<span class="line"><span style="color:#B392F0;">set </span><span style="color:#9DB1C5;">NODE_ENV</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;"># 设置单个环境变量（以 NODE_ENV 为例）</span></span>
<span class="line"><span style="color:#B392F0;">set </span><span style="color:#9DB1C5;">NODE_ENV=production</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6B737C;"># 删除单个环境变量（以 NODE_ENV 为例）</span></span>
<span class="line"><span style="color:#B392F0;">set </span><span style="color:#9DB1C5;">NODE_ENV=</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>上面的命令行以 <code>NODE_ENV</code> 变量为例，在 CMD 命令面板的操作中，如果 <code>NODE_ENV</code> 没有设置，则通过 <code>set NODE_ENV</code> 命令查看时，会提示 <code>环境变量 NODE_ENV 没有定义</code></p><p>当设置完 <code>NODE_ENV</code>（假设设置值为 <code>production</code>），再通过 <code>set NODE_ENV</code> 命令查看时，会返回 <code>NODE_ENV=production</code></p><p>上面的环境设置只是临时的，即只针对当前运行窗口的环境有效。当CLI运行窗口关闭以后，相关设置都会丢失</p><p>如果你希望设置一直生效（即本地设置），可通过 <code>控制面板 -&gt; 系统和安全 -&gt; 系统 -&gt; 高级系统设置 -&gt; 高级 -&gt; 环境变量</code> 这样进行设置（windows10可能需要重启）</p><p>缺点：只能对本机生效，不适合团队开发，且开发和打包都需要手动配置</p><h2 id="配置-package-json-不推荐" tabindex="-1">配置 package.json（不推荐） <a class="header-anchor" href="#配置-package-json-不推荐" aria-hidden="true">#</a></h2><p>在项目配置文件 package.json 中，根据不同的打包命令去设置相应的 Nodejs 环境变量，是一种非常主流的做法。其实本质上来说，只是将在命令行面板设置环境变量的命令语句放到了 <code>package.json</code> 文件中，把 设置环境变量和打包两个命令合并运行而已</p><h3 id="windows-系统-1" tabindex="-1">windows 系统 <a class="header-anchor" href="#windows-系统-1" aria-hidden="true">#</a></h3><p>无论是使用 CMD (命令提示符) 还是 Powershell 命令行工具，都可以在 <code>package.json</code> 配置<code>NODE_ENV</code></p><p>注意，<code>NODE_ENV=production&amp;&amp;</code>要去掉空格，不然设置完<code>NODE_ENV</code> 会多个空格，变成<code>&quot;production &quot;</code></p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#FFFFFF;">...</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">&quot;scripts&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">&quot;build&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;set NODE_ENV=production&amp;&amp; npm run clean &amp;&amp; webpack&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">&quot;clean&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;rimraf ./build &amp;&amp; mkdirp build&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">{</span></span>
<span class="line"><span style="color:#B392F0;">  ...</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F8F8F8;">&quot;scripts&quot;</span><span style="color:#BBBBBB;">:</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#F8F8F8;">&quot;build&quot;</span><span style="color:#BBBBBB;">:</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;set NODE_ENV=production&amp;&amp; npm run clean &amp;&amp; webpack&quot;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#F8F8F8;">&quot;clean&quot;</span><span style="color:#BBBBBB;">:</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;rimraf ./build &amp;&amp; mkdirp build&quot;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  }</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><code>mkdirp</code> 是一个生成文件夹的第三方包，你只需要在命令行面板运行 <code>npm run build</code> 即可完成打包</p><p>缺点：不能跨平台</p><h2 id="cross-env跨平台-推荐" tabindex="-1">cross-env跨平台（推荐） <a class="header-anchor" href="#cross-env跨平台-推荐" aria-hidden="true">#</a></h2><p><a href="https://www.npmjs.com/package/cross-env" target="_blank" rel="noreferrer">cross-env</a> 是一个跨平台设置环境变量的第三方包，它可以让你只配置一行命令，就能轻松地在多个平台设置环境变量。</p><p>首先，只需要在项目中安装</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">npm </span><span style="color:#98C379;">install</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-D</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">cross-env</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">npm </span><span style="color:#9DB1C5;">install</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">-D</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">cross-env</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>然后，在 <code>package.json</code> 文件中进行设置：</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">// </span><span style="color:#98C379;">package.json</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#56B6C2;">...</span></span>
<span class="line"><span style="color:#98C379;">  &quot;scripts&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#98C379;">    &quot;build&quot;</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;"> &quot;npm run clean &amp;&amp; cross-env NODE_ENV=production webpack&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#98C379;">    &quot;clean&quot;</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;"> &quot;rimraf ./build &amp;&amp; mkdirp build&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">// </span><span style="color:#9DB1C5;">package.json</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">{</span></span>
<span class="line"><span style="color:#B392F0;">  ...</span></span>
<span class="line"><span style="color:#FFAB70;">  &quot;scripts&quot;</span><span style="color:#B392F0;">: {</span></span>
<span class="line"><span style="color:#FFAB70;">    &quot;build&quot;</span><span style="color:#B392F0;">:</span><span style="color:#FFAB70;"> &quot;npm run clean &amp;&amp; cross-env NODE_ENV=production webpack&quot;</span><span style="color:#B392F0;">,</span></span>
<span class="line"><span style="color:#FFAB70;">    &quot;clean&quot;</span><span style="color:#B392F0;">:</span><span style="color:#FFAB70;"> &quot;rimraf ./build &amp;&amp; mkdirp build&quot;</span><span style="color:#B392F0;">,</span></span>
<span class="line"><span style="color:#B392F0;">  }</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>这样，不管是windows还是mac，都可以正常设置<code>NODE_ENV</code></p>`,36),e=[o];function c(r,t,i,B,d,y){return a(),n("div",null,e)}const b=s(l,[["render",c]]);export{u as __pageData,b as default};
