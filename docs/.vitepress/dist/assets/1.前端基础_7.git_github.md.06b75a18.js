import{_ as s,c as n,o as a,a as e}from"./app.a9997904.js";const y=JSON.parse('{"title":"github","description":"","frontmatter":{},"headers":[{"level":2,"title":"pull-request","slug":"pull-request","link":"#pull-request","children":[]},{"level":2,"title":"网页端打开项目","slug":"网页端打开项目","link":"#网页端打开项目","children":[]},{"level":2,"title":"gitpod","slug":"gitpod","link":"#gitpod","children":[]},{"level":2,"title":"hosts","slug":"hosts","link":"#hosts","children":[]},{"level":2,"title":"raw.githubusercontent.com不能访问","slug":"raw-githubusercontent-com不能访问","link":"#raw-githubusercontent-com不能访问","children":[]},{"level":2,"title":"启用clash后使用git命令出现Failed to connect to github.com port 443: Connection refused","slug":"启用clash后使用git命令出现failed-to-connect-to-github-com-port-443-connection-refused","link":"#启用clash后使用git命令出现failed-to-connect-to-github-com-port-443-connection-refused","children":[]},{"level":2,"title":".github","slug":"github-1","link":"#github-1","children":[{"level":3,"title":"CODEOWNERS","slug":"codeowners","link":"#codeowners","children":[]}]},{"level":2,"title":"workflow 文件","slug":"workflow-文件","link":"#workflow-文件","children":[{"level":3,"title":"on. .","slug":"on","link":"#on","children":[]},{"level":3,"title":"jobs..name","slug":"jobs-name","link":"#jobs-name","children":[]},{"level":3,"title":"jobs..runs-on","slug":"jobs-runs-on","link":"#jobs-runs-on","children":[]}]}],"relativePath":"1.前端基础/7.git/github.md","lastUpdated":1676276426000}'),l={name:"1.前端基础/7.git/github.md"},o=e(`<h1 id="github" tabindex="-1">github <a class="header-anchor" href="#github" aria-hidden="true">#</a></h1><h2 id="pull-request" tabindex="-1">pull-request <a class="header-anchor" href="#pull-request" aria-hidden="true">#</a></h2><blockquote><p>主要用于为开源项目做出自己的贡献，以下为相应步骤</p></blockquote><ol><li><p>点击开源项目仓库右上方fork，会在自己仓库生成fork版本的项目</p></li><li><p>git clone fork后的项目</p></li><li><p>开发项目</p></li><li><p>push项目代码至自己仓库</p></li><li><p>新建pull request请求</p></li><li><p>被请求项目的管理员测试审核通过，进行合并</p></li></ol><h2 id="网页端打开项目" tabindex="-1">网页端打开项目 <a class="header-anchor" href="#网页端打开项目" aria-hidden="true">#</a></h2><p>github项目页面按下<code>.</code>键，即可使用网页版vscode打开当前项目</p><h2 id="gitpod" tabindex="-1">gitpod <a class="header-anchor" href="#gitpod" aria-hidden="true">#</a></h2><blockquote><p>云开发与运行项目的平台</p></blockquote><p>在github项目地址前加上<code>gitpod.io/#/</code>，例如：</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">https://gitpod.io/#/github.com/antfu/unplugin-auto-import</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">https://gitpod.io/#/github.com/antfu/unplugin-auto-import</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>从而会跳转至gitpod平台，会自动下载项目依赖，从而在线运行项目</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">https://antfu-unpluginautoimpo-v4a7st4kzi7.ws-us45.gitpod.io/</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">https://antfu-unpluginautoimpo-v4a7st4kzi7.ws-us45.gitpod.io/</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="hosts" tabindex="-1">hosts <a class="header-anchor" href="#hosts" aria-hidden="true">#</a></h2><p><a href="https://so.csdn.net/so/search?q=github&amp;spm=1001.2101.3001.7020" target="_blank" rel="noreferrer">github</a>的ip地址经常变，可以在<a href="https://www.ipaddress.com/" target="_blank" rel="noreferrer">这里</a>查询</p><p>打开C:\\Windows\\System32\\drivers\\etc\\hosts，设置github的host</p><h2 id="raw-githubusercontent-com不能访问" tabindex="-1">raw.githubusercontent.com不能访问 <a class="header-anchor" href="#raw-githubusercontent-com不能访问" aria-hidden="true">#</a></h2><p>打开C:\\Windows\\System32\\drivers\\etc\\hosts</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">199.232.28.133  raw.githubusercontent.com</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">199.232.28.133  raw.githubusercontent.com</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="启用clash后使用git命令出现failed-to-connect-to-github-com-port-443-connection-refused" tabindex="-1">启用clash后使用git命令出现Failed to connect to <a href="http://github.com" target="_blank" rel="noreferrer">github.com</a> port 443: Connection refused <a class="header-anchor" href="#启用clash后使用git命令出现failed-to-connect-to-github-com-port-443-connection-refused" aria-hidden="true">#</a></h2><p>重新设置代理，将代理端口号，设置上去。 clash默认代理端口号 7890 设置如下：</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">git </span><span style="color:#98C379;">config</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">--global</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">http.proxy</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">http://127.0.0.1:</span><span style="color:#D19A66;">7890</span></span>
<span class="line"><span style="color:#ABB2BF;">git </span><span style="color:#98C379;">config</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">--global</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">https.proxy</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">http://127.0.0.1:</span><span style="color:#D19A66;">7890</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">git </span><span style="color:#9DB1C5;">config</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">--global</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">http.proxy</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">http://127.0.0.1:</span><span style="color:#F8F8F8;">7890</span></span>
<span class="line"><span style="color:#B392F0;">git </span><span style="color:#9DB1C5;">config</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">--global</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">https.proxy</span><span style="color:#B392F0;"> </span><span style="color:#9DB1C5;">http://127.0.0.1:</span><span style="color:#F8F8F8;">7890</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="github-1" tabindex="-1">.github <a class="header-anchor" href="#github-1" aria-hidden="true">#</a></h2><h3 id="codeowners" tabindex="-1">CODEOWNERS <a class="header-anchor" href="#codeowners" aria-hidden="true">#</a></h3><p>在做日常迭代交付时提交的 PR，指定组内成员进行代码评审，当代码变更涉及到某文件或目录 A 时，大多数情况下会指派固定的人员 B 进行代码评审。我们就可以称为 B 是 组件 A 的 CodeOwner。简单来说，Codeowner 用来定义谁负责仓库中的特定文件或目录。</p><p>想要使用 CodeOwner 功能，需要在仓库中指定的位置创建一个名为<code>CODEOWNERS</code>文件，它们仅适用于当前分支，指定的位置为：</p><ul><li>在仓库的根目录中</li><li>在<code>.gitee/</code>目录中</li><li>在<code>docs/</code>目录中</li></ul><h2 id="workflow-文件" tabindex="-1">workflow 文件 <a class="header-anchor" href="#workflow-文件" aria-hidden="true">#</a></h2><p><code>GitHub Actions</code> 的配置文件叫做 <strong>workflow</strong>文件，存放在代码仓库的<code>.github/workflows/</code>目录下。比如写一个<code>first.yaml</code>文件，存储的目录就是<code>.github/workflows/first.yaml</code></p><h3 id="on" tabindex="-1">on. . <a class="header-anchor" href="#on" aria-hidden="true">#</a></h3><p>指定触发事件时，可以限定分支或标签。</p><div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#D19A66;">on</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">push</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">branches</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">      - </span><span style="color:#98C379;">master</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#79B8FF;">on</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F8F8F8;">push</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#F8F8F8;">branches</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#B392F0;">      - </span><span style="color:#FFAB70;">master</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>上面代码指定，<code>push</code>事件触发 <strong>workflow</strong>，指定分支是master分支</p><h3 id="jobs-name" tabindex="-1">jobs..name <a class="header-anchor" href="#jobs-name" aria-hidden="true">#</a></h3><p><strong>workflow</strong> 文件的主体是<code>jobs</code>字段，表示要执行的一项或多项任务。</p><p><code>jobs</code>字段里面，需要写出每一项任务的<code>job_id</code>，具体名称自定义。<code>job_id</code>里面的<code>name</code>字段是任务的说明。</p><div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#E06C75;">jobs</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">my_first_job</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">My first job</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">my_second_job</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">My second job</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F8F8F8;">jobs</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F8F8F8;">my_first_job</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#F8F8F8;">name</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">My first job</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F8F8F8;">my_second_job</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#B392F0;">    </span><span style="color:#F8F8F8;">name</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">My second job</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="jobs-runs-on" tabindex="-1">jobs..runs-on <a class="header-anchor" href="#jobs-runs-on" aria-hidden="true">#</a></h3><p><code>runs-on</code>字段指定运行所需要的虚拟机环境。它是必填字段。目前可用的虚拟机如下。</p><div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#98C379;">ubuntu-latest，ubuntu-18.04或ubuntu-16.04</span></span>
<span class="line"><span style="color:#98C379;">windows-latest，windows-2019或windows-2016</span></span>
<span class="line"><span style="color:#98C379;">macOS-latest或macOS-10.14</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#FFAB70;">ubuntu-latest，ubuntu-18.04或ubuntu-16.04</span></span>
<span class="line"><span style="color:#FFAB70;">windows-latest，windows-2019或windows-2016</span></span>
<span class="line"><span style="color:#FFAB70;">macOS-latest或macOS-10.14</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>下面代码指定虚拟机环境为ubuntu-18.04。</p><div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#E06C75;">runs-on</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">ubuntu-18.04</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F8F8F8;">runs-on</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">ubuntu-18.04</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,41),p=[o];function t(r,c,i,d,u,h){return a(),n("div",null,p)}const g=s(l,[["render",t]]);export{y as __pageData,g as default};
