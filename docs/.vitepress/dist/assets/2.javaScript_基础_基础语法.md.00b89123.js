import{_ as s,c as n,o as a,a as l}from"./app.a9997904.js";const b=JSON.parse('{"title":"基础语法","description":"","frontmatter":{},"headers":[{"level":2,"title":"数据类型","slug":"数据类型","link":"#数据类型","children":[]},{"level":2,"title":"变量提升","slug":"变量提升","link":"#变量提升","children":[]},{"level":2,"title":"js-自调用","slug":"js-自调用","link":"#js-自调用","children":[]},{"level":2,"title":"js-闭包","slug":"js-闭包","link":"#js-闭包","children":[]},{"level":2,"title":"js-||","slug":"js","link":"#js","children":[]},{"level":2,"title":"js-return","slug":"js-return","link":"#js-return","children":[]},{"level":2,"title":"==和===区别","slug":"和-区别","link":"#和-区别","children":[]},{"level":2,"title":"js-window.onload","slug":"js-window-onload","link":"#js-window-onload","children":[]},{"level":2,"title":"js-localStorage/sessionStorage","slug":"js-localstorage-sessionstorage","link":"#js-localstorage-sessionstorage","children":[]},{"level":2,"title":"addEventListener 和 on 的区别","slug":"addeventlistener-和-on-的区别","link":"#addeventlistener-和-on-的区别","children":[{"level":3,"title":"总结：推荐使用addEventListener","slug":"总结-推荐使用addeventlistener","link":"#总结-推荐使用addeventlistener","children":[]}]},{"level":2,"title":"鼠标事件","slug":"鼠标事件","link":"#鼠标事件","children":[]},{"level":2,"title":"js-dom 事件级别","slug":"js-dom-事件级别","link":"#js-dom-事件级别","children":[]},{"level":2,"title":"js-dom 操作","slug":"js-dom-操作","link":"#js-dom-操作","children":[]},{"level":2,"title":"js-for 循环","slug":"js-for-循环","link":"#js-for-循环","children":[{"level":3,"title":"continue","slug":"continue","link":"#continue","children":[]},{"level":3,"title":"break","slug":"break","link":"#break","children":[]}]},{"level":2,"title":"console.log","slug":"console-log","link":"#console-log","children":[{"level":3,"title":"设置 console.log 颜色","slug":"设置-console-log-颜色","link":"#设置-console-log-颜色","children":[]}]},{"level":2,"title":"setTimeout","slug":"settimeout","link":"#settimeout","children":[]},{"level":2,"title":"同步/异步","slug":"同步-异步","link":"#同步-异步","children":[{"level":3,"title":"单线程/主线程","slug":"单线程-主线程","link":"#单线程-主线程","children":[]},{"level":3,"title":"工作线程","slug":"工作线程","link":"#工作线程","children":[]},{"level":3,"title":"同步异步","slug":"同步异步","link":"#同步异步","children":[]},{"level":3,"title":"异步的构成要素","slug":"异步的构成要素","link":"#异步的构成要素","children":[]},{"level":3,"title":"消息队列和事件循环","slug":"消息队列和事件循环","link":"#消息队列和事件循环","children":[]},{"level":3,"title":"异步与事件","slug":"异步与事件","link":"#异步与事件","children":[]},{"level":3,"title":"同步异步例子","slug":"同步异步例子","link":"#同步异步例子","children":[]},{"level":3,"title":"生产者与消费者","slug":"生产者与消费者","link":"#生产者与消费者","children":[]},{"level":3,"title":"同步异步写法","slug":"同步异步写法","link":"#同步异步写法","children":[]}]},{"level":2,"title":"打开新网页","slug":"打开新网页","link":"#打开新网页","children":[]}],"relativePath":"2.javaScript/基础/基础语法.md","lastUpdated":1676276426000}'),p={name:"2.javaScript/基础/基础语法.md"},o=l(`<h1 id="基础语法" tabindex="-1">基础语法 <a class="header-anchor" href="#基础语法" aria-hidden="true">#</a></h1><h2 id="数据类型" tabindex="-1">数据类型 <a class="header-anchor" href="#数据类型" aria-hidden="true">#</a></h2><p>es6 之前五个基本类型一个引用类型，五个基本类型是<code>null</code>,<code>undefined</code>,<code>string</code>,<code>number</code>,<code>boolean</code>,一个引用类型是 <code>object</code>（包括 <code>object</code>，<code>function</code>，<code>array</code>），</p><p>es6 之后新增了 <code>symbol</code> 用来表示独一无二的数，和 <code>bigint</code>，所以总共是八种数据类型</p><h2 id="变量提升" tabindex="-1">变量提升 <a class="header-anchor" href="#变量提升" aria-hidden="true">#</a></h2><p>什么是变量提升,举个栗子：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">foo</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">a</span><span style="color:#ABB2BF;">() {}</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">//1</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#61AFEF;">foo</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> foo() {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">var</span><span style="color:#B392F0;"> a </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">1</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">function</span><span style="color:#B392F0;"> a() {}</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(a) </span><span style="color:#6B737C;">//1</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"><span style="color:#B392F0;">foo()</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">foo</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">a</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">a</span><span style="color:#ABB2BF;">() {}</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">//a()</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#61AFEF;">foo</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> foo() {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">var</span><span style="color:#B392F0;"> a</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">function</span><span style="color:#B392F0;"> a() {}</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(a) </span><span style="color:#6B737C;">//a()</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"><span style="color:#B392F0;">foo()</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>上方代码 js 是这样解析的</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">foo</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">a</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">a</span><span style="color:#ABB2BF;">() {}</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">//1</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#61AFEF;">foo</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> foo() {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">var</span><span style="color:#B392F0;"> a</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">function</span><span style="color:#B392F0;"> a() {}</span></span>
<span class="line"><span style="color:#B392F0;">  a </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">1</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(a) </span><span style="color:#6B737C;">//1</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"><span style="color:#B392F0;">foo()</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">foo</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">a</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">a</span><span style="color:#ABB2BF;">() {}</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">//a()</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#61AFEF;">foo</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> foo() {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">var</span><span style="color:#B392F0;"> a</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">function</span><span style="color:#B392F0;"> a() {}</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(a) </span><span style="color:#6B737C;">//a()</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"><span style="color:#B392F0;">foo()</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>变量提升的规则： 变量在声明提升的时候，是全部提升到作用域的最前面 变量赋值时赋值的位置在变量原本定义的位置 所以变量的提升，提升的其实是变量的声明，而不是变量的赋值</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">foo</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 1</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// undefined</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">2</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#61AFEF;">foo</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> foo() {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">var</span><span style="color:#B392F0;"> a </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">1</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(a) </span><span style="color:#6B737C;">// 1</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(b) </span><span style="color:#6B737C;">// undefined</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">var</span><span style="color:#B392F0;"> b </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">2</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"><span style="color:#B392F0;">foo()</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>解析为：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">foo</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">a</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">b</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 1</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// undefined</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">2</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#61AFEF;">foo</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> foo() {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">var</span><span style="color:#B392F0;"> a</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">var</span><span style="color:#B392F0;"> b</span></span>
<span class="line"><span style="color:#B392F0;">  a </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">1</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(a) </span><span style="color:#6B737C;">// 1</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(b) </span><span style="color:#6B737C;">// undefined</span></span>
<span class="line"><span style="color:#B392F0;">  b </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">2</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"><span style="color:#B392F0;">foo()</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>函数提升则是整个函数整体提升</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">foo</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">//a()</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">//1</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">a</span><span style="color:#ABB2BF;">() {}</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">//1</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#61AFEF;">foo</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> foo() {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(a) </span><span style="color:#6B737C;">//a()</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">var</span><span style="color:#B392F0;"> a </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">1</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(a) </span><span style="color:#6B737C;">//1</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">function</span><span style="color:#B392F0;"> a() {}</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(a) </span><span style="color:#6B737C;">//1</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"><span style="color:#B392F0;">foo()</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>解析为：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">foo</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">a</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">a</span><span style="color:#ABB2BF;">() {}</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// a()</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 1</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 1</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#61AFEF;">foo</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> foo() {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">var</span><span style="color:#B392F0;"> a</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">function</span><span style="color:#B392F0;"> a() {}</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(a) </span><span style="color:#6B737C;">// a()</span></span>
<span class="line"><span style="color:#B392F0;">  a </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">1</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(a) </span><span style="color:#6B737C;">// 1</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(a) </span><span style="color:#6B737C;">// 1</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"><span style="color:#B392F0;">foo()</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>复杂一点的例子</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">foo</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">a</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">b</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">b</span><span style="color:#ABB2BF;">() {}</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">a</span><span style="color:#ABB2BF;">() {}</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// a()</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 1</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// b()</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">2</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">//2</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> foo() {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">var</span><span style="color:#B392F0;"> a</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">var</span><span style="color:#B392F0;"> b</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">function</span><span style="color:#B392F0;"> b() {}</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">function</span><span style="color:#B392F0;"> a() {}</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(a) </span><span style="color:#6B737C;">// a()</span></span>
<span class="line"><span style="color:#B392F0;">  a </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">1</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(a) </span><span style="color:#6B737C;">// 1</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(b) </span><span style="color:#6B737C;">// b()</span></span>
<span class="line"><span style="color:#B392F0;">  b </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">2</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(b) </span><span style="color:#6B737C;">//2</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>解析为：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">foo</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">a</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">b</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">b</span><span style="color:#ABB2BF;">() {}</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">a</span><span style="color:#ABB2BF;">() {}</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// a()</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 1</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// b()</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">2</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">//2</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> foo() {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">var</span><span style="color:#B392F0;"> a</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">var</span><span style="color:#B392F0;"> b</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">function</span><span style="color:#B392F0;"> b() {}</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">function</span><span style="color:#B392F0;"> a() {}</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(a) </span><span style="color:#6B737C;">// a()</span></span>
<span class="line"><span style="color:#B392F0;">  a </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">1</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(a) </span><span style="color:#6B737C;">// 1</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(b) </span><span style="color:#6B737C;">// b()</span></span>
<span class="line"><span style="color:#B392F0;">  b </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">2</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(b) </span><span style="color:#6B737C;">//2</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>隐式全局变量不会提升</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">foo</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 报错 b is not defined</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;aaa&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;bbb&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#61AFEF;">foo</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> foo() {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(a)</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(b) </span><span style="color:#6B737C;">// 报错 b is not defined</span></span>
<span class="line"><span style="color:#B392F0;">  b </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;aaa&#39;</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">var</span><span style="color:#B392F0;"> a </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;bbb&#39;</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(a)</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(b)</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"><span style="color:#B392F0;">foo()</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>面试题</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">//a()</span></span>
<span class="line"><span style="color:#61AFEF;">a</span><span style="color:#ABB2BF;">() </span><span style="color:#7F848E;font-style:italic;">//10</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">3</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">a</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">//3</span></span>
<span class="line"><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">6</span></span>
<span class="line"><span style="color:#61AFEF;">a</span><span style="color:#ABB2BF;">() </span><span style="color:#7F848E;font-style:italic;">// a is not a function</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(a) </span><span style="color:#6B737C;">//a()</span></span>
<span class="line"><span style="color:#B392F0;">a() </span><span style="color:#6B737C;">//10</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#B392F0;"> a </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">3</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> a() {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(</span><span style="color:#F8F8F8;">10</span><span style="color:#B392F0;">)</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(a) </span><span style="color:#6B737C;">//3</span></span>
<span class="line"><span style="color:#B392F0;">a </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">6</span></span>
<span class="line"><span style="color:#B392F0;">a() </span><span style="color:#6B737C;">// a is not a function</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>自己调用自己，需要一个结束条件来结束自我调用</p><p>原理：每次 return 都会结束函数的运行，但 return 时又调用了函数，从而继续运行下一次函数，又继续 return，又继续调用，直到满足结束条件，没有下一次调用</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">sum</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">n</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">n</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">==</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">sum</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">n</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">-</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">n</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">amount</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">sum</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">amount</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">//15</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> sum(n) {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (n </span><span style="color:#F97583;">==</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">1</span><span style="color:#B392F0;">) </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">1</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> sum(n </span><span style="color:#F97583;">-</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">1</span><span style="color:#B392F0;">) </span><span style="color:#F97583;">+</span><span style="color:#B392F0;"> n</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">amount</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> sum(</span><span style="color:#F8F8F8;">5</span><span style="color:#B392F0;">)</span></span>
<span class="line"><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(amount) </span><span style="color:#6B737C;">//15</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>题目 1：传递两个参数 m，n，返回长度为 m，所有元素都为 n 的数组</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">fn</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">m</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">n</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">m</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">fn</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">m</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">-</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">n</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">concat</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">n</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> []</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">fn</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;">;[</span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> fn(m</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> n) {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> m </span><span style="color:#F97583;">?</span><span style="color:#B392F0;"> fn(m </span><span style="color:#F97583;">-</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">1</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> n).concat(n) </span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> []</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(fn(</span><span style="color:#F8F8F8;">5</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">4</span><span style="color:#B392F0;">))</span></span>
<span class="line"><span style="color:#B392F0;">;[</span><span style="color:#F8F8F8;">4</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">4</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">4</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">4</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">4</span><span style="color:#B392F0;">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="js-自调用" tabindex="-1">js-自调用 <a class="header-anchor" href="#js-自调用" aria-hidden="true">#</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">add</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">() {})()</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">add</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> (</span><span style="color:#F97583;">function</span><span style="color:#B392F0;"> add() {})()</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="js-闭包" tabindex="-1">js-闭包 <a class="header-anchor" href="#js-闭包" aria-hidden="true">#</a></h2><p>JavaScript 变量可以是局部变量或全局变量（函数内部定义的变量是私有变量，函数外部定义的变量是全局变量）</p><p>获取或修改私有变量可以用到内嵌函数</p><p>闭包基于内嵌函数，return 一个内嵌函数，在内嵌函数中进行私有变量的处理</p><p>函数内部的私有变量可以通过内嵌函数修改</p><p>内嵌函数示例：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#abb2bf;">function add()</span></span>
<span class="line"><span style="color:#abb2bf;">  {</span></span>
<span class="line"><span style="color:#abb2bf;">    let counter = 0;</span></span>
<span class="line"><span style="color:#abb2bf;">    function plus()</span></span>
<span class="line"><span style="color:#abb2bf;">      {</span></span>
<span class="line"><span style="color:#abb2bf;">        counter += 1;</span></span>
<span class="line"><span style="color:#abb2bf;">    }</span></span>
<span class="line"><span style="color:#abb2bf;">    plus();</span></span>
<span class="line"><span style="color:#abb2bf;">    return counter;</span></span>
<span class="line"><span style="color:#abb2bf;">}</span></span>
<span class="line"><span style="color:#abb2bf;">console.log(add());   //1</span></span>
<span class="line"><span style="color:#abb2bf;"></span></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#b392f0;">function add()</span></span>
<span class="line"><span style="color:#b392f0;">  {</span></span>
<span class="line"><span style="color:#b392f0;">    let counter = 0;</span></span>
<span class="line"><span style="color:#b392f0;">    function plus()</span></span>
<span class="line"><span style="color:#b392f0;">      {</span></span>
<span class="line"><span style="color:#b392f0;">        counter += 1;</span></span>
<span class="line"><span style="color:#b392f0;">    }</span></span>
<span class="line"><span style="color:#b392f0;">    plus();</span></span>
<span class="line"><span style="color:#b392f0;">    return counter;</span></span>
<span class="line"><span style="color:#b392f0;">}</span></span>
<span class="line"><span style="color:#b392f0;">console.log(add());   //1</span></span>
<span class="line"><span style="color:#b392f0;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>闭包示例：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#abb2bf;">const add = (function add() {</span></span>
<span class="line"><span style="color:#abb2bf;">  let counter = 0;</span></span>
<span class="line"><span style="color:#abb2bf;">  return function(){</span></span>
<span class="line"><span style="color:#abb2bf;">  return counter +=1}</span></span>
<span class="line"><span style="color:#abb2bf;">  })()</span></span>
<span class="line"><span style="color:#abb2bf;">  console.log(add()); //1</span></span>
<span class="line"><span style="color:#abb2bf;">  console.log(add()); //2</span></span>
<span class="line"><span style="color:#abb2bf;"></span></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#b392f0;">const add = (function add() {</span></span>
<span class="line"><span style="color:#b392f0;">  let counter = 0;</span></span>
<span class="line"><span style="color:#b392f0;">  return function(){</span></span>
<span class="line"><span style="color:#b392f0;">  return counter +=1}</span></span>
<span class="line"><span style="color:#b392f0;">  })()</span></span>
<span class="line"><span style="color:#b392f0;">  console.log(add()); //1</span></span>
<span class="line"><span style="color:#b392f0;">  console.log(add()); //2</span></span>
<span class="line"><span style="color:#b392f0;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="js" tabindex="-1">js-|| <a class="header-anchor" href="#js" aria-hidden="true">#</a></h2><p>0 算 false</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">a</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">||</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 1</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">b</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">||</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 1</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">a</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">false</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">||</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">1</span></span>
<span class="line"><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(a) </span><span style="color:#6B737C;">// 1</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">b</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">0</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">||</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">1</span></span>
<span class="line"><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(b) </span><span style="color:#6B737C;">// 1</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">a</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span></span>
<span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">a</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">0</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#B392F0;"> (a) {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(</span><span style="color:#F8F8F8;">1</span><span style="color:#B392F0;">)</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#D19A66;">undefined</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">|</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">// 结果为0，interesting</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#79B8FF;">undefined</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;&#39;</span><span style="color:#B392F0;"> </span><span style="color:#6B737C;">// 结果为0，interesting</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="js-return" tabindex="-1">js-return <a class="header-anchor" href="#js-return" aria-hidden="true">#</a></h2><p>return 赋值语句的结果是 return 最左侧的变量</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">let</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">b</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">2</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">name</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">name</span><span style="color:#ABB2BF;">())</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#B392F0;"> a </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">1</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">b</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">2</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> name() {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> (a </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> b)</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(name())</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>return 有 true 则会 return true</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">a</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">false</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">b</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">true</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">name</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">params</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">||</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">b</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">name</span><span style="color:#ABB2BF;">()) </span><span style="color:#7F848E;font-style:italic;">//true</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">a</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">b</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> name(params) {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> a </span><span style="color:#F97583;">||</span><span style="color:#B392F0;"> b</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(name()) </span><span style="color:#6B737C;">//true</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">a</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">false</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">b</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">false</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">name</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">||</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">b</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">name</span><span style="color:#ABB2BF;">()) </span><span style="color:#7F848E;font-style:italic;">//false</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">a</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">b</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> name() {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#F97583;">return</span><span style="color:#B392F0;"> a </span><span style="color:#F97583;">||</span><span style="color:#B392F0;"> b</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(name()) </span><span style="color:#6B737C;">//false</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="和-区别" tabindex="-1">==和===区别 <a class="header-anchor" href="#和-区别" aria-hidden="true">#</a></h2><p>简单来说： == 代表相同， ===代表严格相同</p><p>当进行双等号比较时候： 先检查两个操作数数据类型，如果相同， 则进行===比，如果不同， 则愿意为你进行一次类型转换， 转换成相同类型后再进行比较， 而===比较时， 如果类型不同，直接就是 false</p><p>操作数 1 == 操作数 2， 操作数 1 === 操作数 2</p><p>比较过程：</p><p>双等号==：</p><p>（1）如果两个值类型相同，再进行三个等号(===)的比较</p><p>（2）如果两个值类型不同，也有可能相等，需根据以下规则进行类型转换在比较：</p><p>1）如果一个是 null，一个是 undefined，那么相等</p><p>2）如果一个是 0，一个是 false，那么相等</p><p>3）如果一个是字符串，一个是数值，把字符串转换成数值之后再进行比较</p><p>三等号===:</p><p>（1）如果类型不同，就一定不相等</p><p>（2）如果两个都是数值，并且是同一个值，那么相等；如果其中至少一个是 NaN，那么不相等。（判断一个值是否是 NaN，只能使用 isNaN( ) 来判断）</p><p>（3）如果两个都是字符串，每个位置的字符都一样，那么相等，否则不相等。</p><p>（4）如果两个值都是 true，或是 false，那么相等</p><p>（5）如果两个值都引用同一个对象或是函数，那么相等，否则不相等</p><p>（6）如果两个值都是 null，或是 undefined，那么相等</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">a</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">0</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">a</span><span style="color:#56B6C2;">==</span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// true</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">a</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">0</span></span>
<span class="line"><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(a</span><span style="color:#F97583;">==</span><span style="color:#79B8FF;">false</span><span style="color:#B392F0;">) </span><span style="color:#6B737C;">// true</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="js-window-onload" tabindex="-1">js-window.onload <a class="header-anchor" href="#js-window-onload" aria-hidden="true">#</a></h2><p>window 页面加载完成时调用</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">window</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onload</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> () {}</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#79B8FF;">window</span><span style="color:#B392F0;">.onload </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">function</span><span style="color:#B392F0;"> () {}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="js-localstorage-sessionstorage" tabindex="-1">js-localStorage/sessionStorage <a class="header-anchor" href="#js-localstorage-sessionstorage" aria-hidden="true">#</a></h2><p>使用 localStorage 创建一个本地存储的 name/value 键值对</p><p>localStorage 和 sessionStorage 属性允许在浏览器中存储 key/value 对的数据。</p><p>localStorage 用于长久保存整个网站的数据，保存的数据没有过期时间，直到手动去删除</p><p>sessionStorage 只将数据保存在当前会话中，该数据对象临时保存同一窗口(或标签页)的数据，在关闭窗口或标签页之后将会删除这些数据</p><p>localStorage 本质上是对字符串的读取，有 json 格式时需要 JSON.stringify()转化为字符串。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">localStorage</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setItem</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;text&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;hello&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">//第一种存储方式</span></span>
<span class="line"><span style="color:#E5C07B;">localStorage</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">text</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;world&#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">//第二种存储方式</span></span>
<span class="line"><span style="color:#E5C07B;">localStorage</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getItem</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;text&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">//调用getItem方法取值</span></span>
<span class="line"><span style="color:#E5C07B;">localStorage</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">text</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">//直接取值</span></span>
<span class="line"><span style="color:#E5C07B;">localStorage</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">removeItem</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;text&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">//删除localStorage</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#79B8FF;">localStorage</span><span style="color:#B392F0;">.setItem(</span><span style="color:#FFAB70;">&#39;text&#39;</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;hello&#39;</span><span style="color:#B392F0;">) </span><span style="color:#6B737C;">//第一种存储方式</span></span>
<span class="line"><span style="color:#79B8FF;">localStorage</span><span style="color:#B392F0;">.text </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;world&#39;</span><span style="color:#B392F0;"> </span><span style="color:#6B737C;">//第二种存储方式</span></span>
<span class="line"><span style="color:#79B8FF;">localStorage</span><span style="color:#B392F0;">.getItem(</span><span style="color:#FFAB70;">&#39;text&#39;</span><span style="color:#B392F0;">) </span><span style="color:#6B737C;">//调用getItem方法取值</span></span>
<span class="line"><span style="color:#79B8FF;">localStorage</span><span style="color:#B392F0;">.text </span><span style="color:#6B737C;">//直接取值</span></span>
<span class="line"><span style="color:#79B8FF;">localStorage</span><span style="color:#B392F0;">.removeItem(</span><span style="color:#FFAB70;">&#39;text&#39;</span><span style="color:#B392F0;">) </span><span style="color:#6B737C;">//删除localStorage</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="addeventlistener-和-on-的区别" tabindex="-1">addEventListener 和 on 的区别 <a class="header-anchor" href="#addeventlistener-和-on-的区别" aria-hidden="true">#</a></h2><p>addEventListenert 第一个参数为事件名，第二个参数为函数，第三个参数为 Boolean,为 true 执行捕获机制,如果是 false 执行冒泡机制,可以省略,默认 false</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">div</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">addEventListener</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;click&#39;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;click&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#79B8FF;">div</span><span style="color:#B392F0;">.addEventListener(</span><span style="color:#FFAB70;">&#39;click&#39;</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(</span><span style="color:#FFAB70;">&#39;click&#39;</span><span style="color:#B392F0;">)</span></span>
<span class="line"><span style="color:#B392F0;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>on 同一个事件只能绑定单个方法,因为绑定多个,后一个会覆盖前一个</li><li>addEventListener 可以给同一个事件绑定多个方法,且方法间不会覆盖,自上而下依次执行</li><li>addEventListener 可以利用第三个参数决定采用事件冒泡还是事件捕获</li><li>addEventListener 它对任何 DOM 元素都是有效的,而不仅仅只对 HTML 元素有效(DOM 不是专为 HTML 设计的，它是通用型的标准，为所有标记语言(如 java 中常见的 xml 等)而设计)</li><li>addEventListener 为 DOM2 级事件绑定，onclick 为 DOM0 级事件绑定()</li><li>在移除事件上，on 是指针指向 null，例如 document.onclick = null，而 addEventListener 则使用的是独有的移除方法 removeListener（要使用此方法，addEventListener 必须执行的是外部函数或存在函数名，不然则不能使用）</li><li>IE678 只能使用 attachEvent，无 addEventListener</li></ul><h3 id="总结-推荐使用addeventlistener" tabindex="-1">总结：推荐使用addEventListener <a class="header-anchor" href="#总结-推荐使用addeventlistener" aria-hidden="true">#</a></h3><h2 id="鼠标事件" tabindex="-1">鼠标事件 <a class="header-anchor" href="#鼠标事件" aria-hidden="true">#</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#E06C75;">toucshtart</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">// 鼠标点击</span></span>
<span class="line"><span style="color:#E06C75;">touchmove</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">// 鼠标离开</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">toucshtart </span><span style="color:#6B737C;">// 鼠标点击</span></span>
<span class="line"><span style="color:#B392F0;">touchmove </span><span style="color:#6B737C;">// 鼠标离开</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="js-dom-事件级别" tabindex="-1">js-dom 事件级别 <a class="header-anchor" href="#js-dom-事件级别" aria-hidden="true">#</a></h2><ol><li>0 级只能定义一个事件，多事件会互相覆盖</li><li>1 级没有事件</li><li>2 级多出了事件的自定义，并且还有事件冒泡和捕获。注意 ie11 以下的写法(IE 事件处理程序没有第三个参数，因为 IE 早期版本只支持事件冒泡，所以默认就是事件冒泡)</li><li>3 级多了自定义事件，和一起其他扩展的事件</li></ol><h2 id="js-dom-操作" tabindex="-1">js-dom 操作 <a class="header-anchor" href="#js-dom-操作" aria-hidden="true">#</a></h2><p>获取 dom</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">document</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">querySelector</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">// css选择器，获取单个dom</span></span>
<span class="line"><span style="color:#E5C07B;">document</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">querySelectorAll</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;">// css选择器，获取全部dom</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#79B8FF;">document</span><span style="color:#B392F0;">.querySelector </span><span style="color:#6B737C;">// css选择器，获取单个dom</span></span>
<span class="line"><span style="color:#79B8FF;">document</span><span style="color:#B392F0;">.querySelectorAll </span><span style="color:#6B737C;">// css选择器，获取全部dom</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>是否包含类名</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">element</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">classList</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">contains</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;类名&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#79B8FF;">element</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">classList</span><span style="color:#B392F0;">.contains(</span><span style="color:#FFAB70;">&#39;类名&#39;</span><span style="color:#B392F0;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>添加和移除类名</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">element</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">classList</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;类名&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">element</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">classList</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">remove</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;类名&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#79B8FF;">element</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">classList</span><span style="color:#B392F0;">.add(</span><span style="color:#FFAB70;">&#39;类名&#39;</span><span style="color:#B392F0;">)</span></span>
<span class="line"><span style="color:#79B8FF;">element</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">classList</span><span style="color:#B392F0;">.remove(</span><span style="color:#FFAB70;">&#39;类名&#39;</span><span style="color:#B392F0;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>创建 dom</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createElement</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;div&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#79B8FF;">document</span><span style="color:#B392F0;">.createElement(</span><span style="color:#FFAB70;">&#39;div&#39;</span><span style="color:#B392F0;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="js-for-循环" tabindex="-1">js-for 循环 <a class="header-anchor" href="#js-for-循环" aria-hidden="true">#</a></h2><p>continue 和 break 的区别：</p><h3 id="continue" tabindex="-1">continue <a class="header-anchor" href="#continue" aria-hidden="true">#</a></h3><p>终止本次循环，接着还执行下一次循环</p><h3 id="break" tabindex="-1">break <a class="header-anchor" href="#break" aria-hidden="true">#</a></h3><p>用于完全结束一个循环，跳出循环体执行循环后面的语句</p><p>因为 js 中 for 是没有局部作用域的概念的，所以只有把 for 循环放在函数中时，才可以在 for 循环中使用 return 语句</p><h2 id="console-log" tabindex="-1">console.log <a class="header-anchor" href="#console-log" aria-hidden="true">#</a></h2><h3 id="设置-console-log-颜色" tabindex="-1">设置 console.log 颜色 <a class="header-anchor" href="#设置-console-log-颜色" aria-hidden="true">#</a></h3><p>调试 js 代码的时候，为调试的日志添加样式可以使信息更醒目</p><p>第一个参数就是要输出的字符串，通过<code>%c</code>分割的区间与之后的参数一一对应，参数就是标准的 css，如果对应的参数不足，无法匹配<code>%c</code>会以字符串的形式输出，参数过多就会直接以字符串形式输出多余的样式。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#98C379;">&#39;%cBinfoTeamFeUI&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#98C379;">&#39;font-size:20px;color:blue;background:yellow;&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">BinfoTeamFeUI</span></span>
<span class="line"><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#FFAB70;">&#39;%cBinfoTeamFeUI&#39;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#FFAB70;">&#39;font-size:20px;color:blue;background:yellow;&#39;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  BinfoTeamFeUI</span></span>
<span class="line"><span style="color:#B392F0;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="settimeout" tabindex="-1">setTimeout <a class="header-anchor" href="#settimeout" aria-hidden="true">#</a></h2><blockquote><blockquote><p>setTimeout(fn,millisec) 方法用于在指定的毫秒数后调用函数或计算表达式 很简单，setTimeout() 只执行 fn 一次，到底什么时候执行取决于第二个参数 millisec 设定的毫秒数，所以很多人习惯上称之为延迟，无非就是延迟一段时间后再执行里面的代码</p></blockquote></blockquote><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">setTimeout</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;我是setTimeout&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">}, </span><span style="color:#D19A66;">1000</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">setTimeout(</span><span style="color:#F97583;">function</span><span style="color:#B392F0;"> () {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(</span><span style="color:#FFAB70;">&#39;我是setTimeout&#39;</span><span style="color:#B392F0;">)</span></span>
<span class="line"><span style="color:#B392F0;">}</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">1000</span><span style="color:#B392F0;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>正常情况下，等 1000 毫秒以后会在浏览器的控制台输出</p><p>OK，看一个例子，这个例子的输出结果是什么？</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">setTimeout</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">}, </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#B392F0;">setTimeout(</span><span style="color:#F97583;">function</span><span style="color:#B392F0;"> () {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(</span><span style="color:#F8F8F8;">1</span><span style="color:#B392F0;">)</span></span>
<span class="line"><span style="color:#B392F0;">}</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">0</span><span style="color:#B392F0;">)</span></span>
<span class="line"><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(</span><span style="color:#F8F8F8;">2</span><span style="color:#B392F0;">)</span></span>
<span class="line"><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(</span><span style="color:#F8F8F8;">3</span><span style="color:#B392F0;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>出乎一些人的意料，得到的结果竟然是<code>2、3、1</code>。这似乎不按套路出牌啊，明明是等待了 0 毫秒也就是不等待直接输出啊，为啥 1 却在最后输出了呢？</p><p>这就需要搞清楚一个很重要的概念：<code>js是单线程的</code></p><p>单线程就意味着，所有任务需要排队，前一个任务结束，才会执行后一个任务。如果前一个任务耗时很长，后一个任务就不得不一直等着</p><p>其实很好理解，就像大家去超市买东西一样，所有买东西的人都需要在收银台排队结账，正常情况下每个收银台同一时间只能为一位顾客结账，这位顾客结账完成才能为下一位顾客服务</p><p>而浏览器的内核是多线程的，它们在内核制控下相互配合以保持同步，一个浏览器至少实现三个常驻线程：javascript 引擎线程，GUI 渲染线程，浏览器事件触发线程</p><p>javascript 引擎是基于事件驱动单线程执行的，JS 引擎一直等待着任务队列中任务的到来，然后加以处理，浏览器无论什么时候都只有一个 JS 线程在运行 JS 程序</p><p>GUI 渲染线程负责渲染浏览器界面，当界面需要重绘（Repaint）或由于某种操作引发回流(reflow)时,该线程就会执行。但需要注意 GUI 渲染线程与 JS 引擎是互斥的，当 JS 引擎执行时 GUI 线程会被挂起，GUI 更新会被保存在一个队列中等到 JS 引擎空闲时立即被执行</p><p>事件触发线程，当一个事件被触发时该线程会把事件添加到待处理队列的队尾，等待 JS 引擎的处理。这些事件可来自 JavaScript 引擎当前执行的代码块如 setTimeOut、也可来自浏览器内核的其他线程如鼠标点击、AJAX 异步请求等，但由于 JS 的单线程关系所有这些事件都得排队等待 JS 引擎处理。（当线程中没有执行任何同步代码的前提下才会执行异步代码）</p><p>其实，当 js 代码执行遇到 setTimeout(fn,millisec)时，会把 fn 这个函数放在任务队列中，当 js 引擎线程空闲时并达到 millisec 指定的时间时，才会把 fn 放到 js 引擎线程中执行</p><p>HTML5 标准规定了 setTimeout()的第二个参数的最小值（最短间隔），不得低于 4 毫秒，如果低于这个值，就会自动增加。在此之前，老版本的浏览器都将最短间隔设为 10 毫秒。另外，对于那些 DOM 的变动（尤其是涉及页面重新渲染的部分），通常不会立即执行，而是每 16 毫秒执行一次。这时使用 requestAnimationFrame()的效果要好于 setTimeout() 。</p><p>需要注意的是，setTimeout()只是将事件插入了&quot;任务队列&quot;，必须等到当前代码（执行栈）执行完，主线程才会去执行它指定的回调函数。要是当前代码耗时很长，有可能要等很久，所以并没有办法保证，回调函数一定会在 setTimeout()指定的时间执行</p><p>setTimeout(fn,0)的含义是，指定某个任务在主线程最早可得的空闲时间执行，也就是说，尽可能早得执行。它在&quot;任务队列&quot;的尾部添加一个事件，因此要等到同步任务和&quot;任务队列&quot;现有的事件都处理完，才会得到执行</p><h2 id="同步-异步" tabindex="-1">同步/异步 <a class="header-anchor" href="#同步-异步" aria-hidden="true">#</a></h2><h3 id="单线程-主线程" tabindex="-1">单线程/主线程 <a class="header-anchor" href="#单线程-主线程" aria-hidden="true">#</a></h3><p>JavaScript 是单线程的。所谓单线程，就是指在 JS 引擎中负责解释和执行 JavaScript 代码的线程只有一个，一次只能完成一件任务。如果有多个任务，就必须排队，等待前面一个任务完成，再执行后面一个任务。如果一个任务耗时过长，那么后面的任务就必须一直等待下去，会拖延整个程序。我们不妨叫它主线程</p><h3 id="工作线程" tabindex="-1">工作线程 <a class="header-anchor" href="#工作线程" aria-hidden="true">#</a></h3><p>实际上还存在其他的线程。例如：处理 AJAX 请求的线程、处理 DOM 事件的线程、定时器线程、读写文件的线程(例如在 Node.js 中)等等。这些线程可能存在于 JS 引擎之内，也可能存在于 JS 引擎之外，在此我们不做区分。统称为工作线程</p><h3 id="同步异步" tabindex="-1">同步异步 <a class="header-anchor" href="#同步异步" aria-hidden="true">#</a></h3><p>Javascript 语言将任务的执行模式分成两种：同步（Synchronous）和异步（Asynchronous）</p><p>同步就是后一个任务等待前一个任务结束，然后再执行，程序的执行顺序与任务的排列顺序是一致的</p><p>异步用于解决主线程处理时间较长或时间不确定的任务造成阻塞的情况，把这样的任务交给工作线程去处理，在此期间主进程不用等待工作进程，而是可以一个接一个地处理自己任务，如果又遇到时间不确定的任务，就接着交给工作线程去处理</p><h3 id="异步的构成要素" tabindex="-1">异步的构成要素 <a class="header-anchor" href="#异步的构成要素" aria-hidden="true">#</a></h3><p>异步函数实际上很快就调用完成了。但是后面还有工作线程执行异步任务、通知主线程、主线程调用回调函数等很多步骤。我们把整个过程叫做异步过程。异步函数的调用在整个异步过程中，只是一小部分</p><p>总结一下，一个异步过程通常是这样的：</p><p>主线程发起一个异步请求，相应的工作线程接收请求并告知主线程已收到(异步函数返回)；主线程可以继续执行后面的代码，同时工作线程执行异步任务；工作线程完成工作后，通知主线程；主线程收到通知后，执行一定的动作(调用回调函数)。</p><p>它可以叫做异步过程的发起函数，或者叫做异步任务注册函数。args 是这个函数需要的参数。callbackFn 也是这个函数的参数，但是它比较特殊所以单独列出来。所以，从主线程的角度看，一个异步过程包括下面两个要素：发起函数(或叫注册函数)A 和回调函数 callbackFn。它们都是在主线程上调用的，其中注册函数用来发起异步过程，回调函数用来处理结果。</p><h3 id="消息队列和事件循环" tabindex="-1">消息队列和事件循环 <a class="header-anchor" href="#消息队列和事件循环" aria-hidden="true">#</a></h3><p>异步过程中，工作线程在异步操作完成后需要通知主线程。这个通知机制是利用消息队列和事件循环实现的</p><p>工作线程将消息放到消息队列，主线程通过事件循环过程去取消息</p><ul><li><strong>消息队列</strong>：消息队列是一个先进先出的队列，它里面存放着各种消息</li><li><strong>事件循环</strong>：事件循环是指主线程重复从消息队列中取消息、执行的过程</li></ul><p>实际上，主线程只会做一件事情，就是从消息队列里面取消息、执行消息，再取消息、再执行。当消息队列为空时，就会等待直到消息队列变成非空。而且主线程只有在将当前的消息执行完成后，才会去取下一个消息。这种机制就叫做事件循环机制，取一个消息并执行的过程叫做一次循环</p><p>事件循环用代码表示大概是这样的：</p><p>那么，消息队列中放的消息具体是什么东西？消息的具体结构当然跟具体的实现有关，但是为了简单起见，我们可以认为：消息就是注册异步任务时添加的回调函数。</p><p>主线程在执行完当前循环中的所有代码后，就会到消息队列取出这条消息(也就是 message 函数)，并执行它。到此为止，就完成了工作线程对主线程的通知，回调函数也就得到了执行。如果一开始主线程就没有提供回调函数，AJAX 线程在收到 HTTP 响应后，也就没必要通知主线程，从而也没必要往消息队列放消息。</p><h3 id="异步与事件" tabindex="-1">异步与事件 <a class="header-anchor" href="#异步与事件" aria-hidden="true">#</a></h3><p>上文中说的“事件循环”，为什么里面有个事件呢？那是因为：消息队列中的每条消息实际上都对应着一个事件</p><p>上文中一直没有提到一类很重要的异步过程：DOM 事件。举例来说</p><p>从事件的角度来看，在按钮上添加一个鼠标单击事件的事件监听器；当用户点击按钮时，鼠标单击事件触发，事件监听器函数被调用</p><p>从异步过程的角度看，addEventListener 函数就是异步过程的发起函数，事件监听器函数就是异步过程的回调函数。事件触发时，表示异步任务完成，会将事件监听器函数封装成一条消息放到消息队列中，等待主线程执行。</p><p>事件的概念实际上并不是必须的，事件机制实际上就是异步过程的通知机制。我觉得它的存在是为了编程接口对开发者更友好。</p><p>另一方面，所有的异步过程也都可以用事件来描述。例如：setTimeout 可以看成对应一个时间到了的事件。前文的 setTimeout(fn, 1000);可以看成：</p><h3 id="同步异步例子" tabindex="-1">同步异步例子 <a class="header-anchor" href="#同步异步例子" aria-hidden="true">#</a></h3><p>用一个生活中的例子总结一下同步和异步：在公路上，汽车一辆接一辆，有条不紊的运行。这时，有一辆车坏掉了。假如它停在原地进行修理，那么后面的车就会被堵住没法行驶，交通就乱套了。幸好旁边有应急车道，可以把故障车辆推到应急车道修理，而正常的车流不会受到任何影响。等车修好了，再从应急车道回到正常车道即可。唯一的影响就是，应急车道用多了，原来的车辆之间的顺序会有点乱</p><p>这就是同步和异步的区别。同步可以保证顺序一致，但是容易导致阻塞；异步可以解决阻塞问题，但是会改变顺序性</p><h3 id="生产者与消费者" tabindex="-1">生产者与消费者 <a class="header-anchor" href="#生产者与消费者" aria-hidden="true">#</a></h3><p>从生产者与消费者的角度看，异步过程是这样的：工作线程是生产者，主线程是消费者(只有一个消费者)。工作线程执行异步任务，执行完成后把对应的回调函数封装成一条消息放到消息队列中；主线程不断地从消息队列中取消息并执行，当消息队列空时主线程阻塞，直到消息队列再次非空。</p><h3 id="同步异步写法" tabindex="-1">同步异步写法 <a class="header-anchor" href="#同步异步写法" aria-hidden="true">#</a></h3><p>回调函数</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">f1</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">callback</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#61AFEF;">setTimeout</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#61AFEF;">callback</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">  }, </span><span style="color:#D19A66;">1000</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">f2</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;f2运行了&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#61AFEF;">f1</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">f2</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> f1(callback) {</span></span>
<span class="line"><span style="color:#B392F0;">  setTimeout(</span><span style="color:#F97583;">function</span><span style="color:#B392F0;"> () {</span></span>
<span class="line"><span style="color:#B392F0;">    callback()</span></span>
<span class="line"><span style="color:#B392F0;">  }</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#F8F8F8;">1000</span><span style="color:#B392F0;">)</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> f2() {</span></span>
<span class="line"><span style="color:#B392F0;">  </span><span style="color:#79B8FF;">console</span><span style="color:#B392F0;">.log(</span><span style="color:#FFAB70;">&#39;f2运行了&#39;</span><span style="color:#B392F0;">)</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"><span style="color:#B392F0;">f1(f2)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>事件监听</p><p>发布/订阅</p><p>Promises</p><h2 id="打开新网页" tabindex="-1">打开新网页 <a class="header-anchor" href="#打开新网页" aria-hidden="true">#</a></h2><p>wIndow.open 在新窗口打开网页</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">window</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">open</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;meeting/doc/doc2/lookFile.html?url&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#79B8FF;">window</span><span style="color:#B392F0;">.open(</span><span style="color:#FFAB70;">&#39;meeting/doc/doc2/lookFile.html?url&#39;</span><span style="color:#B392F0;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>通过 a 标签在新窗口打开网页</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">a</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">querySelector</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;a&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E06C75;">a</span><span style="color:#56B6C2;">!</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setAttribute</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;href&quot;</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;">window</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">any</span><span style="color:#ABB2BF;">).</span><span style="color:#E06C75;">BASE_URL</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;meeting/doc/doc2/lookFile.html?url=&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E06C75;">a</span><span style="color:#56B6C2;">!</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">click</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">a</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">document</span><span style="color:#B392F0;">.querySelector(</span><span style="color:#FFAB70;">&quot;a&quot;</span><span style="color:#B392F0;">)</span></span>
<span class="line"><span style="color:#B392F0;">a</span><span style="color:#F97583;">!</span><span style="color:#B392F0;">.setAttribute(</span><span style="color:#FFAB70;">&quot;href&quot;</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> (window </span><span style="color:#F97583;">as</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">any</span><span style="color:#B392F0;">).</span><span style="color:#79B8FF;">BASE_URL</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">+</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;meeting/doc/doc2/lookFile.html?url=&quot;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">+</span><span style="color:#B392F0;"> path)</span></span>
<span class="line"><span style="color:#B392F0;">a</span><span style="color:#F97583;">!</span><span style="color:#B392F0;">.click()</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>window.location.href 会替换当前网页</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark" tabindex="0"><code><span class="line"><span style="color:#E5C07B;">window</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">location</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">href</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;meeting/doc/doc2/lookFile.html?url&#39;</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light" tabindex="0"><code><span class="line"><span style="color:#79B8FF;">window</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">location</span><span style="color:#B392F0;">.href </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&#39;meeting/doc/doc2/lookFile.html?url&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,178),e=[o];function c(r,t,B,i,y,F){return a(),n("div",null,e)}const u=s(p,[["render",c]]);export{b as __pageData,u as default};
